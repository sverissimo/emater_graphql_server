# ---------- Base w/ pnpm ----------
FROM node:22-slim AS base
ENV PNPM_HOME=/usr/local/share/pnpm
ENV PATH=$PNPM_HOME:$PATH

RUN apt-get update -y && apt-get install -y --no-install-recommends openssl
RUN corepack enable && corepack prepare pnpm@10 --activate

# ---------- Deps (dev) ----------
FROM base AS deps
WORKDIR /app

COPY package.json pnpm-lock.yaml ./

RUN pnpm install --frozen-lockfile

# ---------- Build ----------
FROM base AS build
WORKDIR /app

COPY --from=deps /app/node_modules ./node_modules
COPY . .

RUN pnpm exec prisma generate
RUN pnpm run build

# Copy .graphql assets into dist, preserving folders
RUN bash -lc 'find src -name "*.graphql" -exec install -Dm644 "{}" "dist/{}" \;'

# ---------- Prune to prod deps ----------
FROM base AS prod-deps
WORKDIR /app

COPY package.json pnpm-lock.yaml ./
COPY prisma ./prisma

# approve scripts so @prisma/client postinstall runs `prisma generate`
RUN pnpm -s approve-builds @prisma/client @prisma/engines \
    && pnpm install --prod --frozen-lockfile \
    && pnpm add -D prisma@6.16 \
    && pnpm exec prisma generate \
    && pnpm remove prisma

# ---------- Runner ----------
FROM node:22-slim AS runner
WORKDIR /app

RUN apt-get update -y && apt-get install -y --no-install-recommends openssl \
    && rm -rf /var/lib/apt/lists/*

COPY --from=build /app/dist ./dist
COPY --from=prod-deps /app/node_modules ./node_modules

COPY package.json pnpm-lock.yaml ./

RUN usermod -u 1003 node && groupmod -g 1003 node
RUN chown -R node:node /app
RUN mkdir -p /home/node/logs && chown -R node:node /home/node/logs

USER node

CMD ["node", "dist/main.js"]
