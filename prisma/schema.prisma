// This is your Prisma schema file,
// learn more about it in the docs https//pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Produtor {
  id_pessoa             String                 @id @db.VarChar(36)
  id_pessoa_demeter     BigInt                 @unique @default(autoincrement()) @db.BigInt
  nm_pessoa             String?                @db.VarChar(100)
  ds_apelido            String?                @db.VarChar(80)
  sn_pronaf             Int?                   @db.SmallInt
  sn_ativo              Int                    @default(1) @db.SmallInt
  tp_sexo               String?                @db.Char(1)
  nr_cpf_cnpj           String?                @db.VarChar(14)
  dt_nascimento         DateTime?              @db.Date
  nr_identidade         String?                @db.VarChar(15)
  ds_orgao_expedidor    String?                @db.VarChar(10)
  fk_uf_emissor         Int?                   @db.Integer
  tp_desativacao        Int?                   @db.SmallInt
  dt_desativacao        DateTime?              @db.Timestamp(0)
  nm_nacionalidade      String?                @db.VarChar(100)
  fk_est_civil          Int?                   @db.Integer
  nm_mae                String?                @db.VarChar(100)
  nm_pai                String?                @db.VarChar(100)
  nm_profissao          String?                @db.VarChar(100)
  nr_ins_produtor_rural String?                @db.VarChar(40)
  dap                   String?                @db.VarChar(40)
  tp_pessoa             String?                @db.Char(1)
  id_und_empresa        String?                @db.Char(5)
  sn_principal_provedor Int?                   @db.SmallInt
  ds_email              String?                @db.VarChar(80)
  dt_update_record      DateTime               @db.Timestamp(0)
  id_sincronismo        String?                @db.VarChar(36)
  sn_ctd                Int?                   @db.Integer
  caf                   String?                @db.VarChar(24)
  produtor_propriedades ProdutorPropriedades[]
  perfis                Perfil[]

  @@map("ger_pessoa")
}

model Propriedade {
  id_pl_propriedade       BigInt                @id @default(autoincrement())
  nome_propriedade        String
  logradouro              String?               @db.VarChar(80)
  bairro                  String?               @db.VarChar(80)
  complemento             String?               @db.VarChar(80)
  cep                     String?               @db.VarChar(8)
  numero                  String?               @db.VarChar(15)
  area_total              Float?
  geo_ponto               String? // The data type USER-DEFINED is not supported in Prisma, you can handle it in your application logic
  geo_ponto_texto         String?               @db.VarChar(255)
  area_condominio         Boolean?              @default(false) @db.Boolean
  origem_ocupacao         String?               @db.VarChar(100)
  atividade_principal     String?               @db.VarChar(100)
  numero_registro_imovel  String?               @db.VarChar(50)
  nirf                    String?               @db.VarChar(100)
  car                     String?               @db.VarChar(100)
  ccir                    String?               @db.VarChar(100)
  numero_instalacao_cemig String?               @db.VarChar(15)
  distancia_sede          Float?
  tempo_ocupacao_imovel   Float?
  id_emater               String?               @db.VarChar(36)
  id_distrito             Int?                  @db.Integer
  id_municipio            Int?                  @db.Integer
  id_und_empresa          String?               @db.Char(5)
  id_sincronismo          String?               @db.VarChar(36)
  id_tipo_logradouro      Int?                  @db.Integer
  dt_update_record        DateTime              @default(now()) @db.Timestamp(0)
  ativo                   Boolean?              @db.Boolean
  ds_roteiro_acesso       String?               @db.VarChar(500)
  sn_ctd                  Int?                  @db.Integer
  produtor_propriedade    ProdutorPropriedades?
  atividade               Atividade?

  @@map("pl_propriedade")
}

model ProdutorPropriedades {
  id             BigInt      @id @default(autoincrement())
  produtor       Produtor    @relation(fields: [produtor_id], references: [id_pessoa_demeter])
  produtor_id    BigInt
  propriedade    Propriedade @relation(fields: [propriedade_id], references: [id_pl_propriedade])
  propriedade_id BigInt      @unique

  //@@id(fields: [produtor_id, propriedade_id])
}

model Perfil {
  id                                           Int            @id @default(autoincrement())
  tipo_perfil                                  String
  id_tecnico                                   Int
  id_cliente                                   BigInt
  produtor                                     Produtor       @relation(fields: [id_cliente], references: [id_pessoa_demeter])
  data_preenchimento                           DateTime?      @default(now())
  data_atualizacao                             DateTime?      @updatedAt
  participa_organizacao                        Boolean
  id_dados_producao_in_natura                  Int?
  nivel_tecnologico_cultivo                    Int?
  sistema_producao                             Int?
  condicao_posse                               Int?
  dap_caf_vigente                              Boolean?
  credito_rural                                Boolean?
  fonte_captacao_agua                          Int?
  forma_esgotamento_sanitario                  Int?
  possui_cadastro_car                          Boolean?
  aderiu_pra                                   Boolean?
  ciente_iniciativas_regularizacao_pra         Boolean?
  realiza_escalonamento_producao               Boolean?
  procedimento_pos_colheita                    Int?
  tipo_gestao_unidade                          String?
  pessoas_processamento_alimentos              Int?
  tipo_estabelecimento                         String?
  tipo_pessoa_juridica                         String?
  agroindustria_precisa_adaptacao_reforma      Boolean?
  possui_registro_orgao_fiscalizacao_sanitaria Boolean?
  orgao_fiscalizacao_sanitaria                 String?
  atividades_usam_recursos_hidricos            Int?
  atividades_com_regularizacao_ambiental       Int?
  possui_agroindustria_propria                 Boolean?
  grau_interesse_pnae                          String
  id_dados_producao_agro_industria             Int?           @unique()
  dados_producao                               DadosProducao? @relation(fields: [id_dados_producao_agro_industria], references: [id])
  atividade                                    Atividade?

  @@map("at_prf_see")
}

model DadosProducao {
  id                                       Int     @id //@default(autoincrement())
  controla_custos_producao                 Boolean
  dificuldade_fornecimento                 Int
  forma_entrega_produtos                   Int
  informacoes_adicionais                   String?
  local_comercializacao                    Int
  perfil                                   Perfil?
  tipo_regularizacao_ambiental             String
  tipo_regularizacao_uso_recursos_hidricos String
  valor_total_obtido_outros                Int
  valor_total_obtido_pnae                  Int

  @@map("at_prf_dados_producao")
}

model Atividade {
  id                     Int         @id
  id_perfil_see          Int         @unique
  id_propriedade         BigInt      @unique
  atividade              String
  producao_dedicada_pnae Boolean?
  perfil                 Perfil      @relation(fields: [id_perfil_see], references: [id])
  propriedade            Propriedade @relation(fields: [id_propriedade], references: [id_pl_propriedade])

  @@map("at_prf_see_propriedade")
}
