generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Produtor {
  id_pessoa_demeter         BigInt                      @id @default(autoincrement())
  nm_pessoa                 String?                     @db.VarChar(255)
  tp_sexo                   String?                     @db.VarChar(255)
  nr_cpf_cnpj               String?                     @unique @db.VarChar(255)
  dt_nascimento             DateTime?                   @db.Timestamptz(6)
  id_und_empresa            String?                     @db.VarChar(255)
  ds_email                  String?                     @db.VarChar(255)
  dt_update_record          DateTime                    @default(dbgenerated("'2023-03-29 17:22:54.641-03'::timestamp with time zone")) @db.Timestamptz(6)
  senha                     String?                     @db.VarChar(255)
  telefone                  String?                     @db.VarChar(255)
  status_account            String?                     @db.VarChar(255)
  ds_apelido                String?                     @db.VarChar(80)
  sn_ativo                  Int                         @default(1) @db.SmallInt
  dap                       String?                     @db.VarChar(40)
  dt_desativacao            DateTime?                   @db.Timestamp(6)
  nr_identidade             String?                     @db.VarChar(15)
  nr_ins_produtor_rural     String?                     @db.VarChar(40)
  nm_mae                    String?                     @db.VarChar(100)
  nm_nacionalidade          String?                     @db.VarChar(100)
  ds_orgao_expedidor        String?                     @db.VarChar(10)
  nm_pai                    String?                     @db.VarChar(100)
  sn_principal_provedor     Int?                        @db.SmallInt
  nm_profissao              String?                     @db.VarChar(100)
  sn_pronaf                 Int?                        @db.SmallInt
  tp_desativacao            Int?                        @db.SmallInt
  tp_pessoa                 String?                     @db.Char(1)
  fk_est_civil              Int?
  fk_uf_emissor             Int?
  id_pessoa                 String?                     @db.Char(36)
  id_sincronismo            String?                     @db.VarChar(36)
  caf                       String?                     @db.VarChar(24)
  at_cli_atend_prop         at_cli_atend_prop[]
  at_prf_see                Perfil[]
  pl_propriedade_ger_pessoa pl_propriedade_ger_pessoa[]

  @@index([dt_update_record], map: "ix_ger_pessoa_dt_update_record")
  @@index([nm_pessoa], map: "ix_ger_pessoa_nm_pessoa")
  @@map("ger_pessoa")
}

model Propriedade {
  id_pl_propriedade         BigInt                      @id(map: "pk_pl_propiedade") @default(autoincrement())
  nome_propriedade          String                      @db.VarChar(100)
  logradouro                String?                     @db.VarChar(80)
  bairro                    String?                     @db.VarChar(80)
  complemento               String?                     @db.VarChar(80)
  cep                       String?                     @db.VarChar(8)
  numero                    String?                     @db.VarChar(15)
  area_total                Decimal?                    @db.Decimal(13, 4)
  //geo_ponto                 Unsupported("geometry")?
  geo_ponto                 String?                     @db.Text()
  geo_ponto_texto           String?                     @db.VarChar(255)
  area_condominio           Boolean?                    @default(false)
  origem_ocupacao           String?                     @db.VarChar(100)
  atividade_principal       String?                     @db.VarChar(100)
  numero_registro_imovel    String?                     @db.VarChar(50)
  nirf                      String?                     @db.VarChar(100)
  car                       String?                     @db.VarChar(100)
  ccir                      String?                     @db.VarChar(100)
  numero_instalacao_cemig   String?                     @db.VarChar(15)
  distancia_sede            Decimal?                    @db.Decimal(15, 2)
  tempo_ocupacao_imovel     Float?
  id_emater                 String?                     @db.VarChar(36)
  id_distrito               Int?
  id_municipio              Int?
  id_und_empresa            String?                     @db.Char(5)
  id_sincronismo            String?                     @default(dbgenerated("(uuid_generate_v4())::character varying(36)")) @db.VarChar(36)
  id_tipo_logradouro        Int?
  dt_update_record          DateTime?                   @default(now()) @db.Timestamp(6)
  ativo                     Boolean?
  ds_roteiro_acesso         String?                     @db.VarChar(500)
  sn_ctd                    Int?
  municipio                 Municipio?                  @relation(fields: [id_municipio], references: [id_municipio])
  at_cli_atend_prop         at_cli_atend_prop[]
  at_prf_see_propriedade    at_prf_see_propriedade?
  pl_propriedade_ger_pessoa pl_propriedade_ger_pessoa[]

  @@index([nome_propriedade, logradouro])
  @@map("pl_propriedade")
}

model Municipio {
  id_municipio          Int           @id
  fk_estado             Int
  nm_municipio          String?       @db.VarChar(100)
  cd_ibge               String?       @db.VarChar(15)
  cd_cpi                String?       @db.VarChar(15)
  fk_reg_planejamento   Int?
  fk_reg_administrativa Int?
  dt_update_record      DateTime      @db.Timestamptz()
  fk_microterritorio    Int?
  data_atualizacao_rm   DateTime?     @db.Date
  tamanho_modulo_fiscal Float?
  nr_latitude           String?       @db.VarChar(10)
  nr_longitude          String?       @db.VarChar(10)
  Propriedade           Propriedade[]

  @@map("sep_municipio")
}

model Perfil {
  id                                           BigInt                     @id(map: "pk_at_prf_see") @default(autoincrement())
  data_preenchimento                           DateTime                   @db.Date
  data_atualizacao                             DateTime                   @db.Date
  tipo_perfil                                  String                     @db.VarChar(8)
  id_cliente                                   BigInt
  participa_organizacao                        Boolean?
  nivel_tecnologico_cultivo                    BigInt?
  sistema_producao                             BigInt?
  condicao_posse                               BigInt?
  dap_caf_vigente                              Boolean?
  credito_rural                                Boolean?
  fonte_captacao_agua                          BigInt?
  forma_esgotamento_sanitario                  BigInt?
  possui_cadastro_car                          Boolean?
  aderiu_pra                                   Boolean?
  ciente_iniciativas_regularizacao_pra         Boolean?
  realiza_escalonamento_producao               Boolean?
  procedimento_pos_colheita                    BigInt?
  tipo_gestao_unidade                          String?                    @db.VarChar(8)
  pessoas_processamento_alimentos              Int?
  tipo_estabelecimento                         String?                    @db.VarChar(16)
  tipo_pessoa_juridica                         String?                    @db.VarChar(16)
  agroindustria_precisa_adaptacao_reforma      Boolean?
  possui_registro_orgao_fiscalizacao_sanitaria Boolean?
  orgao_fiscalizacao_sanitaria                 String?                    @db.VarChar(64)
  id_tecnico                                   BigInt?
  atividades_usam_recursos_hidricos            BigInt?
  atividades_com_regularizacao_ambiental       BigInt?
  possui_agroindustria_propria                 Boolean?
  grau_interesse_pnae                          String?                    @db.VarChar(64)
  usuario                                      Usuario?                   @relation(fields: [id_tecnico], references: [id_usuario], onDelete: NoAction, onUpdate: NoAction, map: "at_prf_see_fk")
  ger_pessoa                                   Produtor                   @relation(fields: [id_cliente], references: [id_pessoa_demeter], onDelete: NoAction, onUpdate: NoAction, map: "fk_cliente")
  id_dados_producao_in_natura                  BigInt?
  id_dados_producao_agro_industria             BigInt?
  dados_producao_agro_industria                at_prf_see_dados_producao? @relation("agro_industria", fields: [id_dados_producao_agro_industria], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_dados_agroindustria")
  dados_producao_in_natura                     at_prf_see_dados_producao? @relation("in_natura", fields: [id_dados_producao_in_natura], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_dados_in_natura")
  at_prf_see_propriedade                       at_prf_see_propriedade?

  @@map("at_prf_see")
}

model at_prf_see_propriedade {
  id                     BigInt      @id(map: "pk_at_prf_see_propriedade") @default(autoincrement())
  id_propriedade         BigInt      @unique
  id_perfil_see          BigInt      @unique
  atividade              String?     @db.VarChar(64)
  producao_dedicada_pnae Boolean?
  at_prf_see             Perfil      @relation(fields: [id_perfil_see], references: [id], map: "fk_prf_see")
  pl_propriedade         Propriedade @relation(fields: [id_propriedade], references: [id_pl_propriedade], map: "fk_propriedade")
}

model at_prf_see_dados_producao {
  id                                       BigInt                       @id(map: "pk_at_prf_see_dados_producao") @default(autoincrement())
  controla_custos_producao                 Boolean?
  local_comercializacao                    BigInt?
  valor_total_obtido_pnae                  BigInt?
  forma_entrega_produtos                   BigInt?
  dificuldade_fornecimento                 BigInt?
  informacoes_adicionais                   String?                      @db.VarChar(2048)
  tipo_regularizacao_uso_recursos_hidricos String?                      @db.VarChar(32)
  tipo_regularizacao_ambiental             String?                      @db.VarChar(64)
  valor_total_obtido_outros                BigInt?
  perfis_com_agro_industria                Perfil[]                     @relation("agro_industria")
  perfis_com_in_natura                     Perfil[]                     @relation("in_natura")
  at_prf_see_grupos_produtos               at_prf_see_grupos_produtos[]
}

model at_prf_see_grupos_produtos {
  id                                   BigInt                    @id(map: "pk_at_prf_see_grupos_produtos") @default(autoincrement())
  id_dados_producao                    BigInt
  id_grupo_produtos                    BigInt
  producao_aproximada_ultimo_ano_pnae  BigInt?
  area_utilizada                       Float?
  producao_aproximada_ultimo_ano_total BigInt?
  at_prf_see_dados_producao            at_prf_see_dados_producao @relation(fields: [id_dados_producao], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_dados")
  at_prf_grupo_produto                 at_prf_grupo_produto      @relation(fields: [id_grupo_produtos], references: [id_grupo], onDelete: NoAction, onUpdate: NoAction)
  at_prf_see_produto                   at_prf_see_produto[]
}

model at_prf_grupo_produto {
  id_grupo                                  BigInt                       @id
  id_grupo_legado                           Int?
  tipo                                      Int?
  nm_grupo                                  String?                      @db.VarChar(100)
  dados_producao_estratificados_por_produto Boolean                      @default(false)
  at_prf_see_grupos_produtos                at_prf_see_grupos_produtos[]
}

model at_prf_see_produto {
  id                                   BigInt                     @id(map: "pk_at_prf_see_produto") @default(autoincrement())
  id_perfil_grupo                      BigInt
  id_produto                           BigInt
  area_utilizada                       Float?
  producao_aproximada_ultimo_ano_pnae  BigInt?
  producao_aproximada_ultimo_ano_total BigInt?
  at_prf_see_grupos_produtos           at_prf_see_grupos_produtos @relation(fields: [id_perfil_grupo], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_perfil_see")
  at_prf_produto                       at_prf_produto             @relation(fields: [id_produto], references: [id_produto], onDelete: NoAction, onUpdate: NoAction)
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model at_prf_produto {
  id_produto          BigInt               @id
  id_legado           Int?
  nm_produto          String?              @db.VarChar(100)
  tipo                Int?
  id_grupo_legado     Int?
  sg_und_medida       String?              @db.VarChar(10)
  at_prf_see_produtos at_prf_see_produto[]
}

model at_acao {
  id_at_acao         BigInt           @id(map: "pk_at_acao") @default(autoincrement())
  descricao          String           @db.VarChar(100)
  data_atualizacao   DateTime         @db.Date
  ativo              Boolean
  indice_propriedade Int              @default(0) @db.SmallInt
  indice_periodo     Int              @default(0) @db.SmallInt
  dt_update_record   DateTime?        @db.Timestamp(6)
  quant_max_clientes Int?             @db.SmallInt
  at_atendimento     at_atendimento[]
}

model at_arquivo {
  id_at_arquivo              BigInt         @id(map: "pk_at_arquivo") @default(autoincrement())
  nome_arquivo               String         @db.VarChar(100)
  arquivo                    String
  id_at_atendimento          BigInt
  ativo                      Boolean
  tipo_arquivo               String         @db.VarChar(100)
  dt_update_record           DateTime?      @default(now()) @db.Timestamp(6)
  id_sincronismo             String?        @default(dbgenerated("(uuid_generate_v4())::character varying(36)")) @db.VarChar(36)
  id_sincronismo_atendimento String?        @db.VarChar(36)
  id_und_empresa             String?        @db.VarChar(5)
  at_atendimento             at_atendimento @relation(fields: [id_at_atendimento], references: [id_at_atendimento], onDelete: NoAction, onUpdate: NoAction, map: "fk_at_arquivo_atendimento")
}

model at_atendimento {
  id_at_atendimento        BigInt                     @id(map: "pk_at_atendimento") @default(autoincrement())
  descricao                String?                    @db.VarChar(60)
  data_inicio_atendimento  DateTime                   @db.Date
  data_fim_atendimento     DateTime?                  @db.Date
  data_validacao           DateTime?                  @db.Date
  usuario_validacao        BigInt?
  data_atualizacao         DateTime                   @db.Date
  id_at_status             Int                        @db.SmallInt
  ativo                    Boolean
  id_at_acao               BigInt
  id_und_empresa           String                     @db.Char(5)
  qtd_alunos               Int?
  data_criacao             DateTime                   @db.Date
  id_sincronismo           String?                    @default(dbgenerated("(uuid_generate_v4())::character varying(36)")) @db.VarChar(36)
  orientacao_tecnica       String?
  dt_update_record         DateTime?                  @db.Timestamp(6)
  //geo_ponto                Unsupported("geometry")?
  geo_ponto                String?                    @db.Text()
  geo_ponto_texto          String?                    @db.VarChar(255)
  sincroniza               Int?                       @default(0) @db.SmallInt
  processamento            Int?                       @default(0) @db.SmallInt
  login_usuario            String?
  id_at_anterior           BigInt?
  fk_und_empresa           String?                    @db.Char(5)
  auto_atendimento         Int?                       @db.SmallInt
  data_sei                 DateTime?                  @db.Date
  at_arquivo               at_arquivo[]
  usuario                  Usuario?                   @relation(fields: [usuario_validacao], references: [id_usuario], onDelete: NoAction, onUpdate: NoAction, map: "fk2wy9cxuwsh3cyhmip358l0l6c")
  at_acao                  at_acao                    @relation(fields: [id_at_acao], references: [id_at_acao], onDelete: NoAction, onUpdate: NoAction, map: "fk8q4s39wy7we2slstaxkbxd737")
  link_pdf                 String?
  at_atendimento_indicador at_atendimento_indicador[]
  at_atendimento_usuario   at_atendimento_usuario[]
  at_cli_atend_prop        at_cli_atend_prop[]
}

model at_atendimento_indicador {
  id_at_atendimento_indicador BigInt         @id(map: "pk_at_atendimento_indicador") @default(autoincrement())
  id_at_atendimento           BigInt
  id_at_indicador             BigInt
  id_und_empresa              String?        @db.VarChar(5)
  id_sincronismo              String?        @default(dbgenerated("(uuid_generate_v4())::character varying(36)")) @db.VarChar(36)
  id_sincronismo_atendimento  String?        @db.VarChar(36)
  dt_update_record            DateTime?      @default(now()) @db.Timestamp(6)
  at_indicador                at_indicador   @relation(fields: [id_at_indicador], references: [id_at_indicador], onDelete: NoAction, onUpdate: NoAction, map: "fk1xax2r08665xreflnwtecl0t4")
  at_atendimento              at_atendimento @relation(fields: [id_at_atendimento], references: [id_at_atendimento], onDelete: NoAction, onUpdate: NoAction, map: "fk_at_atendimento_indicador")

  @@unique([id_at_atendimento, id_at_indicador], map: "ix_at_atendimento_indicador")
}

model at_atendimento_usuario {
  id_at_atendimento          BigInt
  id_usuario                 BigInt
  id_und_empresa             String?        @db.VarChar(5)
  id_sincronismo             String?        @default(dbgenerated("(uuid_generate_v4())::character varying(36)")) @db.VarChar(36)
  id_sincronismo_atendimento String?        @db.VarChar(36)
  dt_update_record           DateTime?      @default(now()) @db.Timestamp(6)
  at_atendimento             at_atendimento @relation(fields: [id_at_atendimento], references: [id_at_atendimento], onDelete: NoAction, onUpdate: NoAction, map: "fk_at_atendimento_usuario")
  usuario                    Usuario        @relation(fields: [id_usuario], references: [id_usuario], onDelete: NoAction, onUpdate: NoAction, map: "fk_usuario_atendimento")

  @@id([id_at_atendimento, id_usuario], map: "pk_at_atendimento_usuario")
}

model at_cli_atend_prop {
  id_at_atendimento             BigInt
  id_pessoa_demeter             BigInt
  id_pl_propriedade             BigInt?
  id_at_cli_atend_prop          BigInt         @id(map: "at_atendimento_cliente_propriedade_pkey") @default(autoincrement())
  id_und_empresa                String?        @db.VarChar(5)
  id_sincronismo_atendimento    String?        @db.VarChar(36)
  id_sincronismo_ger_pessoa     String?        @db.VarChar(36)
  id_sincronismo_pl_propriedade String?        @db.VarChar(36)
  id_sincronismo                String?        @default(dbgenerated("(uuid_generate_v4())::character varying(36)")) @db.VarChar(36)
  dt_update_record              DateTime?      @default(now()) @db.Timestamp(6)
  fk_cat_pessoa                 Int?
  ger_pessoa                    Produtor       @relation(fields: [id_pessoa_demeter], references: [id_pessoa_demeter], onDelete: NoAction, onUpdate: NoAction, map: "fk29teh4plu2duhojqqnnf3j8cu")
  pl_propriedade                Propriedade?   @relation(fields: [id_pl_propriedade], references: [id_pl_propriedade], onDelete: NoAction, onUpdate: NoAction, map: "fk2hbjbvci9gd4tw04o1t2xrcku")
  at_atendimento                at_atendimento @relation(fields: [id_at_atendimento], references: [id_at_atendimento], onDelete: NoAction, onUpdate: NoAction, map: "fk_at_atendimento_cliente")
}

model at_grupo_indicador {
  id_at_grupo_indicador           BigInt              @id(map: "pk_at_grupo_indicador") @default(autoincrement())
  descricao                       String              @db.VarChar(100)
  data_atualizacao                DateTime            @db.Date
  ativo                           Boolean
  validar                         Boolean             @default(false)
  data_max_validacao              DateTime?           @db.Date
  dt_update_record                DateTime?           @db.Timestamp(6)
  permitir_unica_meta_atendimento Boolean?            @default(false)
  sn_super_grupo                  Int?                @db.SmallInt
  tp_chamada                      Int?                @db.SmallInt
  at_grupo_indicador              at_grupo_indicador  @relation("at_grupo_indicadorToat_grupo_indicador", fields: [id_at_grupo_indicador], references: [id_at_grupo_indicador], onDelete: NoAction, onUpdate: NoAction, map: "fkpbyyndup2h4mhwv3q5x6ovj55")
  other_at_grupo_indicador        at_grupo_indicador? @relation("at_grupo_indicadorToat_grupo_indicador")
  at_indicador                    at_indicador[]
}

model at_indicador {
  id_at_indicador          BigInt                     @id(map: "pk_at_indicador") @default(autoincrement())
  id_at_grupo_indicador    BigInt
  data_atualizacao         DateTime                   @db.Date
  ativo                    Boolean
  id_at_produto            BigInt
  dt_update_record         DateTime?                  @db.Timestamp(6)
  anexo_obrigatorio        Boolean?                   @default(false)
  foto_obrigatoria         Boolean                    @default(false)
  at_atendimento_indicador at_atendimento_indicador[]
  at_grupo_indicador       at_grupo_indicador         @relation(fields: [id_at_grupo_indicador], references: [id_at_grupo_indicador], onDelete: NoAction, onUpdate: NoAction, map: "fk3qnbwkkgwfu9fdtgl1gtry1bp")
  at_produto               at_produto                 @relation(fields: [id_at_produto], references: [id_at_produto], onDelete: NoAction, onUpdate: NoAction, map: "fk_at_produto")
}

model ger_cargo {
  id_cargo         String    @id @db.Char(4)
  nm_cargo         String    @db.VarChar(100)
  dt_update_record DateTime  @db.Timestamp(6)
  usuario          Usuario[]
}

model pl_propriedade_ger_pessoa {
  id_pl_propriedade          BigInt
  id_pessoa_demeter          BigInt
  id_und_empresa             String?     @db.Char(5)
  id_pl_tipo_posse           Int?        @db.SmallInt
  id_sincronismo_cliente     String?     @db.VarChar(36)
  id_sincronismo_propriedade String?     @db.VarChar(36)
  dt_update_record           DateTime?   @default(now()) @db.Timestamp(6)
  dt_inicio_contrato         DateTime?   @db.Timestamp(6)
  dt_termino_contrato        DateTime?   @db.Timestamp(6)
  ger_pessoa                 Produtor    @relation(fields: [id_pessoa_demeter], references: [id_pessoa_demeter], onDelete: NoAction, onUpdate: NoAction, map: "fk_ger_pessoa_propriedade")
  pl_propriedade             Propriedade @relation(fields: [id_pl_propriedade], references: [id_pl_propriedade], onDelete: NoAction, onUpdate: NoAction, map: "fk_propriedade_ger_pessoa")

  @@id([id_pl_propriedade, id_pessoa_demeter], map: "pk_propriedade_ger_pessoa")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model spatial_ref_sys {
  srid      Int     @id
  auth_name String? @db.VarChar(256)
  auth_srid Int?
  srtext    String? @db.VarChar(2048)
  proj4text String? @db.VarChar(2048)
}

model Usuario {
  id_usuario                   BigInt                   @id(map: "pk_usuario") @default(autoincrement())
  login_usuario                String                   @unique(map: "uq_usuario_login") @db.VarChar(255)
  nome_usuario                 String?                  @db.VarChar(255)
  email_usuario                String?                  @db.VarChar(255)
  celular_usuario              String?                  @db.VarChar(255)
  token_demeter                String                   @db.VarChar(255)
  data_cadastro                DateTime                 @db.Date
  data_expiracao_token_demeter DateTime                 @db.Date
  ativo                        Boolean
  cpf_usuario                  String?                  @db.VarChar(14)
  matricula_usuario            String?                  @db.Char(5)
  digito_matricula             String?                  @db.Char(1)
  situacao_emater              String?                  @db.Char(1)
  id_und_empresa               String?                  @db.Char(5)
  id_cargo                     String?                  @db.Char(4)
  orgao_classe                 String?                  @db.VarChar(30)
  sexo_usuario                 String?                  @db.Char(1)
  dt_update_record             DateTime?                @default(now()) @db.Date
  at_atendimento               at_atendimento[]
  at_atendimento_usuario       at_atendimento_usuario[]
  at_prf_see                   Perfil[]
  ger_cargo                    ger_cargo?               @relation(fields: [id_cargo], references: [id_cargo], onDelete: NoAction, onUpdate: NoAction, map: "fk5j2oxae47ac7gxtfitkc7jwlg")
  perfil_demeter               perfil_usuario[]

  @@map("usuario")
}

model perfil {
  id_perfil        BigInt           @id
  descricao_perfil String           @db.VarChar(255)
  dt_update_record DateTime?        @db.Timestamp(6)
  perfil_usuario   perfil_usuario[]
}

model perfil_usuario {
  id_perfil        BigInt    @unique
  perfil           perfil    @relation(fields: [id_perfil], references: [id_perfil])
  usuario          Usuario   @relation(fields: [id_usuario], references: [id_usuario])
  id_usuario       BigInt
  dt_update_record DateTime? @db.Timestamp(6)
}

model at_produto {
  id_at_produto    BigInt         @id(map: "pk_at_produto") @default(autoincrement())
  nome             String         @db.VarChar(100)
  dt_update_record DateTime?      @db.Timestamp(6)
  at_indicador     at_indicador[]
}
