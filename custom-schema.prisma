generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-1.1.x"]
}

datasource db {
  provider = "postgresql"
  url      = "postgresql://U_DEMETER_HMG:U_DEMETER_HMG@10.24.0.47:5432/DEMETER_HMG?schema=public"
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ag_evento_agenda {
  id_ag_evento_agenda BigInt              @id(map: "pk_ag_evento_agenda") @default(autoincrement())
  descricao           String?             @db.VarChar(100)
  sn_ativo            Int                 @default(1) @db.SmallInt
  data_inicio         DateTime            @db.Timestamp(6)
  data_fim            DateTime?           @db.Timestamp(6)
  dt_update_record    DateTime?           @db.Timestamp(6)
  observacao          String?             @db.VarChar(400)
  id_usuario          BigInt?
  usuario             usuario?            @relation(fields: [id_usuario], references: [id_usuario], onDelete: NoAction, onUpdate: NoAction, map: "fk_ag_evento_agenda_id_usuario")
  ag_evento_usuario   ag_evento_usuario[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ag_evento_usuario {
  id_ag_evento_agenda BigInt
  id_usuario          BigInt
  realizado           Boolean          @default(false)
  usuario             usuario          @relation(fields: [id_usuario], references: [id_usuario], onDelete: NoAction, onUpdate: NoAction, map: "fk2dypjscdro3m2ouctwlg8b1tl")
  ag_evento_agenda    ag_evento_agenda @relation(fields: [id_ag_evento_agenda], references: [id_ag_evento_agenda], onDelete: NoAction, onUpdate: NoAction, map: "fk8mibks1c70nyqv04qawp35l18")

  @@id([id_ag_evento_agenda, id_usuario], map: "pk_ag_evento_usuario")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model al_evento {
  id_al_evento      BigInt              @id(map: "pk_al_evento") @default(autoincrement())
  id_al_tipo_evento Int
  id_al_status      Int
  descricao         String              @db.VarChar(255)
  origem            String              @db.VarChar(255)
  data_criacao      DateTime            @db.Timestamp(6)
  data_inicio       DateTime            @db.Timestamp(6)
  data_fim          DateTime            @db.Timestamp(6)
  mensagem          String
  dt_update_record  DateTime?           @db.Timestamp(6)
  al_tipo_evento    al_tipo_evento      @relation(fields: [id_al_tipo_evento], references: [id_al_tipo_evento], onDelete: NoAction, onUpdate: NoAction, map: "fk4sl7mef5abkc45stk81cmn8lf")
  al_status         al_status           @relation(fields: [id_al_status], references: [id_al_status], onDelete: NoAction, onUpdate: NoAction, map: "fk620c9lemio9pnbixtkkvp3qqd")
  al_evento_usuario al_evento_usuario[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model al_evento_usuario {
  id_al_evento     BigInt
  id_usuario       BigInt
  data_leitura     DateTime? @db.Timestamp(6)
  dt_update_record DateTime? @db.Timestamp(6)
  usuario          usuario   @relation(fields: [id_usuario], references: [id_usuario], onDelete: NoAction, onUpdate: NoAction, map: "fk6u3utg5ggrjysjmb9a756pdbu")
  al_evento        al_evento @relation(fields: [id_al_evento], references: [id_al_evento], onDelete: NoAction, onUpdate: NoAction, map: "fk_al_evento_usuario_al_evento")

  @@id([id_usuario, id_al_evento], map: "pk_al_evento_usuario")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model al_status {
  id_al_status     Int         @id(map: "pk_al_status") @default(autoincrement())
  descricao        String      @db.VarChar(50)
  dt_update_record DateTime?   @db.Timestamp(6)
  al_evento        al_evento[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model al_tipo_evento {
  id_al_tipo_evento Int         @id(map: "pk_al_tipo_evento") @default(autoincrement())
  descricao         String?     @db.VarChar(50)
  dt_update_record  DateTime?   @db.Timestamp(6)
  al_evento         al_evento[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model as_analise {
  id_as_analise                 BigInt                    @id @default(autoincrement())
  id_pessoa_demeter             BigInt
  id_pl_propriedade             BigInt
  id_usuario                    BigInt
  id_as_tipo_analise            BigInt
  id_as_tipo_aproximacao        BigInt
  id_as_laboratorio             BigInt?
  id_as_tecido_vegetal          BigInt?
  id_as_textura                 BigInt?
  id_as_solo                    BigInt?
  data_analise                  DateTime?                 @db.Date
  descricao_gleba               String                    @db.VarChar(20)
  descricao_comunidade          String?                   @db.VarChar(100)
  descricao_amostra             String?                   @db.VarChar(40)
  observacao_final              String?
  ativo                         Boolean                   @default(true)
  dt_update_record              DateTime                  @default(now()) @db.Timestamp(6)
  id_as_metodo_calculo          BigInt?
  id_as_cultura                 BigInt?
  possui_vocorocas              Boolean?
  possui_assoreamento           Boolean?
  id_as_profundidade_efetiva    Int?
  id_as_permeabilidade          Int?
  id_as_pedregosidade           Int?
  id_as_risco_imundacao         Int?
  id_as_grau_erosao_laminar     Int?
  id_as_erosao_sulcos           Int?
  id_as_classe_declividade      Int?
  id_as_drenagem                Int?
  teor_argila                   Float?
  id_as_plasticidade            Int?
  id_as_pegajosidade            Int?
  tipo_ph                       Int?
  valor_fosforo_remanescente    Float?
  percentual_teror_calcio_gesso Float?
  percentual_prnt               Float?
  percentual_oxido_calcio       Float?
  percentual_oxido_magnesio     Float?
  percentual_superficie_coberta Float?
  profundidade_solo             Float?
  tipo_classificacao_fosforo    Int?
  id_as_fertilizante_organico   BigInt?
  dose_fertilizante_organico    Float?
  as_tipo_analise               as_tipo_analise           @relation(fields: [id_as_tipo_analise], references: [id_as_tipo_analise], onDelete: NoAction, onUpdate: NoAction, map: "fk8kncy3d63p7e7ng4a0tfo1ehj")
  as_tecido_vegetal             as_tecido_vegetal?        @relation(fields: [id_as_tecido_vegetal], references: [id_as_tecido_vegetal], onDelete: NoAction, onUpdate: NoAction, map: "fk9e5pmgdvjn20ofnto623bop37")
  as_fertilizante               as_fertilizante?          @relation(fields: [id_as_fertilizante_organico], references: [id_as_fertilizante], onDelete: NoAction, onUpdate: NoAction, map: "fk9sbuekp9h7nvgkekxxjfy8ym1")
  ger_pessoa                    ger_pessoa                @relation(fields: [id_pessoa_demeter], references: [id_pessoa_demeter], onDelete: NoAction, onUpdate: NoAction, map: "fk_analise_cliente")
  as_cultura                    as_cultura?               @relation(fields: [id_as_cultura], references: [id_as_cultura], onDelete: NoAction, onUpdate: NoAction, map: "fk_analise_cultura")
  as_classe_declividade         as_classe_declividade?    @relation(fields: [id_as_classe_declividade], references: [id_as_classe_declividade], onDelete: NoAction, onUpdate: NoAction, map: "fk_analise_declividade")
  as_drenagem                   as_drenagem?              @relation(fields: [id_as_drenagem], references: [id_as_drenagem], onDelete: NoAction, onUpdate: NoAction, map: "fk_analise_drenagem")
  as_erosao_sulcos              as_erosao_sulcos?         @relation(fields: [id_as_erosao_sulcos], references: [id_as_erosao_sulcos], onDelete: NoAction, onUpdate: NoAction, map: "fk_analise_erosao_sulcos")
  as_grau_erosao_laminar        as_grau_erosao_laminar?   @relation(fields: [id_as_grau_erosao_laminar], references: [id_as_grau_erosao_laminar], onDelete: NoAction, onUpdate: NoAction, map: "fk_analise_grau_erosao")
  as_laboratorio                as_laboratorio?           @relation(fields: [id_as_laboratorio], references: [id_as_laboratorio], onDelete: NoAction, onUpdate: NoAction, map: "fk_analise_laboratorio")
  as_metodo_calculo             as_metodo_calculo?        @relation(fields: [id_as_metodo_calculo], references: [id_as_metodo_calculo], onDelete: NoAction, onUpdate: NoAction, map: "fk_analise_metodo_calculo")
  as_pedregosidade              as_pedregosidade?         @relation(fields: [id_as_pedregosidade], references: [id_as_pedregosidade], onDelete: NoAction, onUpdate: NoAction, map: "fk_analise_pedregosidade")
  as_pegajosidade               as_pegajosidade?          @relation(fields: [id_as_pegajosidade], references: [id_as_pegajosidade], onDelete: NoAction, onUpdate: NoAction, map: "fk_analise_pegajosidade")
  as_permeabilidade             as_permeabilidade?        @relation(fields: [id_as_permeabilidade], references: [id_as_permeabilidade], onDelete: NoAction, onUpdate: NoAction, map: "fk_analise_permeabilidade")
  as_plasticidade               as_plasticidade?          @relation(fields: [id_as_plasticidade], references: [id_as_plasticidade], onDelete: NoAction, onUpdate: NoAction, map: "fk_analise_plasticidade")
  as_profunidade_efetiva        as_profunidade_efetiva?   @relation(fields: [id_as_profundidade_efetiva], references: [id_as_profundidade_efetiva], onDelete: NoAction, onUpdate: NoAction, map: "fk_analise_profunidade_efetiva")
  pl_propriedade                pl_propriedade            @relation(fields: [id_pl_propriedade], references: [id_pl_propriedade], onDelete: NoAction, onUpdate: NoAction, map: "fk_analise_propriedade")
  as_risco_imundacao            as_risco_imundacao?       @relation(fields: [id_as_risco_imundacao], references: [id_as_risco_imundacao], onDelete: NoAction, onUpdate: NoAction, map: "fk_analise_risco_imundacao")
  as_solo                       as_solo?                  @relation(fields: [id_as_solo], references: [id_as_solo], onDelete: NoAction, onUpdate: NoAction, map: "fk_analise_solo")
  as_textura                    as_textura?               @relation(fields: [id_as_textura], references: [id_as_textura], onDelete: NoAction, onUpdate: NoAction, map: "fk_analise_textura")
  as_tipo_aproximacao           as_tipo_aproximacao       @relation(fields: [id_as_tipo_aproximacao], references: [id_as_tipo_aproximacao], onDelete: NoAction, onUpdate: NoAction, map: "fk_analise_tipo_aproximacao")
  usuario                       usuario                   @relation(fields: [id_usuario], references: [id_usuario], onDelete: NoAction, onUpdate: NoAction, map: "fk_analise_usuario")
  as_analise_calagem            as_analise_calagem?
  as_analise_elemento           as_analise_elemento[]
  as_analise_fertilizante       as_analise_fertilizante[]
  as_analise_gessagem           as_analise_gessagem?
  as_balanco_nutricional        as_balanco_nutricional[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model as_analise_calagem {
  id_as_analise                  BigInt     @id
  valor_dose_neutralizacao_alsmt Float?
  valor_dose_neutralizacao_alcmt Float?
  valor_dose_saturacao_bases     Float?
  dt_update_record               DateTime   @default(now()) @db.Timestamp(6)
  as_analise                     as_analise @relation(fields: [id_as_analise], references: [id_as_analise], onDelete: NoAction, onUpdate: NoAction, map: "fk8bblbcpswdmtlihy24er8358i")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model as_analise_elemento {
  id_as_analise_elemento BigInt             @id @default(autoincrement())
  id_as_analise          BigInt
  id_as_elemento         BigInt
  id_as_unidade_medida   BigInt?
  valor_amostra          Float?
  valor_convertido       Float?
  numero_camada          Int?
  diagnostico            String?            @db.VarChar(100)
  dt_update_record       DateTime           @default(now()) @db.Timestamp(6)
  as_analise             as_analise         @relation(fields: [id_as_analise], references: [id_as_analise], onDelete: NoAction, onUpdate: NoAction, map: "fk5fvv6y1dawr9pc2h163nbp4j5")
  as_elemento            as_elemento        @relation(fields: [id_as_elemento], references: [id_as_elemento], onDelete: NoAction, onUpdate: NoAction, map: "fk_analise_elemento")
  as_unidade_medida      as_unidade_medida? @relation(fields: [id_as_unidade_medida], references: [id_as_unidade_medida], onDelete: NoAction, onUpdate: NoAction, map: "fk_analise_unidade_medida")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model as_analise_fertilizante {
  id_as_analise_fertilizante                                                             BigInt           @id @default(autoincrement())
  id_as_analise                                                                          BigInt
  numero_cobertura                                                                       Int?
  fase_plantio                                                                           Boolean          @default(false)
  id_as_fertilizante_nitrogenio                                                          BigInt?
  dose_fertilizante_nitrogenio                                                           Float?
  id_as_fertilizante_fosforo                                                             BigInt?
  dose_fertilizante_fosforo                                                              Float?
  id_as_fertilizante_potassio                                                            BigInt?
  dose_fertilizante_potassio                                                             Float?
  id_as_fertilizante_formulado                                                           BigInt?
  dose_fertilizante_formulado                                                            Float?
  id_as_fertilizante_outro                                                               BigInt?
  dose_fertilizante_outro                                                                Float?
  dt_update_record                                                                       DateTime         @default(now()) @db.Timestamp(6)
  as_analise                                                                             as_analise       @relation(fields: [id_as_analise], references: [id_as_analise], onDelete: NoAction, onUpdate: NoAction, map: "fk2dra2g7msber3qq5r9tuuntu9")
  as_fertilizante_as_analise_fertilizante_id_as_fertilizante_formuladoToas_fertilizante  as_fertilizante? @relation("as_analise_fertilizante_id_as_fertilizante_formuladoToas_fertilizante", fields: [id_as_fertilizante_formulado], references: [id_as_fertilizante], onDelete: NoAction, onUpdate: NoAction, map: "fk4svgriv9g2jx7hjq1nbxr0fvj")
  as_fertilizante_as_analise_fertilizante_id_as_fertilizante_nitrogenioToas_fertilizante as_fertilizante? @relation("as_analise_fertilizante_id_as_fertilizante_nitrogenioToas_fertilizante", fields: [id_as_fertilizante_nitrogenio], references: [id_as_fertilizante], onDelete: NoAction, onUpdate: NoAction, map: "fk6esx1o6yrdejnpwo563rdo04c")
  as_fertilizante_as_analise_fertilizante_id_as_fertilizante_fosforoToas_fertilizante    as_fertilizante? @relation("as_analise_fertilizante_id_as_fertilizante_fosforoToas_fertilizante", fields: [id_as_fertilizante_fosforo], references: [id_as_fertilizante], onDelete: NoAction, onUpdate: NoAction, map: "fk8qbb24mik7laqcpkao41kukh6")
  as_fertilizante_as_analise_fertilizante_id_as_fertilizante_outroToas_fertilizante      as_fertilizante? @relation("as_analise_fertilizante_id_as_fertilizante_outroToas_fertilizante", fields: [id_as_fertilizante_outro], references: [id_as_fertilizante], onDelete: NoAction, onUpdate: NoAction, map: "fk_fertilizante_outro")
  as_fertilizante_as_analise_fertilizante_id_as_fertilizante_potassioToas_fertilizante   as_fertilizante? @relation("as_analise_fertilizante_id_as_fertilizante_potassioToas_fertilizante", fields: [id_as_fertilizante_potassio], references: [id_as_fertilizante], onDelete: NoAction, onUpdate: NoAction, map: "fk_fertilizante_potassio")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model as_analise_gessagem {
  id_as_analise                  BigInt     @id
  valor_dose_neutralizacao_alsmt Float?
  valor_dose_neutralizacao_alcmt Float?
  valor_dose_saturacao_bases     Float?
  valor_dose_fosforo_remsub      Float?
  valor_dose_teor_argila_sub     Float?
  dt_update_record               DateTime   @default(now()) @db.Timestamp(6)
  as_analise                     as_analise @relation(fields: [id_as_analise], references: [id_as_analise], onDelete: NoAction, onUpdate: NoAction, map: "fk_analise")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model as_balanco_nutricional {
  id_as_balanco_nutricional BigInt     @id @default(autoincrement())
  id_as_analise             BigInt
  numero_cobertura          Int?
  fase_plantio              Boolean    @default(false)
  valor_antes_n             Float?
  valor_depois_n            Float?
  valor_antes_p             Float?
  valor_depois_p            Float?
  valor_antes_k             Float?
  valor_depois_k            Float?
  valor_antes_s             Float?
  valor_depois_s            Float?
  valor_antes_ca            Float?
  valor_depois_ca           Float?
  valor_antes_mg            Float?
  valor_depois_mg           Float?
  valor_antes_zn            Float?
  valor_depois_zn           Float?
  valor_antes_b             Float?
  valor_depois_b            Float?
  valor_antes_cu            Float?
  valor_depois_cu           Float?
  valor_antes_mn            Float?
  valor_depois_mn           Float?
  valor_antes_mo            Float?
  valor_depois_mo           Float?
  valor_antes_fe            Float?
  valor_depois_fe           Float?
  valor_antes_co            Float?
  valor_depois_co           Float?
  valor_antes_cl            Float?
  valor_depois_cl           Float?
  dt_update_record          DateTime   @default(now()) @db.Timestamp(6)
  as_analise                as_analise @relation(fields: [id_as_analise], references: [id_as_analise], onDelete: NoAction, onUpdate: NoAction, map: "fk_analise")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model as_capacidade_solo {
  id_as_capacidade_solo BigInt               @id @default(autoincrement())
  numero_classe         String               @db.VarChar(6)
  recomendacao          String?
  possui_classe         Boolean?
  ativo                 Boolean              @default(true)
  dt_update_record      DateTime             @default(now()) @db.Timestamp(6)
  as_cultura_analise    as_cultura_analise[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model as_classe_declividade {
  id_as_classe_declividade Int          @id @default(autoincrement())
  descricao                String       @db.VarChar(100)
  ativo                    Boolean      @default(true)
  dt_update_record         DateTime     @default(now()) @db.Timestamp(6)
  as_analise               as_analise[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model as_cultura {
  id_as_cultura          BigInt                   @id @default(autoincrement())
  nome                   String                   @db.VarChar(50)
  ativo                  Boolean                  @default(true)
  dt_update_record       DateTime                 @default(now()) @db.Timestamp(6)
  isa                    Boolean?                 @default(false)
  as_analise             as_analise[]
  as_cultura_metodo      as_cultura_metodo[]
  is_atividade_executada is_atividade_executada[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model as_cultura_analise {
  id_as_cultura_analise BigInt             @id @default(autoincrement())
  id_as_metodo_calculo  BigInt
  id_as_capacidade_uso  BigInt
  ativo                 Boolean            @default(true)
  dt_update_record      DateTime           @default(now()) @db.Timestamp(6)
  as_capacidade_solo    as_capacidade_solo @relation(fields: [id_as_capacidade_uso], references: [id_as_capacidade_solo], onDelete: NoAction, onUpdate: NoAction, map: "fk7wmjacjcsj1q1i8n3x3w5x3bf")
  as_metodo_calculo     as_metodo_calculo  @relation(fields: [id_as_metodo_calculo], references: [id_as_metodo_calculo], onDelete: NoAction, onUpdate: NoAction, map: "fk_cultura_analise_metodo")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model as_cultura_metodo {
  id_as_cultura_metodo      BigInt                      @id @default(autoincrement())
  id_as_metodo_calculo      BigInt
  id_as_cultura             BigInt
  id_as_unidade_cultura     BigInt
  descricao_espacamento     String?                     @db.VarChar(50)
  descricao_produtividade   String?                     @db.VarChar(50)
  observacao                String?
  valor_mt                  Float?
  valor_x                   Float?
  valor_v                   Float?
  ativo                     Boolean                     @default(true)
  dt_update_record          DateTime                    @default(now()) @db.Timestamp(6)
  as_cultura                as_cultura                  @relation(fields: [id_as_cultura], references: [id_as_cultura], onDelete: NoAction, onUpdate: NoAction, map: "fk1cjlv61vg0oqtn8mek7o0u53c")
  as_metodo_calculo         as_metodo_calculo           @relation(fields: [id_as_metodo_calculo], references: [id_as_metodo_calculo], onDelete: NoAction, onUpdate: NoAction, map: "fk_cultura_analise_metodo")
  as_unidade_cultura        as_unidade_cultura          @relation(fields: [id_as_unidade_cultura], references: [id_as_unidade_cultura], onDelete: NoAction, onUpdate: NoAction, map: "fk_cultura_analise_unidade")
  as_recomendacao           as_recomendacao[]
  as_recomendacao_cobertura as_recomendacao_cobertura[]
  as_recomendacao_plantio   as_recomendacao_plantio[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model as_drenagem {
  id_as_drenagem   Int          @id @default(autoincrement())
  descricao        String       @db.VarChar(100)
  ativo            Boolean      @default(true)
  dt_update_record DateTime     @default(now()) @db.Timestamp(6)
  as_analise       as_analise[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model as_elemento {
  id_as_elemento            BigInt                      @id @default(autoincrement())
  codigo_elemento           String                      @db.VarChar(5)
  nome_elemento             String                      @db.VarChar(40)
  tipo_elemento             String                      @db.VarChar(1)
  tipo_classe_elemento      Int?                        @db.SmallInt
  ordenacao                 Int?
  ativo                     Boolean                     @default(true)
  dt_update_record          DateTime                    @default(now()) @db.Timestamp(6)
  obrigatorio               Boolean                     @default(false)
  valor_padrao              Float?
  as_analise_elemento       as_analise_elemento[]
  as_elemento_conversao     as_elemento_conversao[]
  as_elemento_tipo_analise  as_elemento_tipo_analise[]
  as_fertilizante           as_fertilizante[]
  as_recomendacao           as_recomendacao[]
  as_recomendacao_cobertura as_recomendacao_cobertura[]
  as_recomendacao_plantio   as_recomendacao_plantio[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model as_elemento_conversao {
  id_as_elemento_conversao BigInt            @id @default(autoincrement())
  id_as_elemento           BigInt
  id_as_unidade_medida     BigInt
  valor_fator              Float
  ativo                    Boolean           @default(true)
  dt_update_record         DateTime          @default(now()) @db.Timestamp(6)
  as_elemento              as_elemento       @relation(fields: [id_as_elemento], references: [id_as_elemento], onDelete: NoAction, onUpdate: NoAction, map: "fk2je6etuid2ih2yhxxk67stceq")
  as_unidade_medida        as_unidade_medida @relation(fields: [id_as_unidade_medida], references: [id_as_unidade_medida], onDelete: NoAction, onUpdate: NoAction, map: "fk_unidade_medida")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model as_elemento_nivel {
  id_as_elemento_nivel        BigInt                   @id @default(autoincrement())
  id_as_elemento_tipo_analise BigInt
  id_as_nivel                 BigInt
  id_as_metodo_calculo        BigInt?
  id_as_tecido_vegetal        BigInt?
  id_as_textura               BigInt?
  id_as_fertilizante          BigInt?
  valor_minimo                Float
  valor_maximo                Float
  valor_minimo_p_recomendado  Float?
  valor_maximo_p_recomendado  Float?
  valor_dose                  Float?
  comentario                  String?                  @db.VarChar(200)
  ativo                       Boolean                  @default(true)
  dt_update_record            DateTime                 @default(now()) @db.Timestamp(6)
  as_textura                  as_textura?              @relation(fields: [id_as_textura], references: [id_as_textura], onDelete: NoAction, onUpdate: NoAction, map: "fk2ipxm5exbxhe71d2mjo63ovxl")
  as_tecido_vegetal           as_tecido_vegetal?       @relation(fields: [id_as_tecido_vegetal], references: [id_as_tecido_vegetal], onDelete: NoAction, onUpdate: NoAction, map: "fk77hy7b738dh3ngfosrosju2uv")
  as_nivel                    as_nivel                 @relation(fields: [id_as_nivel], references: [id_as_nivel], onDelete: NoAction, onUpdate: NoAction, map: "fk_elemento_nivel")
  as_fertilizante             as_fertilizante?         @relation(fields: [id_as_fertilizante], references: [id_as_fertilizante], onDelete: NoAction, onUpdate: NoAction, map: "fk_fertilizante_nivel")
  as_metodo_calculo           as_metodo_calculo?       @relation(fields: [id_as_metodo_calculo], references: [id_as_metodo_calculo], onDelete: NoAction, onUpdate: NoAction, map: "fk_metodo_calculo_nivel")
  as_elemento_tipo_analise    as_elemento_tipo_analise @relation(fields: [id_as_elemento_tipo_analise], references: [id_as_elemento_tipo_analise], onDelete: NoAction, onUpdate: NoAction, map: "fk_tpoanaliseelm_nivel")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model as_elemento_nivel_sp {
  id_as_elemento_nivel        BigInt                   @id @default(autoincrement())
  id_as_elemento_tipo_analise BigInt
  id_as_metodo_calculo        BigInt?
  id_as_nivel                 BigInt?
  id_as_textura               BigInt?
  valor_minimo                Float?
  valor_maximo                Float?
  valor_minimo_minasgerais    Float?
  valor_maximo_minasgerais    Float?
  formula_conversao           String?                  @db.VarChar(200)
  dt_update_record            DateTime                 @default(now()) @db.Timestamp(6)
  as_elemento_tipo_analise    as_elemento_tipo_analise @relation(fields: [id_as_elemento_tipo_analise], references: [id_as_elemento_tipo_analise], onDelete: NoAction, onUpdate: NoAction, map: "fk_elemento_tipo_analise")
  as_metodo_calculo           as_metodo_calculo?       @relation(fields: [id_as_metodo_calculo], references: [id_as_metodo_calculo], onDelete: NoAction, onUpdate: NoAction, map: "fk_metodo_calculo")
  as_nivel                    as_nivel?                @relation(fields: [id_as_nivel], references: [id_as_nivel], onDelete: NoAction, onUpdate: NoAction, map: "fk_nivel")
  as_textura                  as_textura?              @relation(fields: [id_as_textura], references: [id_as_textura], onDelete: NoAction, onUpdate: NoAction, map: "fk_textura")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model as_elemento_tipo_analise {
  id_as_elemento_tipo_analise BigInt                 @id @default(autoincrement())
  id_as_elemento              BigInt
  id_as_tipo_analise          BigInt
  id_as_unidade_medida        BigInt
  ativo                       Boolean                @default(true)
  dt_update_record            DateTime               @default(now()) @db.Timestamp(6)
  as_elemento_nivel           as_elemento_nivel[]
  as_elemento_nivel_sp        as_elemento_nivel_sp[]
  as_elemento                 as_elemento            @relation(fields: [id_as_elemento], references: [id_as_elemento], onDelete: NoAction, onUpdate: NoAction, map: "fk2vkssnbikuc5yy2x3k8nqhp7y")
  as_tipo_analise             as_tipo_analise        @relation(fields: [id_as_tipo_analise], references: [id_as_tipo_analise], onDelete: NoAction, onUpdate: NoAction, map: "fk_tipo_analise")
  as_unidade_medida           as_unidade_medida      @relation(fields: [id_as_unidade_medida], references: [id_as_unidade_medida], onDelete: NoAction, onUpdate: NoAction, map: "fk_tipo_analise_medida")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model as_erosao_sulcos {
  id_as_erosao_sulcos Int          @id @default(autoincrement())
  descricao           String       @db.VarChar(100)
  ativo               Boolean      @default(true)
  dt_update_record    DateTime     @default(now()) @db.Timestamp(6)
  as_analise          as_analise[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model as_fertilizante {
  id_as_fertilizante                                                                             BigInt                    @id @default(autoincrement())
  id_as_elemento                                                                                 BigInt
  nome                                                                                           String                    @db.VarChar(50)
  tipo_fertilizante                                                                              Int?                      @db.SmallInt
  ativo                                                                                          Boolean                   @default(true)
  dt_update_record                                                                               DateTime                  @default(now()) @db.Timestamp(6)
  as_analise                                                                                     as_analise[]
  as_analise_fertilizante_as_analise_fertilizante_id_as_fertilizante_formuladoToas_fertilizante  as_analise_fertilizante[] @relation("as_analise_fertilizante_id_as_fertilizante_formuladoToas_fertilizante")
  as_analise_fertilizante_as_analise_fertilizante_id_as_fertilizante_nitrogenioToas_fertilizante as_analise_fertilizante[] @relation("as_analise_fertilizante_id_as_fertilizante_nitrogenioToas_fertilizante")
  as_analise_fertilizante_as_analise_fertilizante_id_as_fertilizante_fosforoToas_fertilizante    as_analise_fertilizante[] @relation("as_analise_fertilizante_id_as_fertilizante_fosforoToas_fertilizante")
  as_analise_fertilizante_as_analise_fertilizante_id_as_fertilizante_outroToas_fertilizante      as_analise_fertilizante[] @relation("as_analise_fertilizante_id_as_fertilizante_outroToas_fertilizante")
  as_analise_fertilizante_as_analise_fertilizante_id_as_fertilizante_potassioToas_fertilizante   as_analise_fertilizante[] @relation("as_analise_fertilizante_id_as_fertilizante_potassioToas_fertilizante")
  as_elemento_nivel                                                                              as_elemento_nivel[]
  as_elemento                                                                                    as_elemento               @relation(fields: [id_as_elemento], references: [id_as_elemento], onDelete: NoAction, onUpdate: NoAction, map: "fk_as_elemento_fertilizante")
  as_tipo_adubacao                                                                               as_tipo_adubacao[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model as_grau_erosao_laminar {
  id_as_grau_erosao_laminar Int          @id @default(autoincrement())
  descricao                 String       @db.VarChar(100)
  ativo                     Boolean      @default(true)
  dt_update_record          DateTime     @default(now()) @db.Timestamp(6)
  as_analise                as_analise[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model as_laboratorio {
  id_as_laboratorio BigInt        @id @default(autoincrement())
  id_municipio      Int
  nome_laboratorio  String        @db.VarChar(100)
  ativo             Boolean       @default(true)
  dt_update_record  DateTime      @default(now()) @db.Timestamp(6)
  as_analise        as_analise[]
  sep_municipio     sep_municipio @relation(fields: [id_municipio], references: [id_municipio], onDelete: NoAction, onUpdate: NoAction, map: "fk_municipio")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model as_metodo_calculo {
  id_as_metodo_calculo BigInt                 @id @default(autoincrement())
  nome                 String                 @db.VarChar(50)
  ativo                Boolean                @default(true)
  dt_update_record     DateTime               @default(now()) @db.Timestamp(6)
  as_analise           as_analise[]
  as_cultura_analise   as_cultura_analise[]
  as_cultura_metodo    as_cultura_metodo[]
  as_elemento_nivel    as_elemento_nivel[]
  as_elemento_nivel_sp as_elemento_nivel_sp[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model as_nivel {
  id_as_nivel               BigInt                      @id @default(autoincrement())
  nome_nivel                String                      @db.VarChar(100)
  ativo                     Boolean                     @default(true)
  dt_update_record          DateTime                    @default(now()) @db.Timestamp(6)
  as_elemento_nivel         as_elemento_nivel[]
  as_elemento_nivel_sp      as_elemento_nivel_sp[]
  as_recomendacao           as_recomendacao[]
  as_recomendacao_cobertura as_recomendacao_cobertura[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model as_pedregosidade {
  id_as_pedregosidade Int          @id @default(autoincrement())
  descricao           String       @db.VarChar(100)
  ativo               Boolean      @default(true)
  dt_update_record    DateTime     @default(now()) @db.Timestamp(6)
  as_analise          as_analise[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model as_pegajosidade {
  id_as_pegajosidade         Int                          @id @default(autoincrement())
  descricao                  String                       @db.VarChar(50)
  ativo                      Boolean                      @default(true)
  dt_update_record           DateTime                     @default(now()) @db.Timestamp(6)
  as_analise                 as_analise[]
  as_textura_superficie_solo as_textura_superficie_solo[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model as_permeabilidade {
  id_as_permeabilidade Int          @id @default(autoincrement())
  descricao            String       @db.VarChar(100)
  ativo                Boolean      @default(true)
  dt_update_record     DateTime     @default(now()) @db.Timestamp(6)
  as_analise           as_analise[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model as_plasticidade {
  id_as_plasticidade         Int                          @id @default(autoincrement())
  descricao                  String                       @db.VarChar(50)
  ativo                      Boolean                      @default(true)
  dt_update_record           DateTime                     @default(now()) @db.Timestamp(6)
  as_analise                 as_analise[]
  as_textura_superficie_solo as_textura_superficie_solo[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model as_profunidade_efetiva {
  id_as_profundidade_efetiva Int          @id @default(autoincrement())
  descricao                  String       @db.VarChar(100)
  ativo                      Boolean      @default(true)
  dt_update_record           DateTime     @default(now()) @db.Timestamp(6)
  as_analise                 as_analise[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model as_recomendacao {
  id_as_recomendacao     BigInt            @id @default(autoincrement())
  id_as_cultura_metodo   BigInt
  id_as_elemento         BigInt
  id_as_nivel            BigInt
  id_as_textura          BigInt?
  recomendacao           String?
  quantidade_recomendado Float?
  ativo                  Boolean           @default(true)
  dt_update_record       DateTime          @default(now()) @db.Timestamp(6)
  as_cultura_metodo      as_cultura_metodo @relation(fields: [id_as_cultura_metodo], references: [id_as_cultura_metodo], onDelete: NoAction, onUpdate: NoAction, map: "fk_recomendacao_cultura")
  as_elemento            as_elemento       @relation(fields: [id_as_elemento], references: [id_as_elemento], onDelete: NoAction, onUpdate: NoAction, map: "fk_recomendacao_elemento")
  as_nivel               as_nivel          @relation(fields: [id_as_nivel], references: [id_as_nivel], onDelete: NoAction, onUpdate: NoAction, map: "fk_recomendacao_nivel")
  as_textura             as_textura?       @relation(fields: [id_as_textura], references: [id_as_textura], onDelete: NoAction, onUpdate: NoAction, map: "fk_recomendacao_textura")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model as_recomendacao_cobertura {
  id_as_recomendacao_cobertura BigInt            @id @default(autoincrement())
  id_as_cultura_metodo         BigInt
  id_as_elemento               BigInt
  id_as_nivel                  BigInt?
  id_as_textura                BigInt?
  numero_cobertura             Int?
  quantidade_recomendado       Float?
  ativo                        Boolean           @default(true)
  dt_update_record             DateTime          @default(now()) @db.Timestamp(6)
  as_nivel                     as_nivel?         @relation(fields: [id_as_nivel], references: [id_as_nivel], onDelete: NoAction, onUpdate: NoAction, map: "fk6g17j5llfs3bjquhmejmrymcp")
  as_cultura_metodo            as_cultura_metodo @relation(fields: [id_as_cultura_metodo], references: [id_as_cultura_metodo], onDelete: NoAction, onUpdate: NoAction, map: "fk8uegg6iy6mf9lcx5b8ldeeo0d")
  as_elemento                  as_elemento       @relation(fields: [id_as_elemento], references: [id_as_elemento], onDelete: NoAction, onUpdate: NoAction, map: "fk_recomendacao_cob_elemento")
  as_textura                   as_textura?       @relation(fields: [id_as_textura], references: [id_as_textura], onDelete: NoAction, onUpdate: NoAction, map: "fk_recomendacao_cob_textura")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model as_recomendacao_plantio {
  id_as_recomendacao_plantio BigInt            @id @default(autoincrement())
  id_as_cultura_metodo       BigInt
  id_as_elemento             BigInt
  quantidade_recomendado     Float?
  ativo                      Boolean           @default(true)
  dt_update_record           DateTime          @default(now()) @db.Timestamp(6)
  as_cultura_metodo          as_cultura_metodo @relation(fields: [id_as_cultura_metodo], references: [id_as_cultura_metodo], onDelete: NoAction, onUpdate: NoAction, map: "fk35gxtfmboh3y4yh9c1fwbmut5")
  as_elemento                as_elemento       @relation(fields: [id_as_elemento], references: [id_as_elemento], onDelete: NoAction, onUpdate: NoAction, map: "fk_recomend_plantio_elemento")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model as_risco_imundacao {
  id_as_risco_imundacao Int          @id @default(autoincrement())
  descricao             String       @db.VarChar(100)
  ativo                 Boolean      @default(true)
  dt_update_record      DateTime     @default(now()) @db.Timestamp(6)
  as_analise            as_analise[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model as_solo {
  id_as_solo                BigInt       @id @default(autoincrement())
  nome                      String       @db.VarChar(100)
  descricao_potencialidades String?
  descricao_limitacoes      String?
  ativo                     Boolean      @default(true)
  dt_update_record          DateTime     @default(now()) @db.Timestamp(6)
  as_analise                as_analise[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model as_tecido_vegetal {
  id_as_tecido_vegetal BigInt              @id @default(autoincrement())
  nome                 String              @db.VarChar(100)
  ativo                Boolean             @default(true)
  dt_update_record     DateTime            @default(now()) @db.Timestamp(6)
  observacao           String?
  as_analise           as_analise[]
  as_elemento_nivel    as_elemento_nivel[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model as_textura {
  id_as_textura              BigInt                      @id @default(autoincrement())
  nome                       String                      @db.VarChar(20)
  comentario                 String?                     @db.VarChar(200)
  ativo                      Boolean                     @default(true)
  dt_update_record           DateTime                    @default(now()) @db.Timestamp(6)
  as_analise                 as_analise[]
  as_elemento_nivel          as_elemento_nivel[]
  as_elemento_nivel_sp       as_elemento_nivel_sp[]
  as_recomendacao            as_recomendacao[]
  as_recomendacao_cobertura  as_recomendacao_cobertura[]
  as_textura_argila          as_textura_argila[]
  as_textura_superficie_solo as_textura_superficie_solo?
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model as_textura_argila {
  id_as_textura_argila BigInt     @id @default(autoincrement())
  id_as_textura        BigInt
  valor_minimo         Int?
  valor_maximo         Int?
  ativo                Boolean    @default(true)
  dt_update_record     DateTime   @default(now()) @db.Timestamp(6)
  as_textura           as_textura @relation(fields: [id_as_textura], references: [id_as_textura], onDelete: NoAction, onUpdate: NoAction, map: "fk_as_textura_argila")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model as_textura_superficie_solo {
  id_as_textura      Int             @id
  id_as_plasticidade Int
  id_as_pegajosidade Int
  dt_update_record   DateTime        @default(now()) @db.Timestamp(6)
  as_pegajosidade    as_pegajosidade @relation(fields: [id_as_pegajosidade], references: [id_as_pegajosidade], onDelete: NoAction, onUpdate: NoAction, map: "fk52hs17n4vfso6lvgcsxj7d5rr")
  as_plasticidade    as_plasticidade @relation(fields: [id_as_plasticidade], references: [id_as_plasticidade], onDelete: NoAction, onUpdate: NoAction, map: "fk_textura_plasticidade")
  as_textura         as_textura      @relation(fields: [id_as_textura], references: [id_as_textura], onDelete: NoAction, onUpdate: NoAction, map: "fk_textura_superficie_solo")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model as_tipo_adubacao {
  id_as_tipo_adubacao BigInt          @id @default(autoincrement())
  id_as_fertilizante  BigInt
  nome_formula        String?         @db.VarChar(8)
  valor_relacaon      Float
  valor_relacaop      Float
  valor_relacaok      Float
  valor_relacaos      Float
  valor_relacaoca     Float
  valor_relacaomg     Float
  valor_relacaozn     Float
  valor_relacaobo     Float
  valor_relacaocu     Float
  valor_relacaomn     Float
  valor_relacaomo     Float
  valor_relacaofe     Float
  valor_relacaoco     Float
  valor_relacaocl     Float
  ativo               Boolean         @default(true)
  dt_update_record    DateTime        @default(now()) @db.Timestamp(6)
  as_fertilizante     as_fertilizante @relation(fields: [id_as_fertilizante], references: [id_as_fertilizante], onDelete: NoAction, onUpdate: NoAction, map: "fk_as_adubacao_fertilizante")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model as_tipo_analise {
  id_as_tipo_analise       BigInt                     @id @default(autoincrement())
  nome                     String                     @db.VarChar(40)
  ativo                    Boolean                    @default(true)
  dt_update_record         DateTime                   @default(now()) @db.Timestamp(6)
  as_analise               as_analise[]
  as_elemento_tipo_analise as_elemento_tipo_analise[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model as_tipo_aproximacao {
  id_as_tipo_aproximacao BigInt       @id @default(autoincrement())
  nome                   String       @db.VarChar(10)
  ativo                  Boolean      @default(true)
  dt_update_record       DateTime     @default(now()) @db.Timestamp(6)
  as_analise             as_analise[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model as_unidade_cultura {
  id_as_unidade_cultura BigInt              @id @default(autoincrement())
  nome                  String              @db.VarChar(10)
  ativo                 Boolean             @default(true)
  dt_update_record      DateTime            @default(now()) @db.Timestamp(6)
  as_cultura_metodo     as_cultura_metodo[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model as_unidade_medida {
  id_as_unidade_medida     BigInt                     @id @default(autoincrement())
  nome                     String                     @db.VarChar(25)
  ativo                    Boolean                    @default(true)
  dt_update_record         DateTime                   @default(now()) @db.Timestamp(6)
  as_analise_elemento      as_analise_elemento[]
  as_elemento_conversao    as_elemento_conversao[]
  as_elemento_tipo_analise as_elemento_tipo_analise[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model at_acao {
  id_at_acao         BigInt           @id(map: "pk_at_acao") @default(autoincrement())
  descricao          String           @db.VarChar(100)
  data_atualizacao   DateTime         @db.Date
  ativo              Boolean
  indice_propriedade Int              @default(0) @db.SmallInt
  indice_periodo     Int              @default(0) @db.SmallInt
  dt_update_record   DateTime?        @db.Timestamp(6)
  quant_max_clientes Int?             @db.SmallInt
  at_atendimento     at_atendimento[]
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model at_agenda_produto {
  id_spa_chamada_atendimento Int?
  id_at_produto              Int?
  id_at_agenda               Int?
  nr_ano                     Int?
  ativo                      Boolean?

  @@index([id_spa_chamada_atendimento], map: "idx_at_agenda_produto_lookup")
  @@ignore
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model at_arquivo {
  id_at_arquivo              BigInt         @id(map: "pk_at_arquivo") @default(autoincrement())
  nome_arquivo               String         @db.VarChar(100)
  arquivo                    String
  id_at_atendimento          BigInt
  ativo                      Boolean
  tipo_arquivo               String         @db.VarChar(100)
  dt_update_record           DateTime?      @default(now()) @db.Timestamp(6)
  id_sincronismo             String?        @default(dbgenerated("(uuid_generate_v4())::character varying(36)")) @db.VarChar(36)
  id_sincronismo_atendimento String?        @db.VarChar(36)
  id_und_empresa             String?        @db.VarChar(5)
  at_atendimento             at_atendimento @relation(fields: [id_at_atendimento], references: [id_at_atendimento], onDelete: NoAction, onUpdate: NoAction, map: "fk_at_arquivo_atendimento")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model at_atendimento {
  id_at_atendimento        BigInt                     @id(map: "pk_at_atendimento") @default(autoincrement())
  descricao                String?                    @db.VarChar(60)
  data_inicio_atendimento  DateTime                   @db.Date
  data_fim_atendimento     DateTime?                  @db.Date
  data_validacao           DateTime?                  @db.Date
  usuario_validacao        BigInt?
  data_atualizacao         DateTime                   @db.Date
  id_at_status             Int                        @db.SmallInt
  ativo                    Boolean
  id_at_acao               BigInt
  id_und_empresa           String                     @db.Char(5)
  qtd_alunos               Int?
  data_criacao             DateTime                   @db.Date
  id_sincronismo           String?                    @default(dbgenerated("(uuid_generate_v4())::character varying(36)")) @db.VarChar(36)
  orientacao_tecnica       String?
  dt_update_record         DateTime?                  @db.Timestamp(6)
  geo_ponto                Unsupported("geometry")?
  geo_ponto_texto          String?                    @db.VarChar(255)
  sincroniza               Int?                       @default(0) @db.SmallInt
  processamento            Int?                       @default(0) @db.SmallInt
  login_usuario            String?
  id_at_anterior           BigInt?
  fk_und_empresa           String?                    @db.Char(5)
  auto_atendimento         Int?                       @db.SmallInt
  data_sei                 DateTime?                  @db.Date
  link_pdf                 String?
  sn_pendencia             Int?                       @db.SmallInt
  sn_validado              Int?                       @db.SmallInt
  at_arquivo               at_arquivo[]
  usuario                  usuario?                   @relation(fields: [usuario_validacao], references: [id_usuario], onDelete: NoAction, onUpdate: NoAction, map: "fk2wy9cxuwsh3cyhmip358l0l6c")
  at_acao                  at_acao                    @relation(fields: [id_at_acao], references: [id_at_acao], onDelete: NoAction, onUpdate: NoAction, map: "fk8q4s39wy7we2slstaxkbxd737")
  ger_und_empresa          ger_und_empresa            @relation(fields: [id_und_empresa], references: [id_und_empresa], onDelete: NoAction, onUpdate: NoAction, map: "fk93s2tv2b5mc4n607j88ipaxhm")
  at_status                at_status                  @relation(fields: [id_at_status], references: [id_at_status], onDelete: NoAction, onUpdate: NoAction, map: "fk_at_atendimento_at_status")
  at_atendimento_indicador at_atendimento_indicador[]
  at_atendimento_usuario   at_atendimento_usuario[]
  at_cli_atend_prop        at_cli_atend_prop[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model at_atendimento_indi_atividade {
  id_at_aten_indi_atividade     BigInt                   @id(map: "pk_at_atendimento_indi_atividade") @default(autoincrement())
  id_at_atendimento_indicador   BigInt
  id_at_atividade_indicador     BigInt
  id_und_empresa                String?                  @db.VarChar(5)
  id_sincronismo                String?                  @default(dbgenerated("(uuid_generate_v4())::character varying(36)")) @db.VarChar(36)
  id_sincronismo_aten_indicador String?                  @db.VarChar(36)
  dt_update_record              DateTime?                @default(now()) @db.Timestamp(6)
  at_atendimento_indicador      at_atendimento_indicador @relation(fields: [id_at_atendimento_indicador], references: [id_at_atendimento_indicador], onDelete: NoAction, onUpdate: NoAction, map: "fk_id_at_atendimento_indicador")
  at_atividade_indicador        at_atividade_indicador   @relation(fields: [id_at_atividade_indicador], references: [id_at_atividade_indicador], onDelete: NoAction, onUpdate: NoAction, map: "fk_id_at_atividade_indicador")

  @@unique([id_at_atendimento_indicador, id_at_atividade_indicador], map: "ix_at_atendimento_indi_atividade")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model at_atendimento_indi_camp_acess {
  id_at_aten_indi_camp_acess     BigInt                       @id(map: "pk_at_aten_indi_camp_acess") @default(autoincrement())
  id_at_atendimento_indicador    BigInt
  id_at_indicador_camp_acessorio BigInt
  valor_campo_acessorio          String?                      @db.VarChar(100)
  id_und_empresa                 String?                      @db.VarChar(5)
  id_sincronismo                 String?                      @default(dbgenerated("(uuid_generate_v4())::character varying(36)")) @db.VarChar(36)
  id_sincronismo_aten_indicador  String?                      @db.VarChar(36)
  dt_update_record               DateTime?                    @default(now()) @db.Timestamp(6)
  possui_lista_valores           Boolean                      @default(false)
  at_atendimento_indicador       at_atendimento_indicador     @relation(fields: [id_at_atendimento_indicador], references: [id_at_atendimento_indicador], onDelete: NoAction, onUpdate: NoAction, map: "fk_at_aten_indi_camp_acess")
  at_indicador_campo_acessorio   at_indicador_campo_acessorio @relation(fields: [id_at_indicador_camp_acessorio], references: [id_at_indicador_camp_acessorio], onDelete: NoAction, onUpdate: NoAction, map: "fk_at_camp_acess_aten_indi")

  @@unique([id_at_atendimento_indicador, id_at_indicador_camp_acessorio], map: "ix_at_aten_indi_camp_acess")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model at_atendimento_indicador {
  id_at_atendimento_indicador    BigInt                           @id(map: "pk_at_atendimento_indicador") @default(autoincrement())
  id_at_atendimento              BigInt
  id_at_indicador                BigInt
  id_und_empresa                 String?                          @db.VarChar(5)
  id_sincronismo                 String?                          @default(dbgenerated("(uuid_generate_v4())::character varying(36)")) @db.VarChar(36)
  id_sincronismo_atendimento     String?                          @db.VarChar(36)
  dt_update_record               DateTime?                        @default(now()) @db.Timestamp(6)
  at_atendimento_indi_atividade  at_atendimento_indi_atividade[]
  at_atendimento_indi_camp_acess at_atendimento_indi_camp_acess[]
  at_indicador                   at_indicador                     @relation(fields: [id_at_indicador], references: [id_at_indicador], onDelete: NoAction, onUpdate: NoAction, map: "fk1xax2r08665xreflnwtecl0t4")
  at_atendimento                 at_atendimento                   @relation(fields: [id_at_atendimento], references: [id_at_atendimento], onDelete: NoAction, onUpdate: NoAction, map: "fk_at_atendimento_indicador")

  @@unique([id_at_atendimento, id_at_indicador], map: "ix_at_atendimento_indicador")
}

model at_atendimento_sem_repeticao {
  id_at_atendimento_sem_repeticao BigInt    @id(map: "pk_at_atendimento_sem_repeticao") @default(autoincrement())
  fk_at_atendimento               BigInt
  fk_id_pessoa                    String    @db.Char(36)
  fk_id_pessoa_demeter            BigInt
  data_criacao                    DateTime? @db.Date
  fk_cat_pessoa                   Int?
}

model at_atendimento_sem_repeticao_agenda {
  id_at_atendimento_sem_repeticao_agenda BigInt    @id @default(autoincrement())
  fk_at_atendimento                      BigInt
  fk_id_pessoa                           String    @db.Char(36)
  fk_id_pessoa_demeter                   BigInt
  fk_id_at_grupo_indicador               BigInt
  data_criacao                           DateTime? @db.Date
  fk_cat_pessoa                          Int?
}

model at_atendimento_sem_repeticao_indicador {
  id_at_atendimento_sem_repeticao_indicador BigInt    @id @default(autoincrement())
  fk_at_atendimento                         BigInt?
  fk_id_pessoa                              String?   @db.Char(36)
  fk_id_pessoa_demeter                      BigInt?
  fk_id_at_produto                          BigInt?
  data_criacao                              DateTime? @db.Date
  fk_id_at_grupo_indicador                  BigInt?
  fk_cat_pessoa                             Int?
}

model at_atendimento_sem_repeticao_super {
  id_at_atendimento_sem_repeticao_super BigInt    @id @default(autoincrement())
  fk_at_atendimento                     BigInt?
  fk_id_pessoa                          String?   @db.Char(36)
  fk_id_pessoa_demeter                  BigInt?
  fk_id_at_agenda                       BigInt?
  data_criacao                          DateTime? @db.Date
  fk_cat_pessoa                         Int?
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model at_atendimento_usuario {
  id_at_atendimento          BigInt
  id_usuario                 BigInt
  id_und_empresa             String?        @db.VarChar(5)
  id_sincronismo             String?        @default(dbgenerated("(uuid_generate_v4())::character varying(36)")) @db.VarChar(36)
  id_sincronismo_atendimento String?        @db.VarChar(36)
  dt_update_record           DateTime?      @default(now()) @db.Timestamp(6)
  at_atendimento             at_atendimento @relation(fields: [id_at_atendimento], references: [id_at_atendimento], onDelete: NoAction, onUpdate: NoAction, map: "fk_at_atendimento_usuario")
  usuario                    usuario        @relation(fields: [id_usuario], references: [id_usuario], onDelete: NoAction, onUpdate: NoAction, map: "fk_usuario_atendimento")

  @@id([id_at_atendimento, id_usuario], map: "pk_at_atendimento_usuario")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model at_atividade {
  id_at_atividade        BigInt                   @id(map: "pk_at_atividade") @default(autoincrement())
  id_at_indicador        BigInt?
  descricao              String                   @db.VarChar(100)
  ativo                  Boolean
  dt_update_record       DateTime?                @db.Timestamp(6)
  at_indicador           at_indicador?            @relation(fields: [id_at_indicador], references: [id_at_indicador], onDelete: NoAction, onUpdate: NoAction, map: "fk_at_atividade_indicador")
  at_atividade_indicador at_atividade_indicador[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model at_atividade_indicador {
  id_at_atividade               BigInt
  id_at_indicador               BigInt
  id_at_atividade_indicador     BigInt                          @id @default(autoincrement())
  dt_update_record              DateTime?                       @db.Timestamp(6)
  at_atendimento_indi_atividade at_atendimento_indi_atividade[]
  at_atividade                  at_atividade                    @relation(fields: [id_at_atividade], references: [id_at_atividade], onDelete: NoAction, onUpdate: NoAction, map: "fk_at_atividade_indicador")
  at_indicador                  at_indicador                    @relation(fields: [id_at_indicador], references: [id_at_indicador], onDelete: NoAction, onUpdate: NoAction, map: "fk_at_indicador_atividade")

  @@unique([id_at_atividade, id_at_indicador], map: "ix_at_atividade_indicador")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model at_campo_acessorio {
  id_at_campo_acessorio        BigInt                         @id(map: "pk_at_campo_acessorio") @default(autoincrement())
  descricao                    String                         @db.VarChar(100)
  id_at_tipo_campo_acessorio   Int                            @db.SmallInt
  ativo                        Boolean?
  dt_update_record             DateTime?                      @db.Timestamp(6)
  vlr_texto1                   String?                        @db.VarChar(10)
  vlr_texto2                   String?                        @db.VarChar(10)
  at_tipo_campo_acessorio      at_tipo_campo_acessorio        @relation(fields: [id_at_tipo_campo_acessorio], references: [id_at_tipo_campo_acessorio], onDelete: NoAction, onUpdate: NoAction, map: "fk_at_campo_acessorio_tipo")
  at_indicador_campo_acessorio at_indicador_campo_acessorio[]

  @@unique([id_at_campo_acessorio, descricao, id_at_tipo_campo_acessorio, ativo], map: "uq_at_campo_acessorio")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model at_cli_atend_prop {
  id_at_atendimento             BigInt
  id_pessoa_demeter             BigInt
  id_pl_propriedade             BigInt?
  id_at_cli_atend_prop          BigInt          @id(map: "at_atendimento_cliente_propriedade_pkey") @default(autoincrement())
  id_und_empresa                String?         @db.VarChar(5)
  id_sincronismo_atendimento    String?         @db.VarChar(36)
  id_sincronismo_ger_pessoa     String?         @db.VarChar(36)
  id_sincronismo_pl_propriedade String?         @db.VarChar(36)
  id_sincronismo                String?         @default(dbgenerated("(uuid_generate_v4())::character varying(36)")) @db.VarChar(36)
  dt_update_record              DateTime?       @default(now()) @db.Timestamp(6)
  fk_cat_pessoa                 Int?
  ger_pessoa                    ger_pessoa      @relation(fields: [id_pessoa_demeter], references: [id_pessoa_demeter], onDelete: NoAction, onUpdate: NoAction, map: "fk29teh4plu2duhojqqnnf3j8cu")
  pl_propriedade                pl_propriedade? @relation(fields: [id_pl_propriedade], references: [id_pl_propriedade], onDelete: NoAction, onUpdate: NoAction, map: "fk2hbjbvci9gd4tw04o1t2xrcku")
  at_atendimento                at_atendimento  @relation(fields: [id_at_atendimento], references: [id_at_atendimento], onDelete: NoAction, onUpdate: NoAction, map: "fk_at_atendimento_cliente")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model at_contratos_convenios_atividade {
  id_at_contratos_convenios_atividade BigInt    @default(autoincrement())
  id_at_grupo_indicador               BigInt
  codigo_atividade_emater             BigInt
  descricao_atividade_emater          String?   @db.VarChar(255)
  dt_update_record                    DateTime? @db.Timestamp(6)

  @@ignore
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model at_grupo_indicador {
  id_at_grupo_indicador           BigInt                     @id(map: "pk_at_grupo_indicador") @default(autoincrement())
  descricao                       String                     @db.VarChar(100)
  data_atualizacao                DateTime                   @db.Date
  ativo                           Boolean
  validar                         Boolean                    @default(false)
  data_max_validacao              DateTime?                  @db.Date
  dt_update_record                DateTime?                  @db.Timestamp(6)
  permitir_unica_meta_atendimento Boolean?                   @default(false)
  sn_super_grupo                  Int?                       @db.SmallInt
  tp_chamada                      Int?                       @db.SmallInt
  sn_spa                          Int?                       @db.SmallInt
  at_grupo_indicador              at_grupo_indicador         @relation("at_grupo_indicadorToat_grupo_indicador", fields: [id_at_grupo_indicador], references: [id_at_grupo_indicador], onDelete: NoAction, onUpdate: NoAction, map: "fkpbyyndup2h4mhwv3q5x6ovj55")
  other_at_grupo_indicador        at_grupo_indicador?        @relation("at_grupo_indicadorToat_grupo_indicador")
  at_grupo_unidade_empresa        at_grupo_unidade_empresa[]
  at_indicador                    at_indicador[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model at_grupo_unidade_empresa {
  id_at_grupo_indicador BigInt
  id_und_empresa        String             @db.Char(5)
  dt_update_record      DateTime?          @db.Timestamp(6)
  ger_und_empresa       ger_und_empresa    @relation(fields: [id_und_empresa], references: [id_und_empresa], onDelete: NoAction, onUpdate: NoAction, map: "fk6ikld134j9ibonjnxg803n94m")
  at_grupo_indicador    at_grupo_indicador @relation(fields: [id_at_grupo_indicador], references: [id_at_grupo_indicador], onDelete: NoAction, onUpdate: NoAction, map: "fk_at_grupo_grupo_indicador")

  @@id([id_at_grupo_indicador, id_und_empresa], map: "pk_at_grupo_unidade_empresa")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model at_indicador {
  id_at_indicador              BigInt                         @id(map: "pk_at_indicador") @default(autoincrement())
  id_at_grupo_indicador        BigInt
  data_atualizacao             DateTime                       @db.Date
  ativo                        Boolean
  id_at_produto                BigInt
  dt_update_record             DateTime?                      @db.Timestamp(6)
  anexo_obrigatorio            Boolean?                       @default(false)
  foto_obrigatoria             Boolean                        @default(false)
  at_atendimento_indicador     at_atendimento_indicador[]
  at_atividade                 at_atividade[]
  at_atividade_indicador       at_atividade_indicador[]
  at_grupo_indicador           at_grupo_indicador             @relation(fields: [id_at_grupo_indicador], references: [id_at_grupo_indicador], onDelete: NoAction, onUpdate: NoAction, map: "fk3qnbwkkgwfu9fdtgl1gtry1bp")
  at_produto                   at_produto                     @relation(fields: [id_at_produto], references: [id_at_produto], onDelete: NoAction, onUpdate: NoAction, map: "fk_at_produto")
  at_indicador_campo_acessorio at_indicador_campo_acessorio[]
  at_pos_process_modulos       at_pos_process_modulos[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model at_indicador_campo_acessorio {
  id_at_indicador_camp_acessorio     BigInt                               @id(map: "pk_at_indicador_camp_acessorio") @default(autoincrement())
  id_at_indicador                    BigInt
  id_at_campo_acessorio              BigInt
  obrigatorio                        Boolean?                             @default(false)
  dt_update_record                   DateTime?                            @db.Timestamp(6)
  vlr_minimo                         Int?
  vlr_maximo                         Int?
  vlr_minimo_decimal                 Decimal?                             @db.Decimal(20, 10)
  vlr_maximo_decimal                 Decimal?                             @db.Decimal(20, 10)
  seq_ordem_campo_indicador          Int?                                 @default(0) @db.SmallInt
  qtde_decimais                      Int?                                 @db.SmallInt
  qtde_colunas                       Int?                                 @db.SmallInt
  ativo                              Boolean                              @default(true)
  at_atendimento_indi_camp_acess     at_atendimento_indi_camp_acess[]
  at_campo_acessorio                 at_campo_acessorio                   @relation(fields: [id_at_campo_acessorio], references: [id_at_campo_acessorio], onDelete: NoAction, onUpdate: NoAction, map: "fk_at_camp_acessorio_indicador")
  at_indicador                       at_indicador                         @relation(fields: [id_at_indicador], references: [id_at_indicador], onDelete: NoAction, onUpdate: NoAction, map: "fk_at_indicador_camp_acessorio")
  at_indicador_campo_acessorio_lista at_indicador_campo_acessorio_lista[]

  @@unique([id_at_indicador, id_at_campo_acessorio], map: "ix_at_indicador_camp_acessorio")
}

model at_indicador_campo_acessorio_lista {
  id_lista                       BigInt                       @id(map: "at_indicador_campo_acessorio_lista_pk") @default(autoincrement())
  fk_at_indicador_camp_acessorio BigInt
  chave                          String                       @db.VarChar(100)
  valor                          String                       @db.VarChar(10)
  at_indicador_campo_acessorio   at_indicador_campo_acessorio @relation(fields: [fk_at_indicador_camp_acessorio], references: [id_at_indicador_camp_acessorio], onDelete: NoAction, onUpdate: NoAction, map: "fk_at_indicador_camp_acessorio")

  @@unique([fk_at_indicador_camp_acessorio, valor], map: "at_indicador_campo_acessorio_lista_indicador_valor")
  @@index([fk_at_indicador_camp_acessorio, chave], map: "at_indicador_campo_acessorio_lista_indicador_chave")
}

model at_pos_process_modulos {
  id_at_pos_process_modulos BigInt       @id(map: "pk_at_pos_process_modulos") @default(autoincrement())
  id_modulo                 BigInt
  id_at_indicador           BigInt
  tabela                    String       @db.VarChar(60)
  coluna                    String       @db.VarChar(40)
  tipo_valor                String       @default("texto") @db.VarChar(6)
  valor                     String       @db.VarChar(30)
  at_indicador              at_indicador @relation(fields: [id_at_indicador], references: [id_at_indicador], onDelete: NoAction, onUpdate: NoAction, map: "fk_at_pos_proc_ind")
  modulo                    modulo       @relation(fields: [id_modulo], references: [id_modulo], onDelete: NoAction, onUpdate: NoAction, map: "fk_at_pos_proc_modu")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model at_pos_processamento_atendimento {
  id_pos_processamento_atendimento BigInt    @id(map: "pk_pos_processamento_atendimento") @default(autoincrement())
  module                           String?   @db.VarChar(4)
  related_info                     String    @db.VarChar(400)
  dt_insert_record                 DateTime  @default(now()) @db.Timestamp(6)
  dt_process_record                DateTime? @db.Timestamp(6)
  status                           Int?
  entidade_principal               BigInt
}

model at_prf_config {
  id_contrato             Int                       @id(map: "at_prf_config_pk") @db.SmallInt
  ano_contrato            Int                       @db.SmallInt
  contrato_ativo          Boolean
  inclusao_entrada        Boolean
  inclusao_saida          Boolean
  alteracao_entrada       Boolean
  alteracao_saida         Boolean
  exclusao_entrada        Boolean
  exclusao_saida          Boolean
  at_prf_config_municipio at_prf_config_municipio[]
  at_prf_see              at_prf_see[]
}

model at_prf_config_municipio {
  id                BigInt        @id(map: "at_prf_config_municipio_pk") @default(autoincrement())
  fk_contrato       Int           @db.SmallInt
  fk_municipio      Int
  inclusao_entrada  Boolean
  inclusao_saida    Boolean
  alteracao_entrada Boolean
  alteracao_saida   Boolean
  exclusao_entrada  Boolean
  exclusao_saida    Boolean
  sep_municipio     sep_municipio @relation(fields: [fk_municipio], references: [id_municipio], onDelete: NoAction, onUpdate: NoAction, map: "fk_at_prf_config_municipio1")
  at_prf_config     at_prf_config @relation(fields: [fk_contrato], references: [id_contrato], onDelete: NoAction, onUpdate: NoAction, map: "fk_at_prf_config_municipio2")
}

model at_prf_grupo_produto {
  id_grupo                                  BigInt                       @id(map: "at_prf_grupo_produto_pk")
  id_grupo_legado                           Int?
  tipo                                      Int?
  nm_grupo                                  String?                      @db.VarChar(100)
  dados_producao_estratificados_por_produto Boolean                      @default(false)
  at_prf_produto                            at_prf_produto[]
  at_prf_see_grupos_produtos                at_prf_see_grupos_produtos[]

  @@unique([id_grupo_legado, tipo], map: "at_prf_grupo_produto_un")
  @@index([id_grupo_legado, tipo], map: "idx_at_prf_grupo_produto_lookup")
}

model at_prf_produto {
  id_produto           BigInt                @id(map: "at_prf_produto_pk")
  id_legado            Int?
  nm_produto           String?               @db.VarChar(100)
  tipo                 Int?
  id_grupo_legado      Int?
  sg_und_medida        String?               @db.VarChar(10)
  at_prf_grupo_produto at_prf_grupo_produto? @relation(fields: [id_grupo_legado, tipo], references: [id_grupo_legado, tipo], onDelete: NoAction, onUpdate: NoAction, map: "fk_grupo")
  at_prf_produto_fk    at_prf_produto_fk[]
  at_prf_see_produto   at_prf_see_produto[]

  @@unique([id_legado, tipo], map: "at_prf_produto_un")
  @@index([id_legado, tipo], map: "idx_at_prf_produto_lookup")
}

model at_prf_produto_fk {
  id             BigInt         @id
  fk_produto     BigInt
  at_prf_produto at_prf_produto @relation(fields: [fk_produto], references: [id_produto], onDelete: NoAction, onUpdate: NoAction, map: "fk_produto")

  @@index([fk_produto], map: "fki_fk_produto")
}

model at_prf_see {
  id                                                                                               BigInt                     @id(map: "pk_at_prf_see") @default(autoincrement())
  data_preenchimento                                                                               DateTime                   @db.Date
  data_atualizacao                                                                                 DateTime                   @db.Date
  tipo_perfil                                                                                      String                     @db.VarChar(8)
  id_cliente                                                                                       BigInt
  participa_organizacao                                                                            Boolean?
  id_dados_producao_in_natura                                                                      BigInt?
  nivel_tecnologico_cultivo                                                                        BigInt?
  sistema_producao                                                                                 BigInt?
  condicao_posse                                                                                   BigInt?
  dap_caf_vigente                                                                                  Boolean?
  credito_rural                                                                                    Boolean?
  fonte_captacao_agua                                                                              BigInt?
  forma_esgotamento_sanitario                                                                      BigInt?
  possui_cadastro_car                                                                              Boolean?
  aderiu_pra                                                                                       Boolean?
  ciente_iniciativas_regularizacao_pra                                                             Boolean?
  realiza_escalonamento_producao                                                                   Boolean?
  procedimento_pos_colheita                                                                        BigInt?
  id_dados_producao_agro_industria                                                                 BigInt?
  tipo_gestao_unidade                                                                              String?                    @db.VarChar(8)
  pessoas_processamento_alimentos                                                                  Int?
  tipo_estabelecimento                                                                             String?                    @db.VarChar(16)
  tipo_pessoa_juridica                                                                             String?                    @db.VarChar(16)
  agroindustria_precisa_adaptacao_reforma                                                          Boolean?
  possui_registro_orgao_fiscalizacao_sanitaria                                                     Boolean?
  orgao_fiscalizacao_sanitaria                                                                     String?                    @db.VarChar(64)
  id_tecnico                                                                                       BigInt?
  atividades_usam_recursos_hidricos                                                                BigInt?
  atividades_com_regularizacao_ambiental                                                           BigInt?
  possui_agroindustria_propria                                                                     Boolean?
  grau_interesse_pnae                                                                              String?                    @db.VarChar(64)
  ativo                                                                                            Boolean                    @default(true)
  id_contrato                                                                                      Int                        @db.SmallInt
  data_validacao_saida                                                                             DateTime?                  @db.Date
  data_sei_saida                                                                                   DateTime?                  @db.Date
  exibir                                                                                           Boolean                    @default(true)
  usuario                                                                                          usuario?                   @relation(fields: [id_tecnico], references: [id_usuario], onDelete: NoAction, onUpdate: NoAction, map: "at_prf_see_fk")
  ger_pessoa                                                                                       ger_pessoa                 @relation(fields: [id_cliente], references: [id_pessoa_demeter], onDelete: NoAction, onUpdate: NoAction, map: "fk_cliente")
  at_prf_config                                                                                    at_prf_config              @relation(fields: [id_contrato], references: [id_contrato], onDelete: NoAction, onUpdate: NoAction, map: "fk_contrato")
  at_prf_see_dados_producao_at_prf_see_id_dados_producao_agro_industriaToat_prf_see_dados_producao at_prf_see_dados_producao? @relation("at_prf_see_id_dados_producao_agro_industriaToat_prf_see_dados_producao", fields: [id_dados_producao_agro_industria], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_dados_agroindustria")
  at_prf_see_dados_producao_at_prf_see_id_dados_producao_in_naturaToat_prf_see_dados_producao      at_prf_see_dados_producao? @relation("at_prf_see_id_dados_producao_in_naturaToat_prf_see_dados_producao", fields: [id_dados_producao_in_natura], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_dados_in_natura")
  at_prf_see_propriedade                                                                           at_prf_see_propriedade[]

  @@unique([id_cliente, tipo_perfil, id_contrato], map: "unq_perfil_contrato")
}

model at_prf_see_dados_producao {
  id                                                                                BigInt                       @id(map: "pk_at_prf_see_dados_producao") @default(autoincrement())
  controla_custos_producao                                                          Boolean?
  local_comercializacao                                                             BigInt?
  valor_total_obtido_pnae                                                           BigInt?
  forma_entrega_produtos                                                            BigInt?
  dificuldade_fornecimento                                                          BigInt?
  informacoes_adicionais                                                            String?                      @db.VarChar(2048)
  tipo_regularizacao_uso_recursos_hidricos                                          String?                      @db.VarChar(32)
  tipo_regularizacao_ambiental                                                      String?                      @db.VarChar(64)
  valor_total_obtido_outros                                                         BigInt?
  total_obtido_pnae                                                                 String?                      @db.VarChar(64)
  total_obtido_outros                                                               String?                      @db.VarChar(64)
  at_prf_see_at_prf_see_id_dados_producao_agro_industriaToat_prf_see_dados_producao at_prf_see[]                 @relation("at_prf_see_id_dados_producao_agro_industriaToat_prf_see_dados_producao")
  at_prf_see_at_prf_see_id_dados_producao_in_naturaToat_prf_see_dados_producao      at_prf_see[]                 @relation("at_prf_see_id_dados_producao_in_naturaToat_prf_see_dados_producao")
  at_prf_see_grupos_produtos                                                        at_prf_see_grupos_produtos[]
}

model at_prf_see_grupos_produtos {
  id                                   BigInt                    @id(map: "pk_at_prf_see_grupos_produtos") @default(autoincrement())
  id_dados_producao                    BigInt
  id_grupo_produtos                    BigInt
  producao_aproximada_ultimo_ano_pnae  BigInt?
  area_utilizada                       Float?
  producao_aproximada_ultimo_ano_total BigInt?
  at_prf_see_dados_producao            at_prf_see_dados_producao @relation(fields: [id_dados_producao], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_dados")
  at_prf_grupo_produto                 at_prf_grupo_produto      @relation(fields: [id_grupo_produtos], references: [id_grupo], onDelete: NoAction, onUpdate: NoAction, map: "fk_grupo")
  at_prf_see_produto                   at_prf_see_produto[]
}

model at_prf_see_produto {
  id                                   BigInt                     @id(map: "pk_at_prf_see_produto") @default(autoincrement())
  id_perfil_grupo                      BigInt
  id_produto                           BigInt
  area_utilizada                       Float?
  producao_aproximada_ultimo_ano_pnae  BigInt?
  producao_aproximada_ultimo_ano_total BigInt?
  at_prf_see_grupos_produtos           at_prf_see_grupos_produtos @relation(fields: [id_perfil_grupo], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_perfil_see")
  at_prf_produto                       at_prf_produto             @relation(fields: [id_produto], references: [id_produto], onDelete: NoAction, onUpdate: NoAction, map: "fk_produto")
}

model at_prf_see_propriedade {
  id                     BigInt         @id(map: "pk_at_prf_see_propriedade") @default(autoincrement())
  id_perfil_see          BigInt
  id_propriedade         BigInt
  atividade              String?        @db.VarChar(64)
  producao_dedicada_pnae Boolean?
  at_prf_see             at_prf_see     @relation(fields: [id_perfil_see], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_prf_see")
  pl_propriedade         pl_propriedade @relation(fields: [id_propriedade], references: [id_pl_propriedade], onDelete: NoAction, onUpdate: NoAction, map: "fk_propriedade")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model at_produto {
  id_at_produto          BigInt         @id(map: "pk_at_produto") @default(autoincrement())
  nome                   String         @db.VarChar(100)
  dt_update_record       DateTime?      @db.Timestamp(6)
  sn_spa                 Int?           @db.SmallInt
  sn_campo_acessorio     Int?           @db.SmallInt
  esg                    Int?           @db.SmallInt
  atendimento_individual Int?           @db.SmallInt
  at_indicador           at_indicador[]
}

model at_relatorio_jasper {
  id_relatorio   BigInt @id(map: "at_relatorio_jasper_pk") @default(autoincrement())
  nome_relatorio String @default("") @db.VarChar(255)
  url_relatorio  String @default("") @db.VarChar
  cod_relatorio  String @default("") @db.VarChar(10)
  tipo_relatorio String @default("") @db.VarChar(20)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model at_status {
  id_at_status     Int              @id(map: "pk_at_status") @default(autoincrement()) @db.SmallInt
  status           String           @db.VarChar(20)
  dt_update_record DateTime?        @db.Timestamp(6)
  at_atendimento   at_atendimento[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model at_tipo_campo_acessorio {
  id_at_tipo_campo_acessorio Int                  @id(map: "pk_at_tipo_campo_acessorio") @default(autoincrement()) @db.SmallInt
  descricao                  String               @db.VarChar(20)
  dt_update_record           DateTime?            @db.Timestamp(6)
  lista_valores              Boolean              @default(false)
  at_campo_acessorio         at_campo_acessorio[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model bp_associacao {
  id_pessoa_demeter_associacao                                      BigInt
  id_pessoa_demeter_associado                                       BigInt
  ativo                                                             Boolean    @default(true)
  id_bp_associacao                                                  BigInt     @id(map: "pk_bp_associacao") @default(autoincrement())
  dt_update_record                                                  DateTime   @default(now()) @db.Timestamp(6)
  id_sincronismo                                                    String?    @default(dbgenerated("(uuid_generate_v4())::character varying(36)")) @db.VarChar(36)
  id_und_empresa                                                    String?    @db.VarChar(5)
  id_sincronismo_cliente_associado                                  String?    @db.VarChar(36)
  id_sincronismo_cliente_associacao                                 String?    @db.VarChar(36)
  ger_pessoa_bp_associacao_id_pessoa_demeter_associacaoToger_pessoa ger_pessoa @relation("bp_associacao_id_pessoa_demeter_associacaoToger_pessoa", fields: [id_pessoa_demeter_associacao], references: [id_pessoa_demeter], onDelete: NoAction, onUpdate: NoAction, map: "fk2qwc118lgaxw293wck7or2don")
  ger_pessoa_bp_associacao_id_pessoa_demeter_associadoToger_pessoa  ger_pessoa @relation("bp_associacao_id_pessoa_demeter_associadoToger_pessoa", fields: [id_pessoa_demeter_associado], references: [id_pessoa_demeter], onDelete: NoAction, onUpdate: NoAction, map: "fk_bp_ger_pessoa_associado")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model bp_atestado {
  id_bp_atestado              BigInt                    @id(map: "pk_bp_atestado") @default(autoincrement())
  id_atestado                 String?                   @db.VarChar(36)
  dt_visita                   DateTime                  @db.Date
  cd_atestado                 BigInt?
  fk_cliente                  String?                   @db.VarChar(36)
  fk_usuario                  String?                   @db.VarChar(5)
  fk_und_empresa              String                    @db.VarChar(5)
  tp_exploracao               Int?                      @db.SmallInt
  qt_area_explorada           Float?
  sn_exclusao                 Int?                      @db.SmallInt
  dt_update_record            DateTime?                 @db.Timestamp(6)
  fk_propriedade              String?                   @db.VarChar(36)
  dt_emissao                  DateTime?                 @db.Date
  qt_area_cultivada           Float?
  sn_permite_divulgar_contato Int?                      @db.SmallInt
  ds_observacao               String?                   @db.VarChar(500)
  fk_central_abastecimento    BigInt?
  sn_validado_ceasa           Int?                      @db.SmallInt
  id_usuario_demeter          BigInt?
  id_pessoa_demeter           BigInt?
  complemento                 String?                   @db.VarChar(500)
  codigo_barras               String?
  ativo                       Boolean                   @default(true)
  id_sincronismo              String?                   @default(dbgenerated("(uuid_generate_v4())::character varying(36)")) @db.VarChar(36)
  id_und_empresa              String?                   @db.VarChar(5)
  id_sincronismo_cliente      String?                   @db.VarChar(36)
  dt_pagamento                DateTime?                 @db.Date
  nr_dae                      String?                   @db.VarChar(40)
  bp_central_abastecimento    bp_central_abastecimento? @relation(fields: [fk_central_abastecimento], references: [id_bp_central_abastecimento], onDelete: NoAction, onUpdate: NoAction, map: "fk72kb85pd0xbd2bb7ksoyxc1wk")
  ger_pessoa                  ger_pessoa?               @relation(fields: [id_pessoa_demeter], references: [id_pessoa_demeter], onDelete: NoAction, onUpdate: NoAction, map: "fk_bp_atestado_ger_pessoa")
  usuario                     usuario?                  @relation(fields: [id_usuario_demeter], references: [id_usuario], onDelete: NoAction, onUpdate: NoAction, map: "fk_bp_atestado_usuario")
  ger_und_empresa             ger_und_empresa           @relation(fields: [fk_und_empresa], references: [id_und_empresa], onDelete: NoAction, onUpdate: NoAction, map: "fk_ger_und_empresa")
  bp_atestado_pessoa          bp_atestado_pessoa[]
  bp_atestado_producao        bp_atestado_producao[]
  bp_atestado_propriedade     bp_atestado_propriedade[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model bp_atestado_pessoa {
  id_bp_atestado             BigInt
  id_pessoa_demeter          BigInt
  id_bp_atestado_pessoa      BigInt      @id(map: "pk_bp_atestado_pessoa") @default(autoincrement())
  representante              Boolean?
  dt_update_record           DateTime    @default(now()) @db.Timestamp(6)
  ativo                      Boolean?
  id_sincronismo             String?     @default(dbgenerated("(uuid_generate_v4())::character varying(36)")) @db.VarChar(36)
  id_und_empresa             String?     @db.VarChar(5)
  id_sincronismo_cliente     String?     @db.VarChar(36)
  id_sincronismo_bp_atestado String?     @db.VarChar(36)
  bp_atestado                bp_atestado @relation(fields: [id_bp_atestado], references: [id_bp_atestado], onDelete: NoAction, onUpdate: NoAction, map: "fk5ptma3xqw59iv9ixeuicpl3aq")
  ger_pessoa                 ger_pessoa  @relation(fields: [id_pessoa_demeter], references: [id_pessoa_demeter], onDelete: NoAction, onUpdate: NoAction, map: "fk_bp_atestado_pessoa_pessoa")
}

model bp_atestado_producao {
  id_bp_atestado_producao    BigInt        @id(map: "pk_bp_atestado_producao") @default(autoincrement())
  id_bp_atestado             BigInt
  id_atestado_producao       String?       @db.VarChar(36)
  fk_atestado                String?       @db.VarChar(36)
  fk_produto                 BigInt?
  fk_embalagem               BigInt?
  qt_area_producao           Float?
  qt_producao_estimada       Float?
  qt_producao_declarada      Float?
  dt_inicio                  DateTime?     @db.Date
  dt_fim                     DateTime?     @db.Date
  sn_exclusao                Int?          @db.SmallInt
  dt_update_record           DateTime?     @db.Timestamp(6)
  ativo                      Boolean       @default(true)
  id_sincronismo             String?       @default(dbgenerated("(uuid_generate_v4())::character varying(36)")) @db.VarChar(36)
  id_und_empresa             String?       @db.VarChar(5)
  id_sincronismo_bp_atestado String?       @db.VarChar(36)
  bp_atestado                bp_atestado   @relation(fields: [id_bp_atestado], references: [id_bp_atestado], onDelete: NoAction, onUpdate: NoAction, map: "fk2sarwlmoxvak27m8nanwyps12")
  bp_embalagem               bp_embalagem? @relation(fields: [fk_embalagem], references: [id_embalagem], onDelete: NoAction, onUpdate: NoAction, map: "fk674k1f264diwy7ebvr61t0wrl")
  bp_produto                 bp_produto?   @relation(fields: [fk_produto], references: [id_produto], onDelete: NoAction, onUpdate: NoAction, map: "fk_bp_atestado_producao_produto")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model bp_atestado_propriedade {
  id_bp_atestado             BigInt
  id_pl_propriedade          BigInt
  id_bp_atestado_propriedade BigInt         @id(map: "pk_bp_atestado_propriedade") @default(autoincrement())
  dt_update_record           DateTime       @default(now()) @db.Timestamp(6)
  ativo                      Boolean?
  id_sincronismo             String?        @default(dbgenerated("(uuid_generate_v4())::character varying(36)")) @db.VarChar(36)
  id_und_empresa             String?        @db.VarChar(5)
  id_sincronismo_bp_atestado String?        @db.VarChar(36)
  id_sincronismo_propriedade String?        @db.VarChar(36)
  bp_atestado                bp_atestado    @relation(fields: [id_bp_atestado], references: [id_bp_atestado], onDelete: NoAction, onUpdate: NoAction, map: "fk_bp_atestado_propriedade_atestado")
  pl_propriedade             pl_propriedade @relation(fields: [id_pl_propriedade], references: [id_pl_propriedade], onDelete: NoAction, onUpdate: NoAction, map: "fk_bp_atestado_propriedade_propriedade")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model bp_central_abastecimento {
  id_bp_central_abastecimento BigInt        @id(map: "pk_bp_central_abastecimento")
  ds_central_abastecimento    String?       @db.VarChar(100)
  tp_central_abastecimento    Int?          @db.SmallInt
  dt_update_record            DateTime?     @db.Timestamp(6)
  ativo                       Boolean?      @default(true)
  bp_atestado                 bp_atestado[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model bp_cooperativa {
  id_pessoa_demeter_cooperativa                                       BigInt
  id_pessoa_demeter_cooperado                                         BigInt
  ativo                                                               Boolean    @default(true)
  id_bp_cooperativa                                                   BigInt     @id(map: "pk_bp_cooperativa") @default(autoincrement())
  dt_update_record                                                    DateTime   @default(now()) @db.Timestamp(6)
  id_sincronismo                                                      String?    @default(dbgenerated("(uuid_generate_v4())::character varying(36)")) @db.VarChar(36)
  id_und_empresa                                                      String?    @db.VarChar(5)
  id_sincronismo_cliente_cooperativa                                  String?    @db.VarChar(36)
  id_sincronismo_cliente_cooperado                                    String?    @db.VarChar(36)
  ger_pessoa_bp_cooperativa_id_pessoa_demeter_cooperadoToger_pessoa   ger_pessoa @relation("bp_cooperativa_id_pessoa_demeter_cooperadoToger_pessoa", fields: [id_pessoa_demeter_cooperado], references: [id_pessoa_demeter], onDelete: NoAction, onUpdate: NoAction, map: "fk_bp_ger_pessoa_cooperado")
  ger_pessoa_bp_cooperativa_id_pessoa_demeter_cooperativaToger_pessoa ger_pessoa @relation("bp_cooperativa_id_pessoa_demeter_cooperativaToger_pessoa", fields: [id_pessoa_demeter_cooperativa], references: [id_pessoa_demeter], onDelete: NoAction, onUpdate: NoAction, map: "fk_bp_ger_pessoa_cooperativa")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model bp_embalagem {
  id_embalagem         BigInt                 @id(map: "pk_bp_embalagem")
  cd_embalagem         String?                @db.VarChar(10)
  ds_embalagem         String?                @db.VarChar(40)
  vl_conversao         Decimal?               @db.Decimal(15, 3)
  dt_update_record     DateTime?              @db.Timestamp(6)
  bp_atestado_producao bp_atestado_producao[]
  bp_produto_embalagem bp_produto_embalagem[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model bp_grupo_produtor {
  id_pessoa_demeter_grupo_produtor                                          BigInt
  id_pessoa_demeter_participante                                            BigInt
  ativo                                                                     Boolean    @default(true)
  id_bp_grupo_produtor                                                      BigInt     @id(map: "pk_bp_grupo_produtor") @default(autoincrement())
  dt_update_record                                                          DateTime   @default(now()) @db.Timestamp(6)
  id_sincronismo                                                            String?    @default(dbgenerated("(uuid_generate_v4())::character varying(36)")) @db.VarChar(36)
  id_und_empresa                                                            String?    @db.VarChar(5)
  id_sincronismo_cliente_grupo_produtor                                     String?    @db.VarChar(36)
  id_sincronismo_cliente_participante                                       String?    @db.VarChar(36)
  ger_pessoa_bp_grupo_produtor_id_pessoa_demeter_participanteToger_pessoa   ger_pessoa @relation("bp_grupo_produtor_id_pessoa_demeter_participanteToger_pessoa", fields: [id_pessoa_demeter_participante], references: [id_pessoa_demeter], onDelete: NoAction, onUpdate: NoAction, map: "fk2nm8vnmidrjitsxa6qa70p5by")
  ger_pessoa_bp_grupo_produtor_id_pessoa_demeter_grupo_produtorToger_pessoa ger_pessoa @relation("bp_grupo_produtor_id_pessoa_demeter_grupo_produtorToger_pessoa", fields: [id_pessoa_demeter_grupo_produtor], references: [id_pessoa_demeter], onDelete: NoAction, onUpdate: NoAction, map: "fk6mfj1agknlaabmuk5bh18gvag")
}

model bp_parametro {
  id_bp_parametro  BigInt   @id(map: "pk_id_bp_parametro") @default(autoincrement())
  fim_colheita     Int
  dt_update_record DateTime @default(now()) @db.Timestamp(6)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model bp_produto {
  id_produto                     BigInt                           @id(map: "pk_bp_produto")
  cd_produto                     String?                          @db.VarChar(4)
  fk_grupo                       Int
  nm_produto                     String?                          @db.VarChar(100)
  ds_unidade                     String?                          @db.VarChar(30)
  qt_ciclo                       Int?                             @db.SmallInt
  qt_pm_alta_kg                  Decimal?                         @db.Decimal(18, 2)
  qt_pm_alta_sc                  Decimal?                         @db.Decimal(18, 2)
  qt_pm_media_kg                 Decimal?                         @db.Decimal(18, 2)
  qt_pm_media_sc                 Decimal?                         @db.Decimal(18, 2)
  qt_pm_baixa_kg                 Decimal?                         @db.Decimal(18, 2)
  qt_pm_baixa_sc                 Decimal?                         @db.Decimal(18, 2)
  qt_pm_plantio_kg               Decimal?                         @db.Decimal(18, 2)
  qt_pm_plnatio_sc               Decimal?                         @db.Decimal(18, 2)
  dt_update_record               DateTime?                        @db.Timestamp(6)
  sn_custo_producao              Int?                             @db.SmallInt
  nr_cod_cultura                 Int?                             @db.SmallInt
  sn_safra                       Int?                             @db.SmallInt
  tp_grupo_safra                 Int?                             @db.SmallInt
  nr_ciclo_ini                   Int?                             @db.SmallInt
  nr_ciclo_fim                   Int?                             @db.SmallInt
  cd_produto_ceasa               String?                          @db.VarChar(20)
  sn_precos                      Int?                             @db.SmallInt
  ds_und_area                    String?                          @db.VarChar(50)
  ds_und_produtividade           String?                          @db.VarChar(50)
  ds_und_producao                String?                          @db.VarChar(50)
  bp_atestado_producao           bp_atestado_producao[]
  bp_produto_embalagem           bp_produto_embalagem[]
  cp_empreendimento_agricola     cp_empreendimento_agricola[]
  cr_custeio_agricola_proponente cr_custeio_agricola_proponente[]
  cr_custeio_pecuaria_proponente cr_custeio_pecuaria_proponente[]
  cr_receitas_agricola           cr_receitas_agricola[]
}

model bp_produto_embalagem {
  id_bp_produto_embalagem BigInt        @id(map: "pk_bp_produto_embalagem") @default(autoincrement())
  fk_produto              BigInt?
  fk_embalagem            BigInt?
  dt_update_record        DateTime?     @db.Timestamp(6)
  bp_embalagem            bp_embalagem? @relation(fields: [fk_embalagem], references: [id_embalagem], onDelete: NoAction, onUpdate: NoAction, map: "fk_bp_produto_embalagem_embalagem")
  bp_produto              bp_produto?   @relation(fields: [fk_produto], references: [id_produto], onDelete: NoAction, onUpdate: NoAction, map: "fk_bp_produto_embalagem_produto")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model cc_cert_cafe {
  id_cc_cert_cafe            BigInt                       @id(map: "pk_cc_cert_cafe") @default(autoincrement())
  id_pl_propriedade          BigInt
  ativo                      Boolean?
  dt_update_record           DateTime?                    @db.Timestamp(6)
  id_cc_status_certificacao  Int?
  dt_resultado_ima           DateTime?                    @db.Date
  id_und_empresa             String?                      @db.VarChar(5)
  id_sincronismo_propriedade String?                      @db.VarChar(36)
  id_sincronismo             String?                      @default(dbgenerated("(uuid_generate_v4())::character varying(36)")) @db.VarChar(36)
  pl_propriedade             pl_propriedade               @relation(fields: [id_pl_propriedade], references: [id_pl_propriedade], onDelete: NoAction, onUpdate: NoAction, map: "fk_pl_propriedade_cc_cert_cafe")
  cc_evento                  cc_evento[]
  cc_resultados_certificacao cc_resultados_certificacao[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model cc_evento {
  id_cc_evento             BigInt                @id(map: "pk_cc_evento") @default(autoincrement())
  id_cc_cert_cafe          BigInt
  data_evento              DateTime?             @db.Date
  obs_evento               String?
  data_proxima_evento      DateTime?             @db.Date
  dt_update_record         DateTime?             @db.Timestamp(6)
  tipo_evento              String                @db.VarChar(1)
  id_und_empresa           String?               @db.VarChar(5)
  id_sincronismo_cert_cafe String?               @db.VarChar(36)
  id_sincronismo           String?               @default(dbgenerated("(uuid_generate_v4())::character varying(36)")) @db.VarChar(36)
  assinatura_proprietario  String?
  sn_ultima_visita         Boolean?
  ativo                    Boolean?
  assinatura_tecnico       String?
  id_usuario               BigInt                @default(1)
  cc_cert_cafe             cc_cert_cafe          @relation(fields: [id_cc_cert_cafe], references: [id_cc_cert_cafe], onDelete: NoAction, onUpdate: NoAction, map: "fk_evento_cert_cafe")
  cc_evento_avaliacao      cc_evento_avaliacao[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model cc_evento_avaliacao {
  id_cc_evento_avaliacao BigInt                @id(map: "pk_cc_evento_avaliacao") @default(autoincrement())
  id_cc_evento           BigInt
  id_cc_norma            BigInt
  resultado              Int?
  dt_update_record       DateTime?             @db.Timestamp(6)
  id_und_empresa         String?               @db.VarChar(5)
  id_sincronismo_evento  String?               @db.VarChar(36)
  id_sincronismo         String?               @default(dbgenerated("(uuid_generate_v4())::character varying(36)")) @db.VarChar(36)
  ativo                  Boolean?
  cc_evento              cc_evento             @relation(fields: [id_cc_evento], references: [id_cc_evento], onDelete: NoAction, onUpdate: NoAction, map: "fk_avaliacao_evento")
  cc_norma               cc_norma              @relation(fields: [id_cc_norma], references: [id_cc_norma], onDelete: NoAction, onUpdate: NoAction, map: "fk_avaliacao_norma")
  cc_evento_evidencia    cc_evento_evidencia[]
  cc_evento_foto         cc_evento_foto[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model cc_evento_evidencia {
  id_cc_evento_evidencia BigInt              @id(map: "pk_cc_evento_evidencia") @default(autoincrement())
  id_cc_evento_avaliacao BigInt
  evidencia              String?             @db.VarChar(4000)
  id_und_empresa         String?             @db.VarChar(5)
  id_sincronismo_evento  String?             @db.VarChar(36)
  id_sincronismo         String?             @default(dbgenerated("(uuid_generate_v4())::character varying(36)")) @db.VarChar(36)
  ativo                  Boolean?
  cc_evento_avaliacao    cc_evento_avaliacao @relation(fields: [id_cc_evento_avaliacao], references: [id_cc_evento_avaliacao], onDelete: NoAction, onUpdate: NoAction, map: "fk_cc_evento_avaliacao")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model cc_evento_foto {
  id_cc_evento_foto      BigInt              @id(map: "pk_cc_evento_foto") @default(autoincrement())
  id_cc_evento_avaliacao BigInt
  foto1                  String?
  id_und_empresa         String?             @db.VarChar(5)
  id_sincronismo_evento  String?             @db.VarChar(36)
  id_sincronismo         String?             @default(dbgenerated("(uuid_generate_v4())::character varying(36)")) @db.VarChar(36)
  ativo                  Boolean?
  mime_type              String?             @db.VarChar(50)
  nome_arquivo           String?             @db.VarChar(250)
  cc_evento_avaliacao    cc_evento_avaliacao @relation(fields: [id_cc_evento_avaliacao], references: [id_cc_evento_avaliacao], onDelete: NoAction, onUpdate: NoAction, map: "fk_cc_evento_avaliacao")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model cc_evento_tipo {
  id_cc_evento_tipo     BigInt  @id(map: "pk_cc_evento_tipo") @default(autoincrement())
  tipo_evento           String  @db.VarChar(1)
  descricao_tipo_evento String? @db.VarChar(100)
}

model cc_grupo_norma {
  id_cc_grupo_norma BigInt              @id(map: "pk_cc_grupo_norma") @default(autoincrement())
  des_grupo_norma   String?             @db.VarChar(1000)
  ativo             Boolean?
  dt_update_record  DateTime?           @db.Timestamp(6)
  ordenacao         Int?
  cc_subgrupo_norma cc_subgrupo_norma[]
}

model cc_manual_gestao {
  id_cc_manual_gestao BigInt    @id(map: "pk_cc_manual_gestao") @default(autoincrement())
  id_cc_norma         BigInt
  recomendacao        String?   @db.VarChar(2000)
  ativo               Boolean?
  dt_update_record    DateTime? @db.Timestamp(6)
  cc_norma            cc_norma  @relation(fields: [id_cc_norma], references: [id_cc_norma], onDelete: NoAction, onUpdate: NoAction, map: "fk_cc_manual_cc_norma")
}

model cc_norma {
  id_cc_norma          BigInt                @id(map: "pk_cc_norma") @default(autoincrement())
  id_cc_subgrupo_norma BigInt
  norma                String?               @db.VarChar(1000)
  criterio_cumprimento String?               @db.VarChar(1000)
  exigibilidade        Int?
  peso                 Int?
  ativo                Boolean?
  dt_update_record     DateTime?             @db.Timestamp(6)
  ordenacao            Int?
  cc_evento_avaliacao  cc_evento_avaliacao[]
  cc_manual_gestao     cc_manual_gestao[]
  cc_subgrupo_norma    cc_subgrupo_norma     @relation(fields: [id_cc_subgrupo_norma], references: [id_cc_subgrupo_norma], onDelete: NoAction, onUpdate: NoAction, map: "fk_cc_norma_cc_subgrupo_norma")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model cc_resultados_certificacao {
  id_cc_resultados_certificacao BigInt       @id(map: "pk_cc_resultados_certificacao") @default(autoincrement())
  id_cc_cert_cafe               BigInt
  descricao_resultados          String?
  data_certificacao             DateTime?    @db.Date
  id_und_empresa                String?      @db.VarChar(5)
  id_sincronismo_cert_cafe      String?      @db.VarChar(36)
  id_sincronismo                String?      @default(dbgenerated("(uuid_generate_v4())::character varying(36)")) @db.VarChar(36)
  nome_auditor                  String?      @db.VarChar(100)
  crea                          String?      @db.VarChar(100)
  data_contrato_certificacao    DateTime?    @db.Date
  ano_civil                     Int?
  numero_rg                     String?      @db.VarChar(20)
  numero_ano_certificacao       Int?
  ativo                         Boolean?
  dt_update_record              DateTime?    @db.Timestamp(6)
  cc_cert_cafe                  cc_cert_cafe @relation(fields: [id_cc_cert_cafe], references: [id_cc_cert_cafe], onDelete: NoAction, onUpdate: NoAction, map: "fk_resultados_cert_cafe")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model cc_status_certificacao {
  id_cc_status_certificacao BigInt  @id(map: "pk_cc_status_certificacao") @default(autoincrement())
  descricao_status          String? @db.VarChar(30)
}

model cc_subgrupo_norma {
  id_cc_subgrupo_norma BigInt         @id(map: "pk_cc_subgrupo_norma") @default(autoincrement())
  id_cc_grupo_norma    BigInt
  des_subgrupo_norma   String?        @db.VarChar(1000)
  ativo                Boolean?
  dt_update_record     DateTime?      @db.Timestamp(6)
  ordenacao            Int?
  cc_norma             cc_norma[]
  cc_grupo_norma       cc_grupo_norma @relation(fields: [id_cc_grupo_norma], references: [id_cc_grupo_norma], onDelete: NoAction, onUpdate: NoAction, map: "fk_cc_subgrupo_cc_grupo_norma")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model coeficiente_producao {
  id_coeficiente_producao        BigInt                @id(map: "pk_coeficiente_producao") @default(autoincrement())
  tipo_id_coeficiente_producao   Int
  descricao_coeficiente_producao String                @db.VarChar(255)
  valor_coeficiente_producao     Decimal               @db.Decimal(12, 8)
  date_creacao                   DateTime              @db.Date
  coeficiente_produto            coeficiente_produto[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model coeficiente_produto {
  id_coeficiente_produto      BigInt               @id(map: "pk_coeficiente_produto") @default(autoincrement())
  id_produto                  BigInt
  id_coeficiente_producao_ref BigInt
  coeficiente_producao        coeficiente_producao @relation(fields: [id_coeficiente_producao_ref], references: [id_coeficiente_producao], onDelete: NoAction, onUpdate: NoAction, map: "fk_coeficiente_producao")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model contato_pessoa {
  id_contato_pessoa      Int                  @id(map: "pk_contato_pessoa") @default(autoincrement())
  telefone               String?              @db.Char(11)
  principal              Boolean?
  id_tipo_contato_pessoa Int?
  id_pessoa              Int?
  data_atualizacao       DateTime?            @db.Timestamp(6)
  id_und_empresa         String?              @db.Char(5)
  fk_operadora           Int?
  id_sincronismo         String?              @default(dbgenerated("(uuid_generate_v4())::character varying(36)")) @db.VarChar(36)
  id_sincronismo_cliente String?              @db.VarChar(36)
  ger_pessoa             ger_pessoa?          @relation(fields: [id_pessoa], references: [id_pessoa_demeter], onDelete: NoAction, onUpdate: NoAction, map: "fk5xiuy7qfcsk3oavfh2lmu0v0y")
  ger_und_empresa        ger_und_empresa?     @relation(fields: [id_und_empresa], references: [id_und_empresa], onDelete: NoAction, onUpdate: NoAction, map: "fk_contato_pessoa_ger_und_empresa")
  operadora              operadora?           @relation(fields: [fk_operadora], references: [id_operadora], onDelete: NoAction, onUpdate: NoAction, map: "fk_contato_pessoa_operadora")
  tipo_contato_pessoa    tipo_contato_pessoa? @relation(fields: [id_tipo_contato_pessoa], references: [id_tipo_contato_pessoa], onDelete: NoAction, map: "fk_contato_pessoa_tipo_contato_pessoa")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model cp_atividade_pecuaria {
  id_cp_atividade_pecuaria   BigInt                       @id(map: "pk_cp_atividade_pecuaria") @default(autoincrement())
  des_atividade_pecuaria     String                       @db.VarChar(50)
  ativo                      Boolean?
  cp_atividade_segmento      cp_atividade_segmento[]
  cp_empreendimento_pecuaria cp_empreendimento_pecuaria[]
  cp_produto_pecuaria        cp_produto_pecuaria[]
  cr_relacionamento_pecuaria cr_relacionamento_pecuaria[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model cp_atividade_segmento {
  id_cp_atividade_segmento BigInt                @id(map: "pk_atividade_segmento") @default(autoincrement())
  id_cp_atividade_pecuaria BigInt
  id_cp_segmento           BigInt
  cp_segmento              cp_segmento           @relation(fields: [id_cp_segmento], references: [id_cp_segmento], onDelete: NoAction, onUpdate: NoAction, map: "fk82hei13tv1yfsm5cf3md2y06g")
  cp_atividade_pecuaria    cp_atividade_pecuaria @relation(fields: [id_cp_atividade_pecuaria], references: [id_cp_atividade_pecuaria], onDelete: Cascade, onUpdate: NoAction, map: "fk_atiseg_ati")
}

model cp_ciclo {
  id_cp_ciclo                BigInt                       @id(map: "pk_cp_ciclo") @default(autoincrement())
  des_ciclo                  String                       @db.VarChar(100)
  ativo                      Boolean?
  cp_empreendimento_agricola cp_empreendimento_agricola[]
}

model cp_cultura {
  id_cp_cultura                BigInt                         @id(map: "pk_cp_cultura") @default(autoincrement())
  des_cultura                  String                         @db.VarChar(100)
  ativo                        Boolean?
  cp_custo_individual_agricola cp_custo_individual_agricola[]
  cp_empreendimento_agricola   cp_empreendimento_agricola[]
  cp_faixa                     cp_faixa[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model cp_custo_individual_agricola {
  id_cp_custo_individual_agricola BigInt                            @id(map: "pk_cp_custo_individual_agricola") @default(autoincrement())
  id_pessoa_demeter               BigInt
  id_pl_propriedade               BigInt
  id_usuario                      BigInt
  id_cp_grupo_agricola            BigInt
  id_cp_cultura                   BigInt
  id_cp_safra                     BigInt
  id_cp_faixa                     BigInt
  data_referencia                 DateTime                          @db.Date
  data_inicio                     DateTime                          @db.Date
  data_fim                        DateTime                          @db.Date
  custo_total                     Float?
  receita_total                   Float?
  margem_bruta_total              Float?
  custo_unitario                  Float?
  receita_unitaria                Float?
  margem_bruta_unitaria           Float?
  percentual_margem_bruta         Float?
  sn_ativo                        Int                               @default(1) @db.SmallInt
  dt_update_record                DateTime?                         @db.Timestamp(6)
  area_cultivada                  Decimal?                          @db.Decimal(13, 4)
  usuario                         usuario                           @relation(fields: [id_usuario], references: [id_usuario], onDelete: NoAction, onUpdate: NoAction, map: "fk1gdb5txvt9y0qu3cr39m9b1he")
  cp_grupo_agricola               cp_grupo_agricola                 @relation(fields: [id_cp_grupo_agricola], references: [id_cp_grupo_agricola], onDelete: NoAction, onUpdate: NoAction, map: "fk5riaafeg45ox641d921daaoh3")
  ger_pessoa                      ger_pessoa                        @relation(fields: [id_pessoa_demeter], references: [id_pessoa_demeter], onDelete: NoAction, onUpdate: NoAction, map: "fk_cliente")
  cp_cultura                      cp_cultura                        @relation(fields: [id_cp_cultura], references: [id_cp_cultura], onDelete: NoAction, onUpdate: NoAction, map: "fk_cultura")
  cp_faixa                        cp_faixa                          @relation(fields: [id_cp_faixa], references: [id_cp_faixa], onDelete: NoAction, onUpdate: NoAction, map: "fk_faixa")
  pl_propriedade                  pl_propriedade                    @relation(fields: [id_pl_propriedade], references: [id_pl_propriedade], onDelete: NoAction, onUpdate: NoAction, map: "fk_propriedade")
  cp_safra                        cp_safra                          @relation(fields: [id_cp_safra], references: [id_cp_safra], onDelete: NoAction, onUpdate: NoAction, map: "fk_safra")
  cp_insumo_custo_individual_agr  cp_insumo_custo_individual_agr[]
  cp_receitas_agr_custo_ind       cp_receitas_agr_custo_ind[]
  cp_servico_custo_individual_agr cp_servico_custo_individual_agr[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model cp_custo_individual_pecuaria {
  id_cp_custo_individual          BigInt                            @id(map: "pk_cp_custo_individual_pec") @default(autoincrement())
  custo_total                     Float?
  receita_total                   Float?
  margem_bruta_total              Float?
  custo_unitario                  Float?
  receita_unitaria                Float?
  margem_bruta_unitaria           Float?
  percentual_margem_bruta         Float?
  tamanho_modal                   Int
  data_referencia                 DateTime?                         @db.Date
  ativo                           Boolean?
  id_cp_produto_pecuaria          BigInt
  id_pl_propriedade               BigInt
  id_usuario                      BigInt
  id_cp_sistema_exploracao        BigInt
  id_cp_nivel_tecnologico         BigInt
  id_und_medida                   BigInt
  id_pessoa_demeter               BigInt
  id_cp_segmento                  BigInt
  id_cp_fase                      BigInt
  cp_segmento                     cp_segmento                       @relation(fields: [id_cp_segmento], references: [id_cp_segmento], onDelete: NoAction, onUpdate: NoAction, map: "fk24wm18wojy2uo89vtohckgj3d")
  cp_nivel_tecnologico            cp_nivel_tecnologico              @relation(fields: [id_cp_nivel_tecnologico], references: [id_cp_nivel_tecnologico], onDelete: NoAction, onUpdate: NoAction, map: "fk3ni5cxkucnli2n7rh90p0cw7")
  usuario                         usuario                           @relation(fields: [id_usuario], references: [id_usuario], onDelete: NoAction, onUpdate: NoAction, map: "fk4r2kl23gdojbplphv11wdpyq1")
  ger_pessoa                      ger_pessoa                        @relation(fields: [id_pessoa_demeter], references: [id_pessoa_demeter], onDelete: NoAction, onUpdate: NoAction, map: "fk_cp_custo_ind_cliente")
  cp_fase                         cp_fase                           @relation(fields: [id_cp_fase], references: [id_cp_fase], onDelete: NoAction, onUpdate: NoAction, map: "fk_cp_custo_ind_fase")
  cp_produto_pecuaria             cp_produto_pecuaria               @relation(fields: [id_cp_produto_pecuaria], references: [id_cp_produto_pecuaria], onDelete: NoAction, onUpdate: NoAction, map: "fk_cp_custo_ind_produto")
  pl_propriedade                  pl_propriedade                    @relation(fields: [id_pl_propriedade], references: [id_pl_propriedade], onDelete: NoAction, onUpdate: NoAction, map: "fk_cp_custo_ind_prop")
  cp_sistema_exploracao           cp_sistema_exploracao             @relation(fields: [id_cp_sistema_exploracao], references: [id_cp_sistema_exploracao], onDelete: NoAction, onUpdate: NoAction, map: "fk_cp_custo_sis_expl")
  und_medida                      und_medida                        @relation(fields: [id_und_medida], references: [id_und_medida], onDelete: NoAction, onUpdate: NoAction, map: "fk_cp_custo_und_medida")
  cp_insumo_custo_individual_pec  cp_insumo_custo_individual_pec[]
  cp_receitas_pec_custo_ind       cp_receitas_pec_custo_ind[]
  cp_servico_custo_individual_pec cp_servico_custo_individual_pec[]
}

model cp_empreendimento_agricola {
  id_cp_empreendimento_agricola BigInt                 @id(map: "pk_cp_empreendimento_agricola") @default(autoincrement())
  abrangencia                   String                 @db.VarChar(50)
  id_und_empresa                String?                @db.Char(50)
  id_cp_grupo_agricola          BigInt
  id_cp_cultura                 BigInt
  id_bp_produto                 BigInt
  ano                           String?                @db.Char(50)
  id_cp_ciclo                   BigInt
  id_cp_tipo_agricultura        BigInt
  id_cp_tipo_cultivo            BigInt
  id_cp_irrigacao               BigInt
  id_cp_unidade_custo           BigInt
  faixa_produtividade_inicio_ha Int
  faixa_produtividade_fim_ha    Int
  ativo                         Boolean?
  id_und_medida                 BigInt?
  id_cp_fase                    BigInt?
  id_cp_faixa                   BigInt?
  area_cultivada                Decimal?               @db.Decimal(13, 4)
  cp_unidade_custo              cp_unidade_custo       @relation(fields: [id_cp_unidade_custo], references: [id_cp_unidade_custo], onDelete: NoAction, onUpdate: NoAction, map: "fk37l5lq0cioq6bg33487wtfhhj")
  cp_cultura                    cp_cultura             @relation(fields: [id_cp_cultura], references: [id_cp_cultura], onDelete: NoAction, onUpdate: NoAction, map: "fk4d8bkwf5diue4kk69yddqe3pl")
  cp_grupo_agricola             cp_grupo_agricola      @relation(fields: [id_cp_grupo_agricola], references: [id_cp_grupo_agricola], onDelete: NoAction, onUpdate: NoAction, map: "fk8es222sgur3vv4wk4h5sqleid")
  bp_produto                    bp_produto             @relation(fields: [id_bp_produto], references: [id_produto], onDelete: NoAction, onUpdate: NoAction, map: "fk_bp_produto")
  cp_ciclo                      cp_ciclo               @relation(fields: [id_cp_ciclo], references: [id_cp_ciclo], onDelete: NoAction, onUpdate: NoAction, map: "fk_cp_ciclo")
  cp_fase                       cp_fase                @relation(fields: [id_cp_unidade_custo], references: [id_cp_fase], onDelete: NoAction, onUpdate: NoAction, map: "fk_cp_fase")
  cp_irrigacao                  cp_irrigacao           @relation(fields: [id_cp_irrigacao], references: [id_cp_irrigacao], onDelete: NoAction, onUpdate: NoAction, map: "fk_cp_irrigacao")
  cp_tipo_agricultura           cp_tipo_agricultura    @relation(fields: [id_cp_tipo_agricultura], references: [id_cp_tipo_agricultura], onDelete: NoAction, onUpdate: NoAction, map: "fk_cp_tipo_agricultura")
  cp_tipo_cultivo               cp_tipo_cultivo        @relation(fields: [id_cp_tipo_cultivo], references: [id_cp_tipo_cultivo], onDelete: NoAction, onUpdate: NoAction, map: "fk_cp_tipo_cultivo")
  cp_faixa                      cp_faixa?              @relation(fields: [id_cp_faixa], references: [id_cp_faixa], onDelete: NoAction, onUpdate: NoAction, map: "fk_faixa")
  cp_fase_agricola              cp_fase_agricola?      @relation(fields: [id_cp_fase], references: [id_cp_fase], onDelete: NoAction, onUpdate: NoAction, map: "fk_fase_agricola")
  und_medida                    und_medida?            @relation(fields: [id_und_medida], references: [id_und_medida], onDelete: NoAction, onUpdate: NoAction, map: "fkcw7fpec32apxvtc7jgpsgfube")
  ger_und_empresa               ger_und_empresa?       @relation(fields: [id_und_empresa], references: [id_und_empresa], onDelete: NoAction, onUpdate: NoAction, map: "fkdhtkcwsxuc69os2voxiuuu302")
  cp_insumo_agricola            cp_insumo_agricola[]
  cp_receitas_agricola          cp_receitas_agricola[]
  cp_servico_agricola           cp_servico_agricola[]
}

model cp_empreendimento_pecuaria {
  id_cp_empreendimento_pecuaria BigInt                 @id(map: "pk_cp_empreendimento_pecuaria") @default(autoincrement())
  abrangencia                   String                 @db.Char(1)
  id_und_empresa                String?                @db.Char(4)
  id_cp_atividade_pecuaria      BigInt
  id_cp_segmento                BigInt
  id_cp_produto_pecuaria        BigInt
  id_cp_nivel_tecnologico       BigInt
  id_cp_sistema_exploracao      BigInt
  id_cp_unidade_custo           BigInt
  tamanho_modal                 Int
  id_und_medida_producao        BigInt
  faixa_produtividade_inicio    Int
  faixa_produtividade_fim       Int
  ativo                         Boolean?
  id_cp_fase                    BigInt?
  cp_segmento                   cp_segmento            @relation(fields: [id_cp_segmento], references: [id_cp_segmento], onDelete: NoAction, onUpdate: NoAction, map: "fk4hfx8jjhky09xl9vb123ls0n4")
  ger_und_empresa               ger_und_empresa?       @relation(fields: [id_und_empresa], references: [id_und_empresa], onDelete: NoAction, onUpdate: NoAction, map: "fk6h2qq67umi75cp9heq55u8dss")
  und_medida                    und_medida             @relation(fields: [id_und_medida_producao], references: [id_und_medida], onDelete: NoAction, onUpdate: NoAction, map: "fk8vlddl5ew7eeyfdccvhssc7h8")
  cp_nivel_tecnologico          cp_nivel_tecnologico   @relation(fields: [id_cp_nivel_tecnologico], references: [id_cp_nivel_tecnologico], onDelete: NoAction, onUpdate: NoAction, map: "fk92d2m6eqtog2ijqc83d1icr7l")
  cp_sistema_exploracao         cp_sistema_exploracao  @relation(fields: [id_cp_sistema_exploracao], references: [id_cp_sistema_exploracao], onDelete: NoAction, onUpdate: NoAction, map: "fk9nu051bnm3bcawx526cygyyku")
  cp_atividade_pecuaria         cp_atividade_pecuaria  @relation(fields: [id_cp_atividade_pecuaria], references: [id_cp_atividade_pecuaria], onDelete: NoAction, onUpdate: NoAction, map: "fk_cp_emprendimento_ativ")
  cp_unidade_custo              cp_unidade_custo       @relation(fields: [id_cp_unidade_custo], references: [id_cp_unidade_custo], onDelete: NoAction, onUpdate: NoAction, map: "fk_cp_emprendimento_pec_und_custo")
  cp_produto_pecuaria           cp_produto_pecuaria    @relation(fields: [id_cp_produto_pecuaria], references: [id_cp_produto_pecuaria], onDelete: NoAction, onUpdate: NoAction, map: "fk_cp_emprendimento_produto_pecuaria")
  cp_fase_pecuaria              cp_fase_pecuaria?      @relation(fields: [id_cp_fase], references: [id_cp_fase], onDelete: NoAction, onUpdate: NoAction, map: "fk_fase_pecuaria")
  cp_insumo_pecuaria            cp_insumo_pecuaria[]
  cp_receitas_pecuaria          cp_receitas_pecuaria[]
  cp_servico_pecuaria           cp_servico_pecuaria[]
}

model cp_etapas_producao {
  id_cp_etapas_producao BigInt                @id(map: "pk_cp_etapas_producao") @default(autoincrement())
  des_etapas_producao   String                @db.VarChar(50)
  ativo                 Boolean?
  cp_insumo_agricola    cp_insumo_agricola[]
  cp_servico_agricola   cp_servico_agricola[]
  cr_insumo_agricola    cr_insumo_agricola[]
  cr_servico_agricola   cr_servico_agricola[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model cp_faixa {
  id_cp_faixa                  BigInt                         @id(map: "pk_cp_faixa") @default(autoincrement())
  descricao                    String                         @db.VarChar(255)
  id_cp_cultura                BigInt
  minimo                       BigInt?
  maximo                       BigInt?
  sn_ativo                     Int                            @default(1) @db.SmallInt
  dt_update_record             DateTime?                      @db.Timestamp(6)
  cp_custo_individual_agricola cp_custo_individual_agricola[]
  cp_empreendimento_agricola   cp_empreendimento_agricola[]
  cp_cultura                   cp_cultura                     @relation(fields: [id_cp_cultura], references: [id_cp_cultura], onDelete: NoAction, onUpdate: NoAction, map: "fk_cultura_faixa")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model cp_fase {
  id_cp_fase                   BigInt                         @id(map: "pk_cp_fase") @default(autoincrement())
  des_fase                     String                         @db.VarChar(50)
  ativo                        Boolean?
  cp_custo_individual_pecuaria cp_custo_individual_pecuaria[]
  cp_empreendimento_agricola   cp_empreendimento_agricola[]
  cp_fase_produto              cp_fase_produto[]
  cp_segmento_fase             cp_segmento_fase[]
  cr_relacionamento_pecuaria   cr_relacionamento_pecuaria[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model cp_fase_agricola {
  id_cp_fase                 BigInt                       @id(map: "pk_cp_fase_agricola") @default(autoincrement())
  des_fase                   String?                      @db.VarChar(50)
  ativo                      Boolean?
  cp_empreendimento_agricola cp_empreendimento_agricola[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model cp_fase_pecuaria {
  id_cp_fase                 BigInt                       @id(map: "pk_cp_fase_pecuaria") @default(autoincrement())
  des_fase                   String?                      @db.VarChar(50)
  ativo                      Boolean?
  cp_empreendimento_pecuaria cp_empreendimento_pecuaria[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model cp_fase_produto {
  id_cp_fase_produto     BigInt              @default(autoincrement())
  id_cp_fase             BigInt
  id_cp_produto_pecuaria BigInt
  cp_fase                cp_fase             @relation(fields: [id_cp_fase], references: [id_cp_fase], onDelete: NoAction, onUpdate: NoAction, map: "fk6wklewb3dwwrc41wpdk38x3vh")
  cp_produto_pecuaria    cp_produto_pecuaria @relation(fields: [id_cp_produto_pecuaria], references: [id_cp_produto_pecuaria], onDelete: Cascade, onUpdate: NoAction, map: "fk_fprod_produto")

  @@id([id_cp_fase, id_cp_produto_pecuaria], map: "pk_fase_produto")
}

model cp_grupo_agricola {
  id_cp_grupo_agricola         BigInt                         @id(map: "pk_cp_grupo_agricola") @default(autoincrement())
  des_grupo_agricola           String                         @db.VarChar(100)
  ativo                        Boolean?
  cp_custo_individual_agricola cp_custo_individual_agricola[]
  cp_empreendimento_agricola   cp_empreendimento_agricola[]
}

model cp_grupo_insumo {
  id_cp_grupo_insumo   BigInt                 @id(map: "pk_cp_grupo_insumo") @default(autoincrement())
  des_grupo_insumo     String                 @db.VarChar(50)
  ativo                Boolean?
  cp_item_custo_insumo cp_item_custo_insumo[]
}

model cp_insumo_agricola {
  id_cp_insumo_agricola         BigInt                     @id(map: "pk_cp_insumo_agricola") @default(autoincrement())
  id_cp_empreendimento_agricola BigInt
  id_cp_item_custo_insumo       BigInt
  id_cp_etapas_producao         BigInt?
  quantidade_ha                 Float?
  preco_unitario                Float?
  ativo                         Boolean?
  cp_item_custo_insumo          cp_item_custo_insumo       @relation(fields: [id_cp_item_custo_insumo], references: [id_cp_item_custo_insumo], onDelete: NoAction, onUpdate: NoAction, map: "fk741u67626v0waypqospnr008g")
  cp_empreendimento_agricola    cp_empreendimento_agricola @relation(fields: [id_cp_empreendimento_agricola], references: [id_cp_empreendimento_agricola], onDelete: NoAction, onUpdate: NoAction, map: "fk9qxqjg7r4t82w5osxr2u6vl16")
  cp_etapas_producao            cp_etapas_producao?        @relation(fields: [id_cp_etapas_producao], references: [id_cp_etapas_producao], onDelete: NoAction, onUpdate: NoAction, map: "fk_cp_etapas")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model cp_insumo_custo_individual_agr {
  id_cp_insumo_custo_individual_agr BigInt                       @id(map: "pk_cp_ins_custo_ind_agr") @default(autoincrement())
  id_cp_item_custo_insumo           BigInt
  id_cp_custo_individual_agricola   BigInt
  quantidade                        Float?
  preco_unitario                    Float?
  sn_ativo                          Int                          @default(1) @db.SmallInt
  cp_custo_individual_agricola      cp_custo_individual_agricola @relation(fields: [id_cp_custo_individual_agricola], references: [id_cp_custo_individual_agricola], onDelete: NoAction, onUpdate: NoAction, map: "fk9pf2thc6jlthie2vei42mw6bt")
  cp_item_custo_insumo              cp_item_custo_insumo         @relation(fields: [id_cp_item_custo_insumo], references: [id_cp_item_custo_insumo], onDelete: NoAction, onUpdate: NoAction, map: "fk_cp_item_custo_insumo_agr")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model cp_insumo_custo_individual_pec {
  id_cp_insumo_custo_individual BigInt                       @id(map: "pk_cp_ins_custo_ind_pec") @default(autoincrement())
  id_cp_item_custo_insumo       BigInt
  id_cp_custo_individual        BigInt
  quantidade                    Float?
  preco_unitario                Float?
  ativo                         Boolean?
  cp_custo_individual_pecuaria  cp_custo_individual_pecuaria @relation(fields: [id_cp_custo_individual], references: [id_cp_custo_individual], onDelete: NoAction, onUpdate: NoAction, map: "fk338brdl2mdqhqji5anym3dfdt")
  cp_item_custo_insumo          cp_item_custo_insumo         @relation(fields: [id_cp_item_custo_insumo], references: [id_cp_item_custo_insumo], onDelete: NoAction, onUpdate: NoAction, map: "fk_cp_item_custo_insumo_pec")
}

model cp_insumo_pecuaria {
  id_cp_insumo_pecuaria         BigInt                     @id(map: "pk_cp_insumo_pecuaria") @default(autoincrement())
  id_cp_empreendimento_pecuaria BigInt
  id_cp_item_custo_insumo       BigInt
  quantidade                    Float?
  preco_unitario                Float?
  ativo                         Boolean?
  cp_empreendimento_pecuaria    cp_empreendimento_pecuaria @relation(fields: [id_cp_empreendimento_pecuaria], references: [id_cp_empreendimento_pecuaria], onDelete: NoAction, onUpdate: NoAction, map: "fk_cp_emprendimento_insumo_pec")
  cp_item_custo_insumo          cp_item_custo_insumo       @relation(fields: [id_cp_item_custo_insumo], references: [id_cp_item_custo_insumo], onDelete: NoAction, onUpdate: NoAction, map: "fk_cp_item_insumo_pec")
}

model cp_irrigacao {
  id_cp_irrigacao                BigInt                           @id(map: "pk_cp_irrigacao") @default(autoincrement())
  des_irrigacao                  String                           @db.VarChar(100)
  ativo                          Boolean?
  cp_empreendimento_agricola     cp_empreendimento_agricola[]
  cr_custeio_agricola_proponente cr_custeio_agricola_proponente[]
}

model cp_item_custo_insumo {
  id_cp_item_custo_insumo        BigInt                           @id(map: "pk_cp_item_custo_insumo") @default(autoincrement())
  des_item_custo_insumo          String                           @db.VarChar(100)
  id_cp_grupo_insumo             BigInt
  des_unidade                    String?                          @db.VarChar(20)
  ativo                          Boolean?
  cp_insumo_agricola             cp_insumo_agricola[]
  cp_insumo_custo_individual_agr cp_insumo_custo_individual_agr[]
  cp_insumo_custo_individual_pec cp_insumo_custo_individual_pec[]
  cp_insumo_pecuaria             cp_insumo_pecuaria[]
  cp_grupo_insumo                cp_grupo_insumo                  @relation(fields: [id_cp_grupo_insumo], references: [id_cp_grupo_insumo], onDelete: NoAction, onUpdate: NoAction, map: "fk_cp_grupo_insumo")
  cr_insumo_agricola             cr_insumo_agricola[]
  cr_insumo_pecuaria             cr_insumo_pecuaria[]
}

model cp_item_custo_servico {
  id_cp_item_custo_servico        BigInt                            @id(map: "pk_cp_item_custo_servico") @default(autoincrement())
  des_item_custo_servico          String                            @db.VarChar(100)
  des_unidade                     String?                           @db.VarChar(20)
  ativo                           Boolean?
  cp_servico_agricola             cp_servico_agricola[]
  cp_servico_custo_individual_agr cp_servico_custo_individual_agr[]
  cp_servico_custo_individual_pec cp_servico_custo_individual_pec[]
  cp_servico_pecuaria             cp_servico_pecuaria[]
  cr_servico_agricola             cr_servico_agricola[]
  cr_servico_pecuaria             cr_servico_pecuaria[]
}

model cp_nivel_tecnologico {
  id_cp_nivel_tecnologico        BigInt                           @id(map: "pk_cp_nivel_tecnologico") @default(autoincrement())
  des_nivel_tecnologico          String?                          @db.VarChar(50)
  ativo                          Boolean?
  cp_custo_individual_pecuaria   cp_custo_individual_pecuaria[]
  cp_empreendimento_pecuaria     cp_empreendimento_pecuaria[]
  cr_custeio_pecuaria_proponente cr_custeio_pecuaria_proponente[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model cp_produto_pecuaria {
  id_cp_produto_pecuaria       BigInt                         @id(map: "pk_cp_produto_pecuaria") @default(autoincrement())
  des_produto_pecuaria         String                         @db.VarChar(50)
  ativo                        Boolean?
  id_cp_atividade_pecuaria     BigInt?
  cp_custo_individual_pecuaria cp_custo_individual_pecuaria[]
  cp_empreendimento_pecuaria   cp_empreendimento_pecuaria[]
  cp_fase_produto              cp_fase_produto[]
  cp_atividade_pecuaria        cp_atividade_pecuaria?         @relation(fields: [id_cp_atividade_pecuaria], references: [id_cp_atividade_pecuaria], onDelete: NoAction, onUpdate: NoAction, map: "fk3auhhvd8x273vqrn3yatk9gwg")
  cr_relacionamento_pecuaria   cr_relacionamento_pecuaria[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model cp_receitas_agr_custo_ind {
  id_cp_receitas_agr_custo_ind    BigInt                       @id(map: "pk_cp_receitas_agr_custo_ind") @default(autoincrement())
  id_cp_custo_individual_agricola BigInt
  discriminacao_receita           String                       @db.VarChar(150)
  quantidade                      Float?
  preco_unitario                  Float?
  id_und_medida                   BigInt
  receita_produto_principal       Int                          @default(2) @db.SmallInt
  sn_ativo                        Int                          @default(1) @db.SmallInt
  und_medida                      und_medida                   @relation(fields: [id_und_medida], references: [id_und_medida], onDelete: NoAction, onUpdate: NoAction, map: "fk755fvokm3asu1iiegi95tnd0q")
  cp_custo_individual_agricola    cp_custo_individual_agricola @relation(fields: [id_cp_custo_individual_agricola], references: [id_cp_custo_individual_agricola], onDelete: NoAction, onUpdate: NoAction, map: "fk_cp_receita_cust_ind")
}

model cp_receitas_agricola {
  id_cp_receitas_agricola       BigInt                     @id(map: "pk_cp_receitas") @default(autoincrement())
  id_cp_empreendimento_agricola BigInt
  discriminacao_receita         String                     @db.VarChar(150)
  quantidade                    Float?
  preco_unitario                Float?
  id_und_medida                 BigInt?
  ativo                         Boolean?
  cp_empreendimento_agricola    cp_empreendimento_agricola @relation(fields: [id_cp_empreendimento_agricola], references: [id_cp_empreendimento_agricola], onDelete: NoAction, onUpdate: NoAction, map: "fk1mos4axf6jp6vkus5pxowpw8q")
  und_medida                    und_medida?                @relation(fields: [id_und_medida], references: [id_und_medida], onDelete: NoAction, onUpdate: NoAction, map: "fk_cp_emprendimento_agri_und_media")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model cp_receitas_pec_custo_ind {
  id_cp_receitas_pec_custo_ind BigInt                       @id(map: "pk_cp_receitas_pec_custo_ind") @default(autoincrement())
  id_cp_custo_individual       BigInt
  discriminacao_receita        String                       @db.VarChar(150)
  quantidade                   Float?
  preco_unitario               Float?
  ativo                        Boolean?
  id_und_medida                BigInt
  receita_produto_principal    Int?                         @default(2) @db.SmallInt
  und_medida                   und_medida                   @relation(fields: [id_und_medida], references: [id_und_medida], onDelete: NoAction, onUpdate: NoAction, map: "fk6oqvw15bmc6i1qo4j6u80im9y")
  cp_custo_individual_pecuaria cp_custo_individual_pecuaria @relation(fields: [id_cp_custo_individual], references: [id_cp_custo_individual], onDelete: NoAction, onUpdate: NoAction, map: "fk_cp_receita_cust_ind")
}

model cp_receitas_pecuaria {
  id_cp_receitas_pecuaria       BigInt                     @id(map: "pk_cp_receitas_pecuaria") @default(autoincrement())
  id_cp_empreendimento_pecuaria BigInt
  discriminacao_receita         String                     @db.VarChar(150)
  quantidade                    Float?
  preco_unitario                Float?
  id_und_medida                 BigInt?
  ativo                         Boolean?
  und_medida                    und_medida?                @relation(fields: [id_und_medida], references: [id_und_medida], onDelete: NoAction, onUpdate: NoAction, map: "fk_cp_emprendimento_pec_und_media")
  cp_empreendimento_pecuaria    cp_empreendimento_pecuaria @relation(fields: [id_cp_empreendimento_pecuaria], references: [id_cp_empreendimento_pecuaria], onDelete: NoAction, onUpdate: NoAction, map: "fk_cp_emprendimento_receita")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model cp_safra {
  id_cp_safra                    BigInt                           @id(map: "pk_cp_safra") @default(autoincrement())
  descricao                      String                           @db.VarChar(255)
  data_inicio                    DateTime                         @db.Date
  data_fim                       DateTime                         @db.Date
  sn_ativo                       Int                              @default(1) @db.SmallInt
  dt_update_record               DateTime?                        @db.Timestamp(6)
  cp_custo_individual_agricola   cp_custo_individual_agricola[]
  cr_custeio_agricola_proponente cr_custeio_agricola_proponente[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model cp_segmento {
  id_cp_segmento               BigInt                         @id(map: "pk_cp_segmento") @default(autoincrement())
  des_segmento                 String                         @db.VarChar(50)
  ativo                        Boolean?
  cp_atividade_segmento        cp_atividade_segmento[]
  cp_custo_individual_pecuaria cp_custo_individual_pecuaria[]
  cp_empreendimento_pecuaria   cp_empreendimento_pecuaria[]
  cp_segmento_fase             cp_segmento_fase[]
  cr_relacionamento_pecuaria   cr_relacionamento_pecuaria[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model cp_segmento_fase {
  id_cp_segmento_fase BigInt      @default(autoincrement())
  id_cp_segmento      BigInt
  id_cp_fase          BigInt
  cp_fase             cp_fase     @relation(fields: [id_cp_fase], references: [id_cp_fase], onDelete: NoAction, onUpdate: NoAction, map: "fk8x6tsyg03tv7u4ijoe8j4k2mh")
  cp_segmento         cp_segmento @relation(fields: [id_cp_segmento], references: [id_cp_segmento], onDelete: Cascade, onUpdate: NoAction, map: "fk_segfase_seg")

  @@id([id_cp_segmento, id_cp_fase], map: "pk_segmento_fase")
}

model cp_servico_agricola {
  id_cp_servico_agricola        BigInt                     @id(map: "pk_cp_servico_agricola") @default(autoincrement())
  id_cp_empreendimento_agricola BigInt
  id_cp_item_custo_servico      BigInt
  id_cp_etapas_producao         BigInt?
  quantidade_ha                 Float?
  preco_unitario                Float?
  ativo                         Boolean?
  cp_etapas_producao            cp_etapas_producao?        @relation(fields: [id_cp_etapas_producao], references: [id_cp_etapas_producao], onDelete: NoAction, onUpdate: NoAction, map: "fk5isui3uwxbd8s8vwwsep641em")
  cp_item_custo_servico         cp_item_custo_servico      @relation(fields: [id_cp_item_custo_servico], references: [id_cp_item_custo_servico], onDelete: NoAction, onUpdate: NoAction, map: "fk_cp_item_servico")
  cp_empreendimento_agricola    cp_empreendimento_agricola @relation(fields: [id_cp_empreendimento_agricola], references: [id_cp_empreendimento_agricola], onDelete: NoAction, onUpdate: NoAction, map: "fkhbi9fb4vmaw4641pr3p014q42")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model cp_servico_custo_individual_agr {
  id_cp_servico_custo_individual_agr BigInt                       @id(map: "pk_cp_servico_custo_ind_agr") @default(autoincrement())
  id_cp_custo_individual_agricola    BigInt
  id_cp_item_custo_servico           BigInt
  quantidade                         Float?
  preco_unitario                     Float?
  sn_ativo                           Int                          @default(1) @db.SmallInt
  cp_custo_individual_agricola       cp_custo_individual_agricola @relation(fields: [id_cp_custo_individual_agricola], references: [id_cp_custo_individual_agricola], onDelete: NoAction, onUpdate: NoAction, map: "fk8kf3w57wj67vpejstfrjm2ps3")
  cp_item_custo_servico              cp_item_custo_servico        @relation(fields: [id_cp_item_custo_servico], references: [id_cp_item_custo_servico], onDelete: NoAction, onUpdate: NoAction, map: "fk_cp_item_servico_agr")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model cp_servico_custo_individual_pec {
  id_cp_servico_custo_individual BigInt                       @id(map: "pk_cp_servico_custo_ind_pec") @default(autoincrement())
  id_cp_custo_individual         BigInt
  id_cp_item_custo_servico       BigInt
  quantidade                     Float?
  preco_unitario                 Float?
  ativo                          Boolean?
  cp_item_custo_servico          cp_item_custo_servico        @relation(fields: [id_cp_item_custo_servico], references: [id_cp_item_custo_servico], onDelete: NoAction, onUpdate: NoAction, map: "fk968i2o0jf3slvfmld0pj9ai0t")
  cp_custo_individual_pecuaria   cp_custo_individual_pecuaria @relation(fields: [id_cp_custo_individual], references: [id_cp_custo_individual], onDelete: NoAction, onUpdate: NoAction, map: "fk_cp_servico_cust_ind_pec")
}

model cp_servico_pecuaria {
  id_cp_servico_pecuaria        BigInt                     @id(map: "pk_cp_servico_pecuaria") @default(autoincrement())
  id_cp_empreendimento_pecuaria BigInt
  id_cp_item_custo_servico      BigInt
  quantidade                    Float?
  preco_unitario                Float?
  ativo                         Boolean?
  cp_empreendimento_pecuaria    cp_empreendimento_pecuaria @relation(fields: [id_cp_empreendimento_pecuaria], references: [id_cp_empreendimento_pecuaria], onDelete: NoAction, onUpdate: NoAction, map: "fk1mmkokaur8gimrh82hpv2p3w7")
  cp_item_custo_servico         cp_item_custo_servico      @relation(fields: [id_cp_item_custo_servico], references: [id_cp_item_custo_servico], onDelete: NoAction, onUpdate: NoAction, map: "fk3yj4jfvcm06gg6no1o0b7sw71")
}

model cp_sistema_exploracao {
  id_cp_sistema_exploracao       BigInt                           @id(map: "pk_cp_sistema_exploracao") @default(autoincrement())
  des_sistema_exploracao         String?                          @db.VarChar(50)
  ativo                          Boolean?
  cp_custo_individual_pecuaria   cp_custo_individual_pecuaria[]
  cp_empreendimento_pecuaria     cp_empreendimento_pecuaria[]
  cr_custeio_pecuaria_proponente cr_custeio_pecuaria_proponente[]
}

model cp_tipo_agricultura {
  id_cp_tipo_agricultura         BigInt                           @id(map: "pk_cp_tipo_agricultura") @default(autoincrement())
  des_tipo_agricultura           String                           @db.VarChar(100)
  ativo                          Boolean?
  cp_empreendimento_agricola     cp_empreendimento_agricola[]
  cr_custeio_agricola_proponente cr_custeio_agricola_proponente[]
}

model cp_tipo_cultivo {
  id_cp_tipo_cultivo             BigInt                           @id(map: "pk_cp_tipo_cultivo") @default(autoincrement())
  des_tipo_cultivo               String                           @db.VarChar(100)
  ativo                          Boolean?
  cp_empreendimento_agricola     cp_empreendimento_agricola[]
  cr_custeio_agricola_proponente cr_custeio_agricola_proponente[]
}

model cp_unidade_comercializacao {
  id_cp_unidade_comercializacao BigInt                       @id(map: "pk_cp_unidade_comercializacao") @default(autoincrement())
  des_unidade_comercializacao   String?                      @db.VarChar(50)
  ativo                         Boolean                      @default(true)
  cr_relacionamento_pecuaria    cr_relacionamento_pecuaria[]
}

model cp_unidade_custo {
  id_cp_unidade_custo        BigInt                       @id(map: "pk_cp_unidade_custo") @default(autoincrement())
  des_unidade_custo          String                       @db.VarChar(100)
  ativo                      Boolean?
  cp_empreendimento_agricola cp_empreendimento_agricola[]
  cp_empreendimento_pecuaria cp_empreendimento_pecuaria[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model cp_unidade_custo_agricola {
  id_cp_unidade_custo BigInt   @id(map: "pk_cp_unidade_custo_agricola") @default(autoincrement())
  des_unidade_custo   String?  @db.VarChar(50)
  ativo               Boolean?
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model cp_unidade_custo_pecuaria {
  id_cp_unidade_custo BigInt   @id(map: "pk_cp_unidade_custo_pecuaria") @default(autoincrement())
  des_unidade_custo   String?  @db.VarChar(50)
  ativo               Boolean?
}

model cp_unidade_producao {
  id_cp_unidade_producao     BigInt                       @id(map: "pk_cp_unidade_producao") @default(autoincrement())
  des_unidade_producao       String?                      @db.VarChar(50)
  ativo                      Boolean                      @default(true)
  cr_relacionamento_pecuaria cr_relacionamento_pecuaria[]
}

model cp_unidade_produtividade {
  id_cp_unidade_produtividade BigInt                       @id(map: "pk_cp_unidade_produtividade") @default(autoincrement())
  des_unidade_produtividade   String?                      @db.VarChar(50)
  ativo                       Boolean                      @default(true)
  cr_relacionamento_pecuaria  cr_relacionamento_pecuaria[]
}

model cr_adequacao_projeto {
  id_cr_adequacao_projeto BigInt          @id(map: "pk_cr_adequacao_projeto") @default(autoincrement())
  id_cr_investimento      BigInt
  adequacao               String?         @db.VarChar(400)
  atividade               String?         @db.VarChar(100)
  objetivo                String?         @db.VarChar(400)
  justificativa           String?         @db.VarChar(400)
  resultado               String?         @db.VarChar(400)
  ativo                   Boolean         @default(true)
  dt_update_record        DateTime        @db.Timestamp(6)
  cr_investimento         cr_investimento @relation(fields: [id_cr_investimento], references: [id_cr_investimento], onDelete: NoAction, onUpdate: NoAction, map: "fk_id_cr_investimento")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model cr_agente_financeiro {
  id_cr_agente_financeiro        BigInt                           @id @default(autoincrement())
  codigo_instituicao             Int
  nome_instituicao               String                           @db.VarChar(100)
  ativo                          Boolean                          @default(true)
  dt_update_record               DateTime                         @default(now()) @db.Timestamp(6)
  cr_custeio_agricola_proponente cr_custeio_agricola_proponente[]
  cr_custeio_pecuaria_proponente cr_custeio_pecuaria_proponente[]
  cr_investimento_proponente     cr_investimento_proponente[]
}

model cr_ano_agricola {
  id_cr_ano_agricola             BigInt                           @id(map: "pk_cr_ano_agricola") @default(autoincrement())
  des_ano_agricola               String?                          @db.VarChar(10)
  ativo                          Boolean                          @default(true)
  cr_custeio_agricola_proponente cr_custeio_agricola_proponente[]
}

model cr_assistencia_tecnica {
  id_cr_assistencia_tecnica BigInt          @id(map: "pk_cr_assistencia_tecnica") @default(autoincrement())
  id_cr_investimento        BigInt
  tipo_assistencia          String          @db.VarChar(250)
  periodo                   String?         @db.VarChar(100)
  numero_visita             Int?
  data_visita               DateTime?       @db.Timestamp(6)
  ativo                     Boolean         @default(true)
  dt_update_record          DateTime        @default(now()) @db.Timestamp(6)
  cr_investimento           cr_investimento @relation(fields: [id_cr_investimento], references: [id_cr_investimento], onDelete: NoAction, onUpdate: NoAction, map: "fk_cr_assistencia_tecnica")
}

model cr_ater {
  id_cr_ater           BigInt                 @id(map: "pk_cr_ater") @default(autoincrement())
  descricao            String?                @db.VarChar(250)
  ativo                Boolean                @default(true)
  dt_update_record     DateTime               @default(now()) @db.Timestamp(6)
  cr_ater_agricola     cr_ater_agricola[]
  cr_ater_investimento cr_ater_investimento[]
  cr_ater_pecuaria     cr_ater_pecuaria[]
}

model cr_ater_agricola {
  id_cr_ater_agricola    BigInt              @id(map: "pk_cr_ater_agricola") @default(autoincrement())
  id_cr_ater             BigInt
  id_cr_custeio_agricola BigInt
  percentual_ater        Float?
  percentual_financiar   Float?
  ativo                  Boolean             @default(true)
  dt_update_record       DateTime            @default(now()) @db.Timestamp(6)
  epoca                  String?             @db.VarChar(25)
  valor_ater             Float?
  valor_ater_financiar   Float?
  cr_ater                cr_ater             @relation(fields: [id_cr_ater], references: [id_cr_ater], onDelete: NoAction, onUpdate: NoAction, map: "fk_cr_ater")
  cr_custeio_agricola    cr_custeio_agricola @relation(fields: [id_cr_custeio_agricola], references: [id_cr_custeio_agricola], onDelete: NoAction, onUpdate: NoAction, map: "fk_cr_ater_custeio")
}

model cr_ater_investimento {
  id_cr_ater_investimento BigInt          @id(map: "pk_cr_ater_investimento") @default(autoincrement())
  id_cr_ater              BigInt
  id_cr_investimento      BigInt
  percentual_ater         Float?
  valor_orcamento         Float?
  valor_financiar         Float?
  valor_recurso_proprio   Float?
  ativo                   Boolean         @default(true)
  dt_update_record        DateTime        @default(now()) @db.Timestamp(6)
  condicao_proposta       String?         @db.VarChar(100)
  epoca                   String?         @db.VarChar(100)
  cr_ater                 cr_ater         @relation(fields: [id_cr_ater], references: [id_cr_ater], onDelete: NoAction, onUpdate: NoAction, map: "fk_cr_ater_inv")
  cr_investimento         cr_investimento @relation(fields: [id_cr_investimento], references: [id_cr_investimento], onDelete: NoAction, onUpdate: NoAction, map: "fk_cr_inventimento")
}

model cr_ater_pecuaria {
  id_cr_ater_pecuaria    BigInt              @id(map: "pk_cr_ater_pecuaria") @default(autoincrement())
  id_cr_ater             BigInt
  id_cr_custeio_pecuaria BigInt
  percentual_ater        Float?
  percentual_financiar   Float?
  ativo                  Boolean             @default(true)
  dt_update_record       DateTime            @default(now()) @db.Timestamp(6)
  epoca                  String?             @db.VarChar(25)
  valor_ater             Float?
  valor_ater_financiar   Float?
  cr_custeio_pecuaria    cr_custeio_pecuaria @relation(fields: [id_cr_custeio_pecuaria], references: [id_cr_custeio_pecuaria], onDelete: NoAction, onUpdate: NoAction, map: "fk3ycutbtci0xiploynfn6y19v9")
  cr_ater                cr_ater             @relation(fields: [id_cr_ater], references: [id_cr_ater], onDelete: NoAction, onUpdate: NoAction, map: "fk_cr_ater_pec")
}

model cr_atividade {
  id_cr_atividade      BigInt            @id(map: "pk_cr_atividade") @default(autoincrement())
  id_cr_investimento   BigInt
  id_cr_tipo_atividade BigInt
  des_atividade        String            @db.VarChar(100)
  ano_referencia       Int?
  area                 Float?
  id_und_medida        BigInt?
  produtividade        Float?
  preco_unitario       Float?
  custo_unitario       Float?
  ativo                Boolean           @default(true)
  dt_update_record     DateTime?         @db.Timestamp(6)
  cr_investimento      cr_investimento   @relation(fields: [id_cr_investimento], references: [id_cr_investimento], onDelete: NoAction, onUpdate: NoAction, map: "fk_cr_investimento")
  cr_tipo_atividade    cr_tipo_atividade @relation(fields: [id_cr_tipo_atividade], references: [id_cr_tipo_atividade], onDelete: NoAction, onUpdate: NoAction, map: "fk_cr_tipo_atividade")
  und_medida           und_medida?       @relation(fields: [id_und_medida], references: [id_und_medida], onDelete: NoAction, onUpdate: NoAction, map: "fk_und_medida")
}

model cr_categoria_semovente_bovino {
  id_cr_categoria        BigInt                   @id(map: "pk_cr_categoria")
  descricao              String?                  @db.VarChar(100)
  cr_rebanho_beneficiado cr_rebanho_beneficiado[]
  cr_semovente_bovino    cr_semovente_bovino[]
}

model cr_condicoes_investimento {
  id_cr_condicoes_investimento BigInt                 @id(map: "pk_cr_condicoes_investimento") @default(autoincrement())
  id_cr_investimento           BigInt
  id_cr_linha_credito          BigInt
  id_cr_sistema_amortizacao    BigInt
  condicao_proposta            String?                @db.VarChar(1)
  recurso_bnds                 Boolean?
  outras_linhas_credito        String?                @db.VarChar(250)
  valor_orcado                 Float?
  valor_financiado             Float?
  valor_recursos_proprios      Float?
  prazo_qtde                   BigInt?
  prazo_periodicidade          String?                @db.VarChar(20)
  carencia_qtde                BigInt?
  carencial_periodicidade      String?                @db.VarChar(20)
  taxa_juros                   Float?
  taxa_juros_periodicidade     String?                @db.VarChar(20)
  periodicidade_pagto          String?                @db.VarChar(20)
  pagto_juros_carencia         Boolean                @default(false)
  data_base_calc_parcelas      DateTime?              @db.Timestamp(6)
  fonte_recursos_proprios      String?                @db.VarChar(400)
  ativo                        Boolean                @default(true)
  dt_update_record             DateTime               @default(now()) @db.Timestamp(6)
  cr_investimento              cr_investimento        @relation(fields: [id_cr_investimento], references: [id_cr_investimento], onDelete: NoAction, onUpdate: NoAction, map: "fk_cr_cond_investimento")
  cr_linha_credito             cr_linha_credito       @relation(fields: [id_cr_linha_credito], references: [id_cr_linha_credito], onDelete: NoAction, onUpdate: NoAction, map: "fk_cr_cond_linha_credito")
  cr_sistema_amortizacao       cr_sistema_amortizacao @relation(fields: [id_cr_sistema_amortizacao], references: [id_cr_sistema_amortizacao], onDelete: NoAction, onUpdate: NoAction, map: "fk_cr_cond_sist_amort")
}

model cr_cronograma_inv {
  id_cr_cronograma_inv BigInt          @id(map: "pk_cr_cronograma_inv") @default(autoincrement())
  id_cr_investimento   BigInt
  mes                  BigInt
  ano                  BigInt
  valor_amortizacao    Float
  valor_juros          Float
  valor_parcela        Float
  valor_saldo_devedor  Float
  ativo                Boolean         @default(true)
  dt_update_record     DateTime        @default(now()) @db.Timestamp(6)
  condicao_proposta    String?         @db.VarChar(1)
  numero_parcela       Int?
  cr_investimento      cr_investimento @relation(fields: [id_cr_investimento], references: [id_cr_investimento], onDelete: NoAction, onUpdate: NoAction, map: "fk_cr_crono_investimento")
}

model cr_custeio_agricola {
  id_cr_custeio_agricola         BigInt                           @id(map: "pk_cr_custeio_agricola") @default(autoincrement())
  id_usuario                     BigInt
  data_projeto                   DateTime?                        @db.Timestamp(6)
  numero_dae                     String?                          @db.VarChar(40)
  valor_dae                      Float?
  ativo                          Boolean                          @default(true)
  dt_update_record               DateTime                         @default(now()) @db.Timestamp(6)
  ds_recomendacoes_tecnicas      String?                          @db.VarChar(4000)
  id_municipio                   BigInt?
  nome                           String?                          @db.VarChar(255)
  matricula                      String?                          @db.VarChar(100)
  formacao_tecnica               String?                          @db.VarChar(255)
  email                          String?                          @db.VarChar(255)
  telefone                       String?                          @db.VarChar(100)
  orgao_registro_tecnico         String                           @default("CREA-MG") @db.VarChar(7)
  numero_registro_tecnico        String?                          @db.VarChar(10)
  cr_ater_agricola               cr_ater_agricola[]
  usuario                        usuario                          @relation(fields: [id_usuario], references: [id_usuario], onDelete: NoAction, onUpdate: NoAction, map: "fk_cr_usuario")
  sep_municipio                  sep_municipio?                   @relation(fields: [id_municipio], references: [id_municipio], onDelete: NoAction, onUpdate: NoAction, map: "fk_sep_municipio")
  cr_custeio_agricola_proponente cr_custeio_agricola_proponente[]
  cr_custeio_agricola_totais     cr_custeio_agricola_totais[]
  cr_despesas_agricola           cr_despesas_agricola[]
  cr_imoveis_agricola            cr_imoveis_agricola[]
  cr_insumo_agricola             cr_insumo_agricola[]
  cr_receitas_agricola           cr_receitas_agricola[]
  cr_recomendacoes_agricola      cr_recomendacoes_agricola?
  cr_servico_agricola            cr_servico_agricola[]
}

model cr_custeio_agricola_proponente {
  id_cr_custeio_agricola_proponente BigInt               @id(map: "pk_cr_custeio_agricola_proponente") @default(autoincrement())
  id_cr_custeio_agricola            BigInt
  id_pessoa_demeter                 BigInt
  id_cr_agente_financeiro           BigInt
  id_cr_linha_credito               BigInt
  id_produto                        BigInt
  id_cp_tipo_agricultura            BigInt
  id_cp_tipo_cultivo                BigInt
  id_cp_irrigacao                   BigInt
  id_cp_safra                       BigInt
  id_cr_ano_agricola                BigInt
  area_financiada_ha                Float?
  data_plantio                      DateTime?            @db.Timestamp(6)
  data_fim_colheita                 DateTime?            @db.Timestamp(6)
  data_reembolso                    DateTime?            @db.Timestamp(6)
  agencia                           String?              @db.VarChar(250)
  taxa_juros_percentual             Float?
  taxa_juros_periodicidade          String?              @db.VarChar(11)
  ativo                             Boolean              @default(true)
  dt_update_record                  DateTime             @default(now()) @db.Timestamp(6)
  id_und_medida                     BigInt?
  produtividade_ha                  Float?
  cr_agente_financeiro              cr_agente_financeiro @relation(fields: [id_cr_agente_financeiro], references: [id_cr_agente_financeiro], onDelete: NoAction, onUpdate: NoAction, map: "fk9u4kp9mqh10fqyu994lxto899")
  cr_ano_agricola                   cr_ano_agricola      @relation(fields: [id_cr_ano_agricola], references: [id_cr_ano_agricola], onDelete: NoAction, onUpdate: NoAction, map: "fk_cr_ano_agricola")
  und_medida                        und_medida?          @relation(fields: [id_und_medida], references: [id_und_medida], onDelete: NoAction, onUpdate: NoAction, map: "fk_cr_custeio_unidade")
  cr_custeio_agricola               cr_custeio_agricola  @relation(fields: [id_cr_custeio_agricola], references: [id_cr_custeio_agricola], onDelete: NoAction, onUpdate: NoAction, map: "fk_cr_prop_custeio")
  cp_irrigacao                      cp_irrigacao         @relation(fields: [id_cp_irrigacao], references: [id_cp_irrigacao], onDelete: NoAction, onUpdate: NoAction, map: "fk_cr_prop_irrigacao")
  cr_linha_credito                  cr_linha_credito     @relation(fields: [id_cr_linha_credito], references: [id_cr_linha_credito], onDelete: NoAction, onUpdate: NoAction, map: "fk_cr_prop_linha_credito")
  ger_pessoa                        ger_pessoa           @relation(fields: [id_pessoa_demeter], references: [id_pessoa_demeter], onDelete: NoAction, onUpdate: NoAction, map: "fk_cr_prop_pessoa")
  bp_produto                        bp_produto           @relation(fields: [id_produto], references: [id_produto], onDelete: NoAction, onUpdate: NoAction, map: "fk_cr_prop_produto")
  cp_safra                          cp_safra             @relation(fields: [id_cp_safra], references: [id_cp_safra], onDelete: NoAction, onUpdate: NoAction, map: "fk_cr_prop_safra")
  cp_tipo_agricultura               cp_tipo_agricultura  @relation(fields: [id_cp_tipo_agricultura], references: [id_cp_tipo_agricultura], onDelete: NoAction, onUpdate: NoAction, map: "fk_cr_prop_tipo_agricultura")
  cp_tipo_cultivo                   cp_tipo_cultivo      @relation(fields: [id_cp_tipo_cultivo], references: [id_cp_tipo_cultivo], onDelete: NoAction, onUpdate: NoAction, map: "fk_cr_prop_tipo_cultivo")
}

model cr_custeio_agricola_totais {
  id_cr_custeio_agricola_totais                           BigInt              @id(map: "id_cr_custeio_agricola_totais") @default(autoincrement())
  id_cr_custeio_agricola                                  BigInt
  sub_total_preparo_solo_insumos_por_valor_ha             Float?
  sub_total_preparo_solo_insumos_por_valor_total          Float?
  sub_total_preparo_solo_insumos_por_valor_financiar      Float?
  sub_total_preparo_solo_servicos_por_valor_ha            Float?
  sub_total_preparo_solo_servicos_por_valor_total         Float?
  sub_total_preparo_solo_servicos_por_valor_financiar     Float?
  sub_total_preparo_solo_por_valor_ha                     Float?
  sub_total_preparo_solo_por_valor_total                  Float?
  sub_total_preparo_solo_por_valor_financiar              Float?
  sub_total_tratos_culturais_insumos_por_valor_ha         Float?
  sub_total_tratos_culturais_insumos_por_valor_total      Float?
  sub_total_tratos_culturais_insumos_por_valor_financiar  Float?
  sub_total_tratos_culturais_servicos_por_valor_ha        Float?
  sub_total_tratos_culturais_servicos_por_valor_total     Float?
  sub_total_tratos_culturais_servicos_por_valor_financiar Float?
  sub_total_tratos_culturais_por_valor_ha                 Float?
  sub_total_tratos_culturais_por_valor_total              Float?
  sub_total_tratos_culturais_por_valor_financiar          Float?
  sub_total_colheita_insumos_por_valor_ha                 Float?
  sub_total_colheita_insumos_por_valor_total              Float?
  sub_total_colheita_insumos_por_valor_financiar          Float?
  sub_total_colheita_servicos_por_valor_ha                Float?
  sub_total_colheita_servicos_por_valor_total             Float?
  sub_total_colheita_servicos_por_valor_financiar         Float?
  sub_total_colheita_por_valor_ha                         Float?
  sub_total_colheita_por_valor_total                      Float?
  sub_total_colheita_por_valor_financiar                  Float?
  total_orcamento_por_valor_ha                            Float?
  total_orcamento_por_valor_total                         Float?
  total_orcamento_por_valor_financiar                     Float?
  total_geral_por_valor_ha                                Float?
  total_geral_por_valor_total                             Float?
  total_geral_por_valor_financiar                         Float?
  total_demostrativos_despesas                            Float?
  total_demostrativos_saldo                               Float?
  total_demostrativos_rentabilidade                       Float?
  ativo                                                   Boolean             @default(true)
  dt_update_record                                        DateTime            @default(now()) @db.Timestamp(6)
  cr_custeio_agricola                                     cr_custeio_agricola @relation(fields: [id_cr_custeio_agricola], references: [id_cr_custeio_agricola], onDelete: NoAction, onUpdate: NoAction, map: "fk_cr_totais_custeio_agr")
}

model cr_custeio_assoc_invest {
  id_cr_custeio_assoc_invest   BigInt          @id(map: "pk_cr_custeio_assoc_invest") @default(autoincrement())
  id_cr_investimento           BigInt
  condicao_proposta            String?         @db.VarChar(1)
  custeio_associado_percentual Float?
  valor_orcamento              Float?
  valor_financiado             Float?
  valor_recursos_proprios      Float?
  epoca                        String?         @db.VarChar(25)
  ativo                        Boolean         @default(true)
  dt_update_record             DateTime        @default(now()) @db.Timestamp(6)
  cr_investimento              cr_investimento @relation(fields: [id_cr_investimento], references: [id_cr_investimento], onDelete: NoAction, onUpdate: NoAction, map: "fk_cr_inv_custeio")
}

model cr_custeio_pecuaria {
  id_cr_custeio_pecuaria         BigInt                           @id(map: "pk_cr_custeio_pecuaria") @default(autoincrement())
  id_usuario                     BigInt
  data_projeto                   DateTime?                        @db.Timestamp(6)
  numero_dae                     String?                          @db.VarChar(40)
  valor_dae                      Float?
  ativo                          Boolean                          @default(true)
  dt_update_record               DateTime                         @default(now()) @db.Timestamp(6)
  ds_recomendacoes_tecnicas      String?                          @db.VarChar(4000)
  id_municipio                   BigInt?
  nome                           String?                          @db.VarChar(255)
  matricula                      String?                          @db.VarChar(100)
  formacao_tecnica               String?                          @db.VarChar(255)
  email                          String?                          @db.VarChar(255)
  telefone                       String?                          @db.VarChar(100)
  orgao_registro_tecnico         String                           @default("CREA-MG") @db.VarChar(7)
  numero_registro_tecnico        String?                          @db.VarChar(10)
  cr_ater_pecuaria               cr_ater_pecuaria[]
  usuario                        usuario                          @relation(fields: [id_usuario], references: [id_usuario], onDelete: NoAction, onUpdate: NoAction, map: "fk4avmn5el7h65b09rhgoq7q9mo")
  sep_municipio                  sep_municipio?                   @relation(fields: [id_municipio], references: [id_municipio], onDelete: NoAction, onUpdate: NoAction, map: "fk_sep_municipio")
  cr_custeio_pecuaria_proponente cr_custeio_pecuaria_proponente[]
  cr_custeio_pecuaria_totais     cr_custeio_pecuaria_totais[]
  cr_despesas_pecuaria           cr_despesas_pecuaria[]
  cr_imoveis_pecuaria            cr_imoveis_pecuaria[]
  cr_insumo_pecuaria             cr_insumo_pecuaria[]
  cr_outras_despesas_pecuaria    cr_outras_despesas_pecuaria[]
  cr_rebanho_beneficiado         cr_rebanho_beneficiado[]
  cr_receitas_pecuaria           cr_receitas_pecuaria[]
  cr_recomendacoes_pecuaria      cr_recomendacoes_pecuaria[]
  cr_servico_pecuaria            cr_servico_pecuaria[]
}

model cr_custeio_pecuaria_proponente {
  id_cr_custeio_pecuaria_proponente   BigInt                      @id(map: "pk_cr_custeio_pecuaria_proponente") @default(autoincrement())
  id_cr_custeio_pecuaria              BigInt
  id_pessoa_demeter                   BigInt
  id_cr_agente_financeiro             BigInt
  id_cr_linha_credito                 BigInt
  id_cr_relacionamento_pecuaria       BigInt?
  id_cp_sistema_exploracao            BigInt
  id_cp_nivel_tecnologico             BigInt?
  quantidade_unidade_producao         Float?
  produtividade_unidade_produtividade Float?
  data_inicio                         DateTime?                   @db.Timestamp(6)
  data_termino                        DateTime?                   @db.Timestamp(6)
  data_reembolso                      DateTime?                   @db.Timestamp(6)
  agencia                             String?                     @db.VarChar(250)
  taxa_juros_percentual               Float?
  taxa_juros_periodicidade            String?                     @db.VarChar(11)
  ativo                               Boolean                     @default(true)
  dt_update_record                    DateTime                    @default(now()) @db.Timestamp(6)
  id_produto                          BigInt?
  bp_produto                          bp_produto?                 @relation(fields: [id_produto], references: [id_produto], onDelete: NoAction, onUpdate: NoAction, map: "cr_custeio_pecuaria_proponente_bp_produto_fk")
  cr_linha_credito                    cr_linha_credito            @relation(fields: [id_cr_linha_credito], references: [id_cr_linha_credito], onDelete: NoAction, onUpdate: NoAction, map: "fk2i68r99u7l5px43tsq2fob0i7")
  cr_custeio_pecuaria                 cr_custeio_pecuaria         @relation(fields: [id_cr_custeio_pecuaria], references: [id_cr_custeio_pecuaria], onDelete: NoAction, onUpdate: NoAction, map: "fk2s8iyxylms4l06skl7xwtkdl8")
  cr_agente_financeiro                cr_agente_financeiro        @relation(fields: [id_cr_agente_financeiro], references: [id_cr_agente_financeiro], onDelete: NoAction, onUpdate: NoAction, map: "fk_cr_prop_ag_financeiro")
  cp_nivel_tecnologico                cp_nivel_tecnologico?       @relation(fields: [id_cp_nivel_tecnologico], references: [id_cp_nivel_tecnologico], onDelete: NoAction, onUpdate: NoAction, map: "fk_cr_prop_nivel_tecnologico")
  ger_pessoa                          ger_pessoa                  @relation(fields: [id_pessoa_demeter], references: [id_pessoa_demeter], onDelete: NoAction, onUpdate: NoAction, map: "fk_cr_prop_pessoa")
  cr_relacionamento_pecuaria          cr_relacionamento_pecuaria? @relation(fields: [id_cr_relacionamento_pecuaria], references: [id_cr_relacionamento_pecuaria], onDelete: NoAction, onUpdate: NoAction, map: "fk_cr_prop_relacionamento")
  cp_sistema_exploracao               cp_sistema_exploracao       @relation(fields: [id_cp_sistema_exploracao], references: [id_cp_sistema_exploracao], onDelete: NoAction, onUpdate: NoAction, map: "fk_cr_prop_sistema_exploracao")
}

model cr_custeio_pecuaria_totais {
  id_cr_custeio_pecuaria_totais   BigInt              @id(map: "pk_cr_custeio_pecuaria_totais") @default(autoincrement())
  id_cr_custeio_pecuaria          BigInt
  valor_rebanho_existente         Float?
  valor_rebanho_financiar         Float?
  quant_rebanho_existente         Float?
  quant_rebanho_financiar         Float?
  quant_rebanho_total             Float?
  sub_total_insumos               Float?
  sub_total_insumos_financiar     Float?
  sub_total_servicos              Float?
  sub_total_servicos_financiar    Float?
  sub_total_despesas              Float?
  sub_total_despesas_financiar    Float?
  total_orcamento                 Float?
  total_orcamento_financiar       Float?
  total_orcamento_geral           Float?
  total_orcamento_geral_financiar Float?
  custo_unidade_producao          Float?
  custo_unidade_comercializacao   Float?
  valor_total_despesas            Float?
  valor_total_receitas            Float?
  valor_total_saldo               Float?
  rentabilidade_percentual        Float?
  ativo                           Boolean             @default(true)
  dt_update_record                DateTime            @default(now()) @db.Timestamp(6)
  cr_custeio_pecuaria             cr_custeio_pecuaria @relation(fields: [id_cr_custeio_pecuaria], references: [id_cr_custeio_pecuaria], onDelete: NoAction, onUpdate: NoAction, map: "fk_cr_totais_custeio_pec")
}

model cr_despesas_agricola {
  id_cr_despesas_agricola    BigInt              @id(map: "pk_cr_despesas_agricola") @default(autoincrement())
  id_cr_custeio_agricola     BigInt
  encargos_complementares    Float?
  arrendamento_parceria      Float?
  frete_beneficiamento       Float?
  seguros_proagro_percentual Float?
  outras_despesas            Float?
  ativo                      Boolean             @default(true)
  dt_update_record           DateTime            @default(now()) @db.Timestamp(6)
  este_financiamento         Float?
  recursos_proprios          Float?
  juros_financiamento        Float?
  assistencia_tecnica        Float?
  seguros_proagro_valor      Float?
  cr_custeio_agricola        cr_custeio_agricola @relation(fields: [id_cr_custeio_agricola], references: [id_cr_custeio_agricola], onDelete: NoAction, onUpdate: NoAction, map: "fk2p84h8h8c9xu4hfnhg5qxdlpt")
}

model cr_despesas_pecuaria {
  id_cr_despesas_pecuaria    BigInt              @id(map: "pk_cr_despesas_pecuaria") @default(autoincrement())
  id_cr_custeio_pecuaria     BigInt
  encargos_complementares    Float?
  arrendamento_parceria      Float?
  frete_beneficiamento       Float?
  seguros_proagro_percentual Float?
  outras_despesas            Float?
  ativo                      Boolean             @default(true)
  dt_update_record           DateTime            @default(now()) @db.Timestamp(6)
  este_financiamento         Float?
  recursos_proprios          Float?
  juros_financiamento        Float?
  assistencia_tecnica        Float?
  seguros_proagro_valor      Float?
  cr_custeio_pecuaria        cr_custeio_pecuaria @relation(fields: [id_cr_custeio_pecuaria], references: [id_cr_custeio_pecuaria], onDelete: NoAction, onUpdate: NoAction, map: "fk2anhlaejp10rsg2etwchlew9e")
}

model cr_dividas_existentes {
  id_cr_dividas_existentes      BigInt                          @id(map: "pk_cr_dividas_existentes") @default(autoincrement())
  id_cr_investimento            BigInt
  credor                        String                          @db.VarChar(100)
  finalidade                    String                          @db.VarChar(250)
  valor_contratado              Float
  data_contratacao              DateTime?                       @db.Timestamp(6)
  data_vencimento               DateTime?                       @db.Timestamp(6)
  taxa_juros                    Float
  ativo                         Boolean                         @default(true)
  dt_update_record              DateTime                        @default(now()) @db.Timestamp(6)
  cr_investimento               cr_investimento                 @relation(fields: [id_cr_investimento], references: [id_cr_investimento], onDelete: NoAction, onUpdate: NoAction, map: "fk_cr_dividas_investimento")
  cr_dividas_existentes_valores cr_dividas_existentes_valores[]
}

model cr_dividas_existentes_valores {
  id_cr_dividas_existentes_valores BigInt                @id(map: "pk_cr_dividas_existentes_valores") @default(autoincrement())
  id_cr_dividas_existentes         BigInt
  ano_referencia                   Int
  valor_amortizacao                Float
  valor_juros                      Float
  valor_parcela                    Float
  ativo                            Boolean               @default(true)
  dt_update_record                 DateTime              @default(now()) @db.Timestamp(6)
  cr_dividas_existentes            cr_dividas_existentes @relation(fields: [id_cr_dividas_existentes], references: [id_cr_dividas_existentes], onDelete: NoAction, onUpdate: NoAction, map: "fk_cr_dividas_existentes_valores")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model cr_fluxo_caixa_invest {
  id_cr_fluxo_caixa_invest BigInt          @id(map: "pk_cr_fluxo_caixa_invest") @default(autoincrement())
  id_cr_investimento       BigInt
  especificacao            String          @db.VarChar(100)
  periodo_referencia       Int
  valor_periodo            Float
  tipo                     Int
  ativo                    Boolean         @default(true)
  dt_update_record         DateTime        @default(now()) @db.Timestamp(6)
  cr_investimento          cr_investimento @relation(fields: [id_cr_investimento], references: [id_cr_investimento], onDelete: NoAction, onUpdate: NoAction, map: "fk_cr_fluxo_caixa_invest")
}

model cr_fluxo_cx_01_05 {
  id_cr_fluxo_cx     BigInt          @id(map: "pk_cr_fluxo_cx_01_05") @default(autoincrement())
  id_cr_investimento BigInt
  especificacao      String          @db.VarChar(100)
  valor_periodo_a    Float?
  valor_periodo_b    Float?
  valor_periodo_c    Float?
  valor_periodo_d    Float?
  valor_periodo_e    Float?
  dt_update_record   DateTime        @default(now()) @db.Timestamp(6)
  cr_investimento    cr_investimento @relation(fields: [id_cr_investimento], references: [id_cr_investimento], onDelete: NoAction, onUpdate: NoAction, map: "fk_cr_fluxo_cx_01_05")
}

model cr_fluxo_cx_06_10 {
  id_cr_fluxo_cx     BigInt          @id(map: "pk_cr_fluxo_cx_06_10") @default(autoincrement())
  id_cr_investimento BigInt
  especificacao      String          @db.VarChar(100)
  valor_periodo_a    Float?
  valor_periodo_b    Float?
  valor_periodo_c    Float?
  valor_periodo_d    Float?
  valor_periodo_e    Float?
  dt_update_record   DateTime        @default(now()) @db.Timestamp(6)
  cr_investimento    cr_investimento @relation(fields: [id_cr_investimento], references: [id_cr_investimento], onDelete: NoAction, onUpdate: NoAction, map: "fk_cr_fluxo_cx_06_10")
}

model cr_fluxo_cx_11_15 {
  id_cr_fluxo_cx     BigInt          @id(map: "pk_cr_fluxo_cx_11_15") @default(autoincrement())
  id_cr_investimento BigInt
  especificacao      String          @db.VarChar(100)
  valor_periodo_a    Float?
  valor_periodo_b    Float?
  valor_periodo_c    Float?
  valor_periodo_d    Float?
  valor_periodo_e    Float?
  dt_update_record   DateTime        @default(now()) @db.Timestamp(6)
  cr_investimento    cr_investimento @relation(fields: [id_cr_investimento], references: [id_cr_investimento], onDelete: NoAction, onUpdate: NoAction, map: "fk_cr_fluxo_cx_11_15")
}

model cr_fluxo_cx_16_20 {
  id_cr_fluxo_cx     BigInt          @id(map: "pk_cr_fluxo_cx_16_20") @default(autoincrement())
  id_cr_investimento BigInt
  especificacao      String          @db.VarChar(100)
  valor_periodo_a    Float?
  valor_periodo_b    Float?
  valor_periodo_c    Float?
  valor_periodo_d    Float?
  valor_periodo_e    Float?
  dt_update_record   DateTime        @default(now()) @db.Timestamp(6)
  cr_investimento    cr_investimento @relation(fields: [id_cr_investimento], references: [id_cr_investimento], onDelete: NoAction, onUpdate: NoAction, map: "fk_cr_fluxo_cx_16_20")
}

model cr_garantias {
  id_cr_garantias    BigInt          @id(map: "pk_cr_garantias") @default(autoincrement())
  id_cr_investimento BigInt
  especificacao      String          @db.VarChar(250)
  valor_garantia     Float
  ativo              Boolean         @default(true)
  dt_update_record   DateTime        @default(now()) @db.Timestamp(6)
  cr_investimento    cr_investimento @relation(fields: [id_cr_investimento], references: [id_cr_investimento], onDelete: NoAction, onUpdate: NoAction, map: "fk_cr_garantias")
}

model cr_imoveis_agricola {
  id_cr_imoveis_agricola BigInt              @id(map: "pk_cr_imoveis_agricola") @default(autoincrement())
  id_cr_custeio_agricola BigInt
  id_pl_propriedade      BigInt
  id_pessoa_demeter      BigInt?
  area_imovel            Float?
  area_cultura           Float?
  area_financiada        Float?
  altitude               Int?                @db.SmallInt
  ds_roteiro_acesso      String?             @db.VarChar(4000)
  ativo                  Boolean             @default(true)
  dt_update_record       DateTime            @default(now()) @db.Timestamp(6)
  ger_pessoa             ger_pessoa?         @relation(fields: [id_pessoa_demeter], references: [id_pessoa_demeter], onDelete: NoAction, onUpdate: NoAction, map: "fk8cwp9nrwshmxkfqye4m7625ur")
  cr_custeio_agricola    cr_custeio_agricola @relation(fields: [id_cr_custeio_agricola], references: [id_cr_custeio_agricola], onDelete: NoAction, onUpdate: NoAction, map: "fk_cr_custeio_agricola")
  pl_propriedade         pl_propriedade      @relation(fields: [id_pl_propriedade], references: [id_pl_propriedade], onDelete: NoAction, onUpdate: NoAction, map: "fk_cr_pl_propriedade")
}

model cr_imoveis_pecuaria {
  id_cr_imoveis_pecuaria BigInt              @id(map: "pk_cr_imoveis_pecuaria") @default(autoincrement())
  id_cr_custeio_pecuaria BigInt
  id_pl_propriedade      BigInt
  id_pessoa_demeter      BigInt?
  area_imovel            Float?
  area_cultura           Float?
  area_financiada        Float?
  altitude               Int?                @db.SmallInt
  ds_roteiro_acesso      String?             @db.VarChar(4000)
  ativo                  Boolean             @default(true)
  dt_update_record       DateTime            @default(now()) @db.Timestamp(6)
  area_atividade         Float?
  pl_propriedade         pl_propriedade      @relation(fields: [id_pl_propriedade], references: [id_pl_propriedade], onDelete: NoAction, onUpdate: NoAction, map: "fk4q6sdvji8nn2hpemcc378xanl")
  ger_pessoa             ger_pessoa?         @relation(fields: [id_pessoa_demeter], references: [id_pessoa_demeter], onDelete: NoAction, onUpdate: NoAction, map: "fk785efhw8ytdlygo3glem8aiwy")
  cr_custeio_pecuaria    cr_custeio_pecuaria @relation(fields: [id_cr_custeio_pecuaria], references: [id_cr_custeio_pecuaria], onDelete: NoAction, onUpdate: NoAction, map: "fk_cr_custeio_pecuaria")
}

model cr_infraestrutura {
  id_cr_infraestrutura BigInt          @id(map: "pk_cr_infraestrutura") @default(autoincrement())
  id_cr_investimento   BigInt
  especificacao        String?         @db.VarChar(100)
  tipo                 String?         @db.VarChar(100)
  quantidade           Float?
  valor_unitario       Float?
  valor_total          Float?
  ativo                Boolean         @default(true)
  dt_update_record     DateTime        @db.Timestamp(6)
  cr_investimento      cr_investimento @relation(fields: [id_cr_investimento], references: [id_cr_investimento], onDelete: NoAction, onUpdate: NoAction, map: "fk_id_cr_investimento")
}

model cr_insumo_agricola {
  id_cr_insumo_agricola       BigInt               @id(map: "pk_cr_insumo_agricola") @default(autoincrement())
  id_cr_custeio_agricola      BigInt
  id_cp_item_custo_insumo     BigInt
  id_cp_etapas_producao       BigInt?
  quantidade_ha               Float?
  preco_unitario              Float?
  ativo                       Boolean?
  percentual                  Float?
  epoca                       String?              @db.VarChar(25)
  valor_total_item            Float?
  valor_total_item_financiado Float?
  cr_custeio_agricola         cr_custeio_agricola  @relation(fields: [id_cr_custeio_agricola], references: [id_cr_custeio_agricola], onDelete: NoAction, onUpdate: NoAction, map: "fk47fb948tcver1rg2g4ncuetlx")
  cp_etapas_producao          cp_etapas_producao?  @relation(fields: [id_cp_etapas_producao], references: [id_cp_etapas_producao], onDelete: NoAction, onUpdate: NoAction, map: "fk7p2krycimei897rcbes6g23gx")
  cp_item_custo_insumo        cp_item_custo_insumo @relation(fields: [id_cp_item_custo_insumo], references: [id_cp_item_custo_insumo], onDelete: NoAction, onUpdate: NoAction, map: "fk_cr_item_insumo")
}

model cr_insumo_pecuaria {
  id_cr_insumo_pecuaria       BigInt               @id(map: "pk_cr_insumo_pecuaria") @default(autoincrement())
  id_cr_custeio_pecuaria      BigInt
  id_cp_item_custo_insumo     BigInt
  preco_unitario              Float?
  epoca                       String?              @db.VarChar(25)
  ativo                       Boolean?
  quantidade                  Float?
  percentual_financiar        Float?
  valor_total_item            Float?
  valor_total_item_financiado Float?
  cr_custeio_pecuaria         cr_custeio_pecuaria  @relation(fields: [id_cr_custeio_pecuaria], references: [id_cr_custeio_pecuaria], onDelete: NoAction, onUpdate: NoAction, map: "fk_cr_insumo_custeio_pecuaria")
  cp_item_custo_insumo        cp_item_custo_insumo @relation(fields: [id_cp_item_custo_insumo], references: [id_cp_item_custo_insumo], onDelete: NoAction, onUpdate: NoAction, map: "fk_cr_insumo_item_insumo")
}

model cr_inv_assist_tecnica_tipo {
  id_cr_inv_assist_tecnica_tipo BigInt   @id(map: "pk_cr_inv_assist_tecnica_tipo") @default(autoincrement())
  descricao_tipo_assistencia    String   @db.VarChar(100)
  ativo                         Boolean  @default(true)
  dt_update_record              DateTime @default(now()) @db.Timestamp(6)
}

model cr_investimento {
  id_cr_investimento         BigInt                       @id(map: "pk_cr_investimento") @default(autoincrement())
  id_usuario                 BigInt
  data_projeto               DateTime?                    @db.Date
  ativo                      Boolean                      @default(true)
  dt_update_record           DateTime                     @db.Timestamp(6)
  parecer_tecnico_conclusao  String?                      @db.VarChar(400)
  id_municipio               BigInt?
  nome                       String?                      @db.VarChar(255)
  matricula                  String?                      @db.VarChar(100)
  formacao_tecnica           String?                      @db.VarChar(255)
  email                      String?                      @db.VarChar(255)
  telefone                   String?                      @db.VarChar(100)
  crea                       String?                      @db.VarChar(100)
  orgao_registro_tecnico     String                       @default("CREA-MG") @db.VarChar(7)
  numero_registro_tecnico    String?                      @db.VarChar(10)
  cr_adequacao_projeto       cr_adequacao_projeto[]
  cr_assistencia_tecnica     cr_assistencia_tecnica[]
  cr_ater_investimento       cr_ater_investimento[]
  cr_atividade               cr_atividade[]
  cr_condicoes_investimento  cr_condicoes_investimento[]
  cr_cronograma_inv          cr_cronograma_inv[]
  cr_custeio_assoc_invest    cr_custeio_assoc_invest[]
  cr_dividas_existentes      cr_dividas_existentes[]
  cr_fluxo_caixa_invest      cr_fluxo_caixa_invest[]
  cr_fluxo_cx_01_05          cr_fluxo_cx_01_05[]
  cr_fluxo_cx_06_10          cr_fluxo_cx_06_10[]
  cr_fluxo_cx_11_15          cr_fluxo_cx_11_15[]
  cr_fluxo_cx_16_20          cr_fluxo_cx_16_20[]
  cr_garantias               cr_garantias[]
  cr_infraestrutura          cr_infraestrutura[]
  usuario                    usuario                      @relation(fields: [id_usuario], references: [id_usuario], onDelete: NoAction, onUpdate: NoAction, map: "fk9xxvstvfjpfnqyb83coqu680u")
  sep_municipio              sep_municipio?               @relation(fields: [id_municipio], references: [id_municipio], onDelete: NoAction, onUpdate: NoAction, map: "fk_sep_municipio")
  cr_investimento_proponente cr_investimento_proponente[]
  cr_orcamento_investimento  cr_orcamento_investimento[]
  cr_outras_info_invest      cr_outras_info_invest[]
  cr_propriedade_contrato    cr_propriedade_contrato[]
  cr_semovente_bovino        cr_semovente_bovino[]
  cr_semovente_investimento  cr_semovente_investimento[]
  cr_uso_terra               cr_uso_terra[]
}

model cr_investimento_proponente {
  id_cr_investimento_proponente                                                                                 BigInt                      @id(map: "pk_cr_investimento_proponente") @default(autoincrement())
  id_cr_investimento                                                                                            BigInt
  id_pessoa_demeter                                                                                             BigInt
  id_cr_agente_financeiro                                                                                       BigInt?
  id_pl_tipo_posse                                                                                              Int?                        @db.SmallInt
  agencia                                                                                                       String?                     @db.VarChar(100)
  nome_proprietario                                                                                             String?                     @db.VarChar(100)
  nr_cpf_cnpj_proprietario                                                                                      String?                     @db.VarChar(14)
  ativo                                                                                                         Boolean                     @default(true)
  dt_update_record                                                                                              DateTime                    @db.Timestamp(6)
  ger_pessoa                                                                                                    ger_pessoa                  @relation(fields: [id_pessoa_demeter], references: [id_pessoa_demeter], onDelete: NoAction, onUpdate: NoAction, map: "fk3apb0u1sc148iixtpovh0g5ym")
  cr_agente_financeiro                                                                                          cr_agente_financeiro?       @relation(fields: [id_cr_agente_financeiro], references: [id_cr_agente_financeiro], onDelete: NoAction, onUpdate: NoAction, map: "fk_id_cr_agente_financeiro")
  cr_investimento                                                                                               cr_investimento             @relation(fields: [id_cr_investimento], references: [id_cr_investimento], onDelete: NoAction, onUpdate: NoAction, map: "fk_id_cr_investimento")
  pl_tipo_posse                                                                                                 pl_tipo_posse?              @relation(fields: [id_pl_tipo_posse], references: [id_pl_tipo_posse], onDelete: NoAction, onUpdate: NoAction, map: "fk_invest_prop_pl_tipo_posse")
  cr_proponente_propriedade_cr_proponente_propriedade_id_cr_investimento_proponenteTocr_investimento_proponente cr_proponente_propriedade[] @relation("cr_proponente_propriedade_id_cr_investimento_proponenteTocr_investimento_proponente")
  cr_proponente_propriedade_cr_proponente_propriedade_id_cr_proponente_propriedadeTocr_investimento_proponente  cr_proponente_propriedade?  @relation("cr_proponente_propriedade_id_cr_proponente_propriedadeTocr_investimento_proponente")
}

model cr_item_financiavel {
  id_cr_item_financiavel    BigInt                      @id @default(autoincrement())
  nome_item_financiavel     String                      @db.VarChar(100)
  unidade                   String                      @db.VarChar(100)
  ativo                     Boolean                     @default(true)
  dt_update_record          DateTime                    @default(now()) @db.Timestamp(6)
  cr_orcamento_investimento cr_orcamento_investimento[]
}

model cr_linha_credito {
  id_cr_linha_credito            BigInt                           @id @default(autoincrement())
  nome_linha_credito             String                           @db.VarChar(100)
  ativo                          Boolean                          @default(true)
  dt_update_record               DateTime                         @default(now()) @db.Timestamp(6)
  cr_condicoes_investimento      cr_condicoes_investimento[]
  cr_custeio_agricola_proponente cr_custeio_agricola_proponente[]
  cr_custeio_pecuaria_proponente cr_custeio_pecuaria_proponente[]
}

model cr_orcamento_investimento {
  id_cr_orcamento_investimento BigInt              @id(map: "pk_cr_orcamento_investimento") @default(autoincrement())
  id_cr_investimento           BigInt
  id_cr_item_financiavel       BigInt
  des_item_financiavel         String?             @db.VarChar(250)
  quantidade_item              Float?
  valor_unitario               Float?
  valor_total                  Float?
  valor_financiado             Float?
  valor_recursos_proprios      Float?
  condicao_proposta            String?             @db.VarChar(1)
  epoca                        String?             @db.VarChar(25)
  ativo                        Boolean             @default(true)
  dt_update_record             DateTime            @default(now()) @db.Timestamp(6)
  cr_investimento              cr_investimento     @relation(fields: [id_cr_investimento], references: [id_cr_investimento], onDelete: NoAction, onUpdate: NoAction, map: "fk_cr_investimento_orc")
  cr_item_financiavel          cr_item_financiavel @relation(fields: [id_cr_item_financiavel], references: [id_cr_item_financiavel], onDelete: NoAction, onUpdate: NoAction, map: "fk_item_financiavel")
}

model cr_outras_despesas_pecuaria {
  id_cr_outras_despesas_pecuaria BigInt              @id(map: "pk_id_cr_outras_despesas_pecuaria") @default(autoincrement())
  id_cr_custeio_pecuaria         BigInt
  descricao_despesa              String?             @db.VarChar(250)
  unidade_despesa                String?             @db.VarChar(25)
  quantidade_ha                  Float?
  preco_unitario                 Float?
  percentual                     Float?
  epoca                          String?             @db.VarChar(25)
  ativo                          Boolean?
  cr_custeio_pecuaria            cr_custeio_pecuaria @relation(fields: [id_cr_custeio_pecuaria], references: [id_cr_custeio_pecuaria], onDelete: NoAction, onUpdate: NoAction, map: "fk_cr_outros_custeio_pecuaria")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model cr_outras_info_invest {
  id_cr_outras_info_invest BigInt          @id(map: "pk_cr_outras_info_invest") @default(autoincrement())
  id_cr_investimento       BigInt
  periodo_referencia       Int
  valor_arrendamento       Float
  valor_manutencao         Float
  valor_recursos_proprios  Float
  ativo                    Boolean         @default(true)
  dt_update_record         DateTime        @default(now()) @db.Timestamp(6)
  cr_investimento          cr_investimento @relation(fields: [id_cr_investimento], references: [id_cr_investimento], onDelete: NoAction, onUpdate: NoAction, map: "fk_cr_outras_info_invest")
}

model cr_proponente_propriedade {
  id_cr_proponente_propriedade                                                                                   BigInt                     @id(map: "pk_cr_proponente_propriedade") @default(autoincrement())
  id_cr_investimento_proponente                                                                                  BigInt
  id_pl_propriedade                                                                                              BigInt
  cr_investimento_proponente_cr_proponente_propriedade_id_cr_investimento_proponenteTocr_investimento_proponente cr_investimento_proponente @relation("cr_proponente_propriedade_id_cr_investimento_proponenteTocr_investimento_proponente", fields: [id_cr_investimento_proponente], references: [id_cr_investimento_proponente], onDelete: NoAction, onUpdate: NoAction, map: "fk_cr_pp_proponente")
  pl_propriedade                                                                                                 pl_propriedade             @relation(fields: [id_pl_propriedade], references: [id_pl_propriedade], onDelete: NoAction, onUpdate: NoAction, map: "fk_cr_pp_propriedade")
  cr_investimento_proponente_cr_proponente_propriedade_id_cr_proponente_propriedadeTocr_investimento_proponente  cr_investimento_proponente @relation("cr_proponente_propriedade_id_cr_proponente_propriedadeTocr_investimento_proponente", fields: [id_cr_proponente_propriedade], references: [id_cr_investimento_proponente], onDelete: NoAction, onUpdate: NoAction, map: "fklxyfmx4ln6d68ktl04up6rfoa")
}

model cr_propriedade_contrato {
  id_cr_propriedade_contrato                                        BigInt           @id(map: "pk_cr_propriedade_contrato") @default(autoincrement())
  id_cr_investimento                                                BigInt?
  id_pl_propriedade                                                 BigInt
  id_pessoa_demeter                                                 BigInt
  id_pl_tipo_posse                                                  BigInt
  dt_inicio_contrato                                                DateTime?        @db.Timestamp(6)
  dt_termino_contrato                                               DateTime?        @db.Timestamp(6)
  ativo                                                             Boolean          @default(true)
  id_sincronismo_propriedade                                        String?          @db.VarChar(36)
  dt_update_record                                                  DateTime?        @default(now()) @db.Timestamp(6)
  pl_tipo_posse                                                     pl_tipo_posse    @relation(fields: [id_pl_tipo_posse], references: [id_pl_tipo_posse], onDelete: NoAction, onUpdate: NoAction, map: "fk73f13me7vh69jsc7lwluehde7")
  ger_pessoa_cr_propriedade_contrato_id_pessoa_demeterToger_pessoa  ger_pessoa       @relation("cr_propriedade_contrato_id_pessoa_demeterToger_pessoa", fields: [id_pessoa_demeter], references: [id_pessoa_demeter], onDelete: NoAction, onUpdate: NoAction, map: "fk7567wtle04wu2nqj85ekgk8vj")
  cr_investimento                                                   cr_investimento? @relation(fields: [id_cr_investimento], references: [id_cr_investimento], onDelete: NoAction, onUpdate: NoAction, map: "fk_cr_investimento_contrato")
  pl_propriedade                                                    pl_propriedade   @relation(fields: [id_pl_propriedade], references: [id_pl_propriedade], onDelete: NoAction, onUpdate: NoAction, map: "fk_propriedade_ger_pessoa")
  ger_pessoa_cr_propriedade_contrato_id_cr_investimentoToger_pessoa ger_pessoa?      @relation("cr_propriedade_contrato_id_cr_investimentoToger_pessoa", fields: [id_cr_investimento], references: [id_pessoa_demeter], onDelete: NoAction, onUpdate: NoAction, map: "fkjfsbc2e48ltbvlmvm8d1dqiyr")
}

model cr_rebanho_beneficiado {
  id_cr_rebanho_beneficiado     BigInt                        @id(map: "pk_cr_rebanho_beneficiado") @default(autoincrement())
  id_cr_custeio_pecuaria        BigInt
  id_cr_categoria               BigInt
  existente_financiado          String?                       @db.VarChar(1)
  quantidade_semovente          Float?
  caracterizacao_racial         String?                       @db.VarChar(100)
  valor_unitario                Float?
  ativo                         Boolean                       @default(true)
  dt_update_record              DateTime                      @default(now()) @db.Timestamp(6)
  valor_total_item              Float?
  cr_custeio_pecuaria           cr_custeio_pecuaria           @relation(fields: [id_cr_custeio_pecuaria], references: [id_cr_custeio_pecuaria], onDelete: NoAction, onUpdate: NoAction, map: "fk8si2bo4haua1ucbb9ah7or9nq")
  cr_categoria_semovente_bovino cr_categoria_semovente_bovino @relation(fields: [id_cr_categoria], references: [id_cr_categoria], onDelete: NoAction, onUpdate: NoAction, map: "fk_id_cr_categoria")
}

model cr_receitas_agricola {
  id_cr_receitas_agricola BigInt              @id(map: "pk_cr_receitas_agricola") @default(autoincrement())
  id_cr_custeio_agricola  BigInt
  id_produto              BigInt
  valor_unitario          Float?
  ativo                   Boolean             @default(true)
  dt_update_record        DateTime            @default(now()) @db.Timestamp(6)
  quantidade              Float?
  valor_total_item        Float?
  bp_produto              bp_produto          @relation(fields: [id_produto], references: [id_produto], onDelete: NoAction, onUpdate: NoAction, map: "fk84kfwl7agi9gk2p8nxpkitvw9")
  cr_custeio_agricola     cr_custeio_agricola @relation(fields: [id_cr_custeio_agricola], references: [id_cr_custeio_agricola], onDelete: NoAction, onUpdate: NoAction, map: "fk_cr_receitas_custeio")
}

model cr_receitas_pecuaria {
  id_cr_receitas_pecuaria BigInt              @id(map: "pk_cr_receitas_pecuaria") @default(autoincrement())
  id_cr_custeio_pecuaria  BigInt
  discriminacao           String?             @db.VarChar(250)
  unidade                 String?             @db.VarChar(25)
  quantidade              Float
  valor_unitario          Float?
  ativo                   Boolean             @default(true)
  dt_update_record        DateTime            @default(now()) @db.Timestamp(6)
  valor_total_item        Float?
  cr_custeio_pecuaria     cr_custeio_pecuaria @relation(fields: [id_cr_custeio_pecuaria], references: [id_cr_custeio_pecuaria], onDelete: NoAction, onUpdate: NoAction, map: "fk_cr_receitas_custeio_pec")
}

model cr_recomendacoes_agricola {
  id_cr_recomendacoes_agricola BigInt              @default(autoincrement())
  id_cr_custeio_agricola       BigInt              @id(map: "pk_id_cr_custeio_agricola")
  recomendacao                 String?             @db.VarChar(4000)
  ativo                        Boolean             @default(true)
  dt_update_record             DateTime            @default(now()) @db.Timestamp(6)
  cr_custeio_agricola          cr_custeio_agricola @relation(fields: [id_cr_custeio_agricola], references: [id_cr_custeio_agricola], onDelete: NoAction, onUpdate: NoAction, map: "fk_cr_recomendacao_custeio")
}

model cr_recomendacoes_pecuaria {
  id_cr_recomendacoes_pecuaria BigInt              @id(map: "pk_cr_recomendacoes_pecuaria") @default(autoincrement())
  id_cr_custeio_pecuaria       BigInt
  recomendacao                 String?             @db.VarChar(4000)
  ativo                        Boolean             @default(true)
  dt_update_record             DateTime            @default(now()) @db.Timestamp(6)
  cr_custeio_pecuaria          cr_custeio_pecuaria @relation(fields: [id_cr_custeio_pecuaria], references: [id_cr_custeio_pecuaria], onDelete: NoAction, onUpdate: NoAction, map: "fk_cr_recomendacao_pecuaria")
}

model cr_relacionamento_pecuaria {
  id_cr_relacionamento_pecuaria  BigInt                           @id(map: "pk_id_cr_relacionamento_pecuaria") @default(autoincrement())
  id_cp_atividade_pecuaria       BigInt
  id_cp_segmento                 BigInt
  id_cp_fase                     BigInt
  id_cp_produto_pecuaria         BigInt
  id_cp_unidade_producao         BigInt
  id_cp_unidade_comercializacao  BigInt
  id_cp_unidade_produtividade    BigInt
  cr_custeio_pecuaria_proponente cr_custeio_pecuaria_proponente[]
  cp_atividade_pecuaria          cp_atividade_pecuaria            @relation(fields: [id_cp_atividade_pecuaria], references: [id_cp_atividade_pecuaria], onDelete: NoAction, onUpdate: NoAction, map: "fk1te05xr74jmpet7r8of3xn4ra")
  cp_fase                        cp_fase                          @relation(fields: [id_cp_fase], references: [id_cp_fase], onDelete: NoAction, onUpdate: NoAction, map: "fk_cr_rel_fase")
  cp_produto_pecuaria            cp_produto_pecuaria              @relation(fields: [id_cp_produto_pecuaria], references: [id_cp_produto_pecuaria], onDelete: NoAction, onUpdate: NoAction, map: "fk_cr_rel_produto")
  cp_segmento                    cp_segmento                      @relation(fields: [id_cp_segmento], references: [id_cp_segmento], onDelete: NoAction, onUpdate: NoAction, map: "fk_cr_rel_segmento")
  cp_unidade_comercializacao     cp_unidade_comercializacao       @relation(fields: [id_cp_unidade_comercializacao], references: [id_cp_unidade_comercializacao], onDelete: NoAction, onUpdate: NoAction, map: "fk_cr_rel_und_comercializacao")
  cp_unidade_producao            cp_unidade_producao              @relation(fields: [id_cp_unidade_producao], references: [id_cp_unidade_producao], onDelete: NoAction, onUpdate: NoAction, map: "fk_cr_rel_und_producao")
  cp_unidade_produtividade       cp_unidade_produtividade         @relation(fields: [id_cp_unidade_produtividade], references: [id_cp_unidade_produtividade], onDelete: NoAction, onUpdate: NoAction, map: "fk_cr_rel_und_produtividade")
}

model cr_semovente_bovino {
  id_cr_semovente_bovino        BigInt                        @id(map: "pk_cr_semovente_bovino") @default(autoincrement())
  id_cr_investimento            BigInt
  id_cr_categoria               BigInt
  tipo                          String?                       @db.VarChar(100)
  num_cabeca                    Int?
  predominante_racial           String?                       @db.VarChar(100)
  valor_unitario                Float?
  valor_total                   Float?
  ativo                         Boolean                       @default(true)
  dt_update_record              DateTime                      @db.Timestamp(6)
  cr_categoria_semovente_bovino cr_categoria_semovente_bovino @relation(fields: [id_cr_categoria], references: [id_cr_categoria], onDelete: NoAction, onUpdate: NoAction, map: "fk_id_cr_categoria")
  cr_investimento               cr_investimento               @relation(fields: [id_cr_investimento], references: [id_cr_investimento], onDelete: NoAction, onUpdate: NoAction, map: "fk_id_cr_investimento")
}

model cr_semovente_categoria {
  id_cr_semovente_categoria BigInt                      @id(map: "pk_cr_semovente_categoria") @default(autoincrement())
  id_cr_semovente_criacao   BigInt
  des_categoria_semovente   String                      @db.VarChar(50)
  ativo                     Boolean                     @default(true)
  dt_update_record          DateTime                    @default(now()) @db.Timestamp(6)
  cr_semovente_criacao      cr_semovente_criacao        @relation(fields: [id_cr_semovente_criacao], references: [id_cr_semovente_criacao], onDelete: NoAction, onUpdate: NoAction, map: "fk_cr_semovente_criacao")
  cr_semovente_investimento cr_semovente_investimento[]
}

model cr_semovente_criacao {
  id_cr_semovente_criacao BigInt                   @id(map: "pk_cr_semovente_criacao") @default(autoincrement())
  des_semovente           String                   @db.VarChar(50)
  ativo                   Boolean                  @default(true)
  dt_update_record        DateTime                 @default(now()) @db.Timestamp(6)
  cr_semovente_categoria  cr_semovente_categoria[]
}

model cr_semovente_investimento {
  id_cr_semovente_investimento BigInt                 @id(map: "pk_cr_semovente_investimento") @default(autoincrement())
  id_cr_semovente_categoria    BigInt
  id_cr_investimento           BigInt
  numero_cabecas               BigInt?
  caracterizacao_racial        String?                @db.VarChar(150)
  valor_unitario               Float
  valor_total                  Float
  ativo                        Boolean                @default(true)
  dt_update_record             DateTime               @default(now()) @db.Timestamp(6)
  cr_semovente_categoria       cr_semovente_categoria @relation(fields: [id_cr_semovente_categoria], references: [id_cr_semovente_categoria], onDelete: NoAction, onUpdate: NoAction, map: "fk_cr_semovente_categoria")
  cr_investimento              cr_investimento        @relation(fields: [id_cr_investimento], references: [id_cr_investimento], onDelete: NoAction, onUpdate: NoAction, map: "fk_cr_semovente_invest")
}

model cr_servico_agricola {
  id_cr_servico_agricola      BigInt                @id(map: "pk_cr_servico_agricola") @default(autoincrement())
  id_cr_custeio_agricola      BigInt
  id_cp_item_custo_servico    BigInt
  id_cp_etapas_producao       BigInt?
  quantidade_ha               Float?
  preco_unitario              Float?
  ativo                       Boolean?
  percentual                  Float?
  epoca                       String?               @db.VarChar(25)
  valor_total_item            Float?
  valor_total_item_financiado Float?
  cp_item_custo_servico       cp_item_custo_servico @relation(fields: [id_cp_item_custo_servico], references: [id_cp_item_custo_servico], onDelete: NoAction, onUpdate: NoAction, map: "fk2xphcj20wayo91keo8043d38")
  cr_custeio_agricola         cr_custeio_agricola   @relation(fields: [id_cr_custeio_agricola], references: [id_cr_custeio_agricola], onDelete: NoAction, onUpdate: NoAction, map: "fk3jn93yxn6vayb9io1qryu0mjq")
  cp_etapas_producao          cp_etapas_producao?   @relation(fields: [id_cp_etapas_producao], references: [id_cp_etapas_producao], onDelete: NoAction, onUpdate: NoAction, map: "fk5g5mh63xawj5cw6tp0ndd93d1")
}

model cr_servico_pecuaria {
  id_cr_servico_pecuaria      BigInt                @id(map: "pk_cr_servico_pecuaria") @default(autoincrement())
  id_cr_custeio_pecuaria      BigInt
  id_cp_item_custo_servico    BigInt
  preco_unitario              Float?
  epoca                       String?               @db.VarChar(25)
  ativo                       Boolean?
  quantidade                  Float?
  percentual_financiar        Float?
  valor_total_item            Float?
  valor_total_item_financiado Float?
  cr_custeio_pecuaria         cr_custeio_pecuaria   @relation(fields: [id_cr_custeio_pecuaria], references: [id_cr_custeio_pecuaria], onDelete: NoAction, onUpdate: NoAction, map: "fk_cr_servico_custeio_pecuaria")
  cp_item_custo_servico       cp_item_custo_servico @relation(fields: [id_cp_item_custo_servico], references: [id_cp_item_custo_servico], onDelete: NoAction, onUpdate: NoAction, map: "fk_cr_servico_item_servico")
}

model cr_sistema_amortizacao {
  id_cr_sistema_amortizacao BigInt                      @id(map: "pk_cr_sistema_amortizacao") @default(autoincrement())
  des_sistema_amortizacao   String                      @db.VarChar(100)
  ativo                     Boolean                     @default(true)
  dt_update_record          DateTime                    @default(now()) @db.Timestamp(6)
  cr_condicoes_investimento cr_condicoes_investimento[]
}

model cr_tipo_atividade {
  id_cr_tipo_atividade BigInt         @id(map: "pk_cr_tipo_atividade") @default(autoincrement())
  des_atividade        String         @db.VarChar(50)
  ativo                Boolean        @default(true)
  dt_update_record     DateTime       @default(now()) @db.Timestamp(6)
  cr_atividade         cr_atividade[]
}

model cr_uso_terra {
  id_cr_uso_terra    BigInt          @id(map: "pk_cr_uso_terra") @default(autoincrement())
  id_cr_investimento BigInt
  especificacao      String?         @db.VarChar(100)
  tipo               String?         @db.VarChar(100)
  area               Float?
  valor_unitario     Float?
  valor_total        Float?
  ativo              Boolean         @default(true)
  dt_update_record   DateTime        @db.Timestamp(6)
  cr_investimento    cr_investimento @relation(fields: [id_cr_investimento], references: [id_cr_investimento], onDelete: NoAction, onUpdate: NoAction, map: "fk_id_cr_investimento")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model dados_emater {
  crea_emater          String   @db.VarChar(10)
  crmv_emater          String   @db.VarChar(10)
  ativo                Boolean  @default(true)
  data_dtupdate_record DateTime @default(now()) @db.Timestamp(6)

  @@ignore
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model dap_tipo {
  id_tipo          Int             @id(map: "pk_dap_tipo")
  nm_tipo          String?         @db.VarChar(100)
  dt_update_record DateTime        @db.Timestamp(6)
  dap_tipo_item    dap_tipo_item[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model dap_tipo_item {
  id_tipo_item     Int          @id(map: "pk_dap_tipo_item")
  cod_tipo_item    Int?
  nm_tipo_item     String?      @db.VarChar(100)
  fk_tipo          Int
  dt_update_record DateTime     @db.Timestamp(6)
  dap_tipo         dap_tipo     @relation(fields: [fk_tipo], references: [id_tipo], onDelete: NoAction, map: "fk_dap_tipo_item_1")
  ger_pessoa       ger_pessoa[]
}

model emb_formulacao_sugerida {
  id_emb_formulacao_sugerida   BigInt                    @id(map: "pk_emb_formulacao_sugerida") @default(autoincrement())
  id_emb_recomendacao_adubacao BigInt
  composicao_npk               String                    @db.VarChar(50)
  dose                         BigInt?
  dt_update_record             DateTime                  @db.Timestamp(6)
  emb_recomendacao_adubacao    emb_recomendacao_adubacao @relation(fields: [id_emb_recomendacao_adubacao], references: [id_emb_recomendacao_adubacao], onDelete: NoAction, onUpdate: NoAction, map: "fk_emb_recomendacao_adubacao")
}

model emb_recomendacao_adubacao {
  id_emb_recomendacao_adubacao  BigInt                    @id @default(autoincrement())
  analise_recomendacao_adubacao Json?                     @db.Json
  dt_update_record              DateTime                  @db.Timestamp(6)
  emb_formulacao_sugerida       emb_formulacao_sugerida[]
}

model flyway_schema_history {
  installed_rank Int      @id(map: "flyway_schema_history_pk")
  version        String?  @db.VarChar(50)
  description    String   @db.VarChar(200)
  type           String   @db.VarChar(20)
  script         String   @db.VarChar(1000)
  checksum       Int?
  installed_by   String   @db.VarChar(100)
  installed_on   DateTime @default(now()) @db.Timestamp(6)
  execution_time Int
  success        Boolean

  @@index([success], map: "flyway_schema_history_s_idx")
}

model ge_alvara_sanitario {
  id_ge_alvara_sanitario BigInt                   @id @default(autoincrement())
  descricao              String                   @db.VarChar(100)
  ativo                  Boolean                  @default(true)
  dt_update_record       DateTime                 @default(now()) @db.Timestamp(6)
  ge_info_empreendimento ge_info_empreendimento[]
}

model ge_anexo {
  id_ge_anexo               BigInt                 @id(map: "pk_id_ge_anexo") @default(autoincrement())
  nome_arquivo              String?                @db.VarChar(250)
  mime_type                 String?                @db.VarChar(50)
  croqui                    String?
  id_ge_info_empreendimento BigInt
  dt_update_record          DateTime               @default(now()) @db.Timestamp(6)
  ge_info_empreendimento    ge_info_empreendimento @relation(fields: [id_ge_info_empreendimento], references: [id_ge_info_empreendimento], onDelete: NoAction, onUpdate: NoAction, map: "fk_ge_info_empreendimento")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ge_capital_giro_compras {
  id_ge_capital_giro_compras BigInt                 @id @default(autoincrement())
  id_ge_info_empreendimento  BigInt
  descricao_prazo            String?                @db.VarChar(50)
  valor_porcentagem          Float?
  numero_dias                Int?
  ativo                      Boolean?
  dt_update_record           DateTime               @default(now()) @db.Timestamp(6)
  ge_info_empreendimento     ge_info_empreendimento @relation(fields: [id_ge_info_empreendimento], references: [id_ge_info_empreendimento], onDelete: NoAction, onUpdate: NoAction, map: "fk_ge_capital_giro_comp_emp")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ge_capital_giro_estoques {
  id_ge_info_empreendimento BigInt                 @id
  numero_dias               Int?
  dt_update_record          DateTime               @default(now()) @db.Timestamp(6)
  ge_info_empreendimento    ge_info_empreendimento @relation(fields: [id_ge_info_empreendimento], references: [id_ge_info_empreendimento], onDelete: NoAction, onUpdate: NoAction, map: "fk_ge_prazo_estoques")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ge_capital_giro_vendas {
  id_ge_capital_giro_vendas BigInt                 @id @default(autoincrement())
  id_ge_info_empreendimento BigInt
  descricao_prazo           String?                @db.VarChar(50)
  valor_porcentagem         Float?
  numero_dias               Int?
  ativo                     Boolean?
  dt_update_record          DateTime               @default(now()) @db.Timestamp(6)
  ge_info_empreendimento    ge_info_empreendimento @relation(fields: [id_ge_info_empreendimento], references: [id_ge_info_empreendimento], onDelete: NoAction, onUpdate: NoAction, map: "fk7arg6muyqnuqnol030d64x8pm")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ge_custo_comercializacao {
  id_ge_info_empreendimento BigInt                 @id
  simples_nacional          Float?
  microempresa              Float?
  empresa_pequeno_porte     Float?
  irpj                      Float?
  pis                       Float?
  cofins                    Float?
  csll                      Float?
  ipi                       Float?
  inss                      Float?
  icms                      Float?
  icms_situacao             String?                @db.VarChar(1)
  iss                       Float?
  taxa_comissoes            Float?
  taxa_marketing            Float?
  cif                       Float?
  taxa_outros               Float?
  taxa_fats                 Float?
  reserva_cooperativa       Float?
  taxa_lucro_desejado       Float?
  data_atualizacao          DateTime               @default(now()) @db.Timestamp(6)
  ge_info_empreendimento    ge_info_empreendimento @relation(fields: [id_ge_info_empreendimento], references: [id_ge_info_empreendimento], onDelete: NoAction, onUpdate: NoAction, map: "fk9bumaqbjxyhvnmblmbt3e50yu")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ge_custo_fixo {
  id_ge_custo_fixo          BigInt                 @id @default(autoincrement())
  id_ge_info_empreendimento BigInt
  nome_despesa              String?                @db.VarChar(100)
  unidade                   String?                @db.VarChar(10)
  quantidade                Int?
  preco_unitario            Float?
  ativo                     Boolean?
  dt_update_record          DateTime               @default(now()) @db.Timestamp(6)
  ge_info_empreendimento    ge_info_empreendimento @relation(fields: [id_ge_info_empreendimento], references: [id_ge_info_empreendimento], onDelete: NoAction, onUpdate: NoAction, map: "fk1vnehyhpcmbv6hd2xtc73xi8b")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ge_custo_fixo_trabalhista {
  id_ge_custo_fixo_trabalhista BigInt                 @id @default(autoincrement())
  id_ge_info_empreendimento    BigInt
  nome_despesa                 String?                @db.VarChar(100)
  unidade                      String?                @db.VarChar(10)
  quantidade                   Int?
  preco_unitario               Float?
  ativo                        Boolean?
  dt_update_record             DateTime               @default(now()) @db.Timestamp(6)
  ge_info_empreendimento       ge_info_empreendimento @relation(fields: [id_ge_info_empreendimento], references: [id_ge_info_empreendimento], onDelete: NoAction, onUpdate: NoAction, map: "fk2b7n48td926gbngogacl69a99")
}

model ge_custo_indireto_trabalhista {
  id_ge_info_empreendimento        BigInt
  unidade                          String?                @db.VarChar(10)
  quantidade                       Int?
  valor_unitario                   Float?
  dt_update_record                 DateTime               @default(now()) @db.Timestamp(6)
  ativo                            Boolean?               @default(false)
  id_ge_custo_indireto_trabalhista BigInt                 @id @default(autoincrement())
  nome_despesa                     String?                @db.VarChar(255)
  ge_info_empreendimento           ge_info_empreendimento @relation(fields: [id_ge_info_empreendimento], references: [id_ge_info_empreendimento], onDelete: NoAction, onUpdate: NoAction, map: "fk2p77huw8de65h301o99kiomk6")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ge_custo_variavel_direto {
  id_ge_custo_variavel_direto BigInt              @id @default(autoincrement())
  id_ge_estimativa_venda      BigInt
  materia_prima               String?             @db.VarChar(100)
  unidade                     String?             @db.VarChar(10)
  quantidade                  Float?
  preco_unitario              Float?
  ativo                       Boolean?
  dt_update_record            DateTime            @default(now()) @db.Timestamp(6)
  id_und_medida               BigInt?
  ge_estimativa_venda         ge_estimativa_venda @relation(fields: [id_ge_estimativa_venda], references: [id_ge_estimativa_venda], onDelete: NoAction, onUpdate: NoAction, map: "fk8q5mg1xgwvcjfscr8npyf8l01")
  und_medida                  und_medida?         @relation(fields: [id_und_medida], references: [id_und_medida], onDelete: NoAction, onUpdate: NoAction, map: "fk_get_custo_variavel_direto_id_medida")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ge_custo_variavel_indireto {
  id_ge_custo_variavel_indireto BigInt                 @id @default(autoincrement())
  id_ge_info_empreendimento     BigInt
  produto                       String?                @db.VarChar(100)
  unidade                       String?                @db.VarChar(10)
  quantidade                    Int?
  preco_unitario                Float?
  ativo                         Boolean?
  dt_update_record              DateTime               @default(now()) @db.Timestamp(6)
  ge_info_empreendimento        ge_info_empreendimento @relation(fields: [id_ge_info_empreendimento], references: [id_ge_info_empreendimento], onDelete: NoAction, onUpdate: NoAction, map: "fk890ar5784veoor1b09pi2j3xn")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ge_encargos_trabalhista {
  id_ge_info_empreendimento BigInt                 @id
  inss_empresa              Float?
  salario_educacao          Float?
  incra                     Float?
  pis                       Float?
  senai                     Float?
  sesi                      Float?
  sebrae                    Float?
  seguro_acidentes          Float?
  fgts                      Float?
  repouso_semanal           Float?
  feriados                  Float?
  ferias_regulares          Float?
  auxilio_acidentes         Float?
  auxilio_enfermidade       Float?
  licenca_paternidade       Float?
  licenca_maternidade       Float?
  faltas_abonadas           Float?
  decimo_terceiro_salario   Float?
  outras_dificuldades       Float?
  seguro_vida               Float?
  aviso_previo_trabalhado   Float?
  aviso_previo_indenizado   Float?
  indenizacao_dsjusta_causa Float?
  indenizacao_adicional     Float?
  vale_transporte           Float?
  cafe_manha                Float?
  taxa_almoco               Float?
  equipamentos_seguranca    Float?
  dt_update_record          DateTime               @default(now()) @db.Timestamp(6)
  ge_info_empreendimento    ge_info_empreendimento @relation(fields: [id_ge_info_empreendimento], references: [id_ge_info_empreendimento], onDelete: NoAction, onUpdate: NoAction, map: "fk_ge_encargos_trabalhista")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ge_estimativa_venda {
  id_ge_estimativa_venda    BigInt                     @id @default(autoincrement())
  id_ge_info_empreendimento BigInt
  nome_produto              String?                    @db.VarChar(100)
  unidade                   String?                    @db.VarChar(10)
  quantidade                Int?
  preco_unitario            Float?
  ativo                     Boolean?
  dt_update_record          DateTime                   @default(now()) @db.Timestamp(6)
  peso                      String?
  id_und_medida             BigInt?
  rendimento_quantidade     Int?
  ge_custo_variavel_direto  ge_custo_variavel_direto[]
  ge_info_empreendimento    ge_info_empreendimento     @relation(fields: [id_ge_info_empreendimento], references: [id_ge_info_empreendimento], onDelete: NoAction, onUpdate: NoAction, map: "fk2neu4lgxir7916bt3ensnhj6x")
  und_medida                und_medida?                @relation(fields: [id_und_medida], references: [id_und_medida], onDelete: NoAction, onUpdate: NoAction, map: "fk_ge_estimativa_venda_id_medida")
  ge_projecoes              ge_projecoes?
}

model ge_forma_posse {
  id_ge_forma_posse      BigInt                   @id(map: "pk_ge_forma_posse") @default(autoincrement())
  des_forma_posse        String                   @db.VarChar(100)
  ativo                  Boolean?
  ge_info_empreendimento ge_info_empreendimento[]
}

model ge_info_empreendimento {
  id_ge_info_empreendimento     BigInt                          @id(map: "pk_ge_info_empreendimento") @default(autoincrement())
  id_pessoa_demeter             BigInt
  descricao_empreendimento      String?                         @db.VarChar(250)
  id_ge_tipo_atividade          BigInt?
  id_ge_natureza_empreendimento BigInt?
  numero_associados             Int?
  area_atuacao                  String?                         @db.VarChar(50)
  razao_social                  String?                         @db.VarChar(250)
  cnpj                          String?                         @db.VarChar(14)
  nome_fantasia                 String?                         @db.VarChar(250)
  localizacao_ur                String?                         @db.VarChar(1)
  id_ge_forma_posse             BigInt?
  area_total_terreno            Float?
  area_und_processamento        Float?
  ativo                         Boolean?
  laudo_vistoria                String?                         @db.VarChar(30)
  tecnico_contabil              Boolean?
  tecnico_producao              String?                         @db.VarChar(15)
  data_empreendimento           DateTime?                       @db.Date
  dt_update_record              DateTime                        @default(now()) @db.Timestamp(6)
  numero_demais_associados      Int?
  id_ge_alvara_sanitario        BigInt?
  geo_ponto                     Unsupported("geometry")?
  geo_ponto_texto               String?                         @db.VarChar(255)
  cnae                          String?                         @db.VarChar(20)
  ind_entrega_croqui            Boolean?                        @default(false)
  ge_anexo                      ge_anexo[]
  ge_capital_giro_compras       ge_capital_giro_compras[]
  ge_capital_giro_estoques      ge_capital_giro_estoques?
  ge_capital_giro_vendas        ge_capital_giro_vendas[]
  ge_custo_comercializacao      ge_custo_comercializacao?
  ge_custo_fixo                 ge_custo_fixo[]
  ge_custo_fixo_trabalhista     ge_custo_fixo_trabalhista[]
  ge_custo_indireto_trabalhista ge_custo_indireto_trabalhista[]
  ge_custo_variavel_indireto    ge_custo_variavel_indireto[]
  ge_encargos_trabalhista       ge_encargos_trabalhista?
  ge_estimativa_venda           ge_estimativa_venda[]
  ge_natureza_empreendimento    ge_natureza_empreendimento?     @relation(fields: [id_ge_natureza_empreendimento], references: [id_ge_natureza_empreendimento], onDelete: NoAction, onUpdate: NoAction, map: "fk1eaaa26vot1ypamiuld1ycvao")
  ger_pessoa                    ger_pessoa                      @relation(fields: [id_pessoa_demeter], references: [id_pessoa_demeter], onDelete: NoAction, onUpdate: NoAction, map: "fk9jtkq1ewwmf6el8s5317jayiw")
  ge_alvara_sanitario           ge_alvara_sanitario?            @relation(fields: [id_ge_alvara_sanitario], references: [id_ge_alvara_sanitario], onDelete: NoAction, onUpdate: NoAction, map: "fk_ge_alvara_sanitario")
  ge_forma_posse                ge_forma_posse?                 @relation(fields: [id_ge_forma_posse], references: [id_ge_forma_posse], onDelete: NoAction, onUpdate: NoAction, map: "fk_ge_forma_posse")
  ge_tipo_atividade             ge_tipo_atividade?              @relation(fields: [id_ge_tipo_atividade], references: [id_ge_tipo_atividade], onDelete: NoAction, onUpdate: NoAction, map: "fk_ge_tipo_atividade")
  ge_investimentos_imoveis      ge_investimentos_imoveis[]
  ge_investimentos_iniciais     ge_investimentos_iniciais?
  ge_investimentos_maquinas     ge_investimentos_maquinas[]
  ge_investimentos_moveis       ge_investimentos_moveis[]
  ge_investimentos_outros       ge_investimentos_outros[]
  ge_investimentos_veiculos     ge_investimentos_veiculos[]
  ge_payback                    ge_payback?
  ge_principais_clientes        ge_principais_clientes[]
  ge_principais_concorrentes    ge_principais_concorrentes[]
  ge_principais_fornecedores    ge_principais_fornecedores[]
  ge_projecoes_resultado        ge_projecoes_resultado?
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ge_investimentos_imoveis {
  id_ge_investimentos_imoveis BigInt                 @id @default(autoincrement())
  id_ge_info_empreendimento   BigInt
  descricao                   String?                @db.VarChar(100)
  vida_util                   Int?
  valor_total                 Float?
  valor_residual              Float?
  ativo                       Boolean?
  dt_update_record            DateTime               @default(now()) @db.Timestamp(6)
  ge_info_empreendimento      ge_info_empreendimento @relation(fields: [id_ge_info_empreendimento], references: [id_ge_info_empreendimento], onDelete: NoAction, onUpdate: NoAction, map: "fk1wkas7b646mv5ynvgi4w505kq")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ge_investimentos_iniciais {
  id_ge_info_empreendimento BigInt                 @id
  depreciacao_mensal        Int?
  valor_registro_patente    Float?
  valor_registro_empresa    Float?
  valor_financiamento       Float?
  dt_update_record          DateTime               @default(now()) @db.Timestamp(6)
  ge_info_empreendimento    ge_info_empreendimento @relation(fields: [id_ge_info_empreendimento], references: [id_ge_info_empreendimento], onDelete: NoAction, onUpdate: NoAction, map: "fk_ge_investimentos_iniciais")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ge_investimentos_maquinas {
  id_ge_investimentos_maquinas BigInt                 @id @default(autoincrement())
  id_ge_info_empreendimento    BigInt
  descricao                    String?                @db.VarChar(100)
  vida_util                    Int?
  valor_total                  Float?
  valor_residual               Float?
  ativo                        Boolean?
  dt_update_record             DateTime               @default(now()) @db.Timestamp(6)
  ge_info_empreendimento       ge_info_empreendimento @relation(fields: [id_ge_info_empreendimento], references: [id_ge_info_empreendimento], onDelete: NoAction, onUpdate: NoAction, map: "fk_ge_investimentos_maquinas")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ge_investimentos_moveis {
  id_ge_investimentos_moveis BigInt                 @id @default(autoincrement())
  id_ge_info_empreendimento  BigInt
  descricao                  String?                @db.VarChar(100)
  vida_util                  Int?
  valor_total                Float?
  valor_residual             Float?
  ativo                      Boolean?
  dt_update_record           DateTime               @default(now()) @db.Timestamp(6)
  ge_info_empreendimento     ge_info_empreendimento @relation(fields: [id_ge_info_empreendimento], references: [id_ge_info_empreendimento], onDelete: NoAction, onUpdate: NoAction, map: "fk_ge_investimentos_moveis")
}

model ge_investimentos_outros {
  id_ge_investimentos_outros BigInt                 @id @default(autoincrement())
  id_ge_info_empreendimento  BigInt
  descricao                  String?                @db.VarChar(100)
  vida_util                  Int?
  valor_total                Float?
  valor_residual             Float?
  ativo                      Boolean?
  dt_update_record           DateTime               @default(now()) @db.Timestamp(6)
  ge_info_empreendimento     ge_info_empreendimento @relation(fields: [id_ge_info_empreendimento], references: [id_ge_info_empreendimento], onDelete: NoAction, onUpdate: NoAction, map: "fk_ge_investimentos_moveis")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ge_investimentos_veiculos {
  id_ge_investimentos_veiculos BigInt                 @id @default(autoincrement())
  id_ge_info_empreendimento    BigInt
  descricao                    String?                @db.VarChar(100)
  vida_util                    Int?
  valor_total                  Float?
  valor_residual               Float?
  ativo                        Boolean?
  dt_update_record             DateTime               @default(now()) @db.Timestamp(6)
  ge_info_empreendimento       ge_info_empreendimento @relation(fields: [id_ge_info_empreendimento], references: [id_ge_info_empreendimento], onDelete: NoAction, onUpdate: NoAction, map: "fk6qks0q9gtcf04okcfb86qjx9m")
}

model ge_natureza_empreendimento {
  id_ge_natureza_empreendimento BigInt                   @id(map: "pk_ge_natureza_empreendimento") @default(autoincrement())
  des_natureza_empreendimento   String                   @db.VarChar(100)
  ativo                         Boolean?
  ge_info_empreendimento        ge_info_empreendimento[]
}

model ge_origem_agricola {
  id_ge_origem_agricola      BigInt                       @id(map: "pk_id_ge_origem_agricola") @default(autoincrement())
  descricao_origem_agricola  String                       @db.VarChar(100)
  dt_update_record           DateTime                     @default(now()) @db.Timestamp(6)
  ge_principais_fornecedores ge_principais_fornecedores[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ge_payback {
  id_ge_info_empreendimento BigInt                 @id
  taxa_desconto             Float?
  dt_update_record          DateTime               @default(now()) @db.Timestamp(6)
  ge_info_empreendimento    ge_info_empreendimento @relation(fields: [id_ge_info_empreendimento], references: [id_ge_info_empreendimento], onDelete: NoAction, onUpdate: NoAction, map: "fk54tlcfu15rhynf0hduh955mms")
}

model ge_principais_clientes {
  id_ge_principais_clientes     BigInt                     @id(map: "pk_ge_principais_clientes") @default(autoincrement())
  id_ge_info_empreendimento     BigInt
  id_ge_principais_clientes_tab BigInt
  ativo                         Boolean?
  ge_info_empreendimento        ge_info_empreendimento     @relation(fields: [id_ge_info_empreendimento], references: [id_ge_info_empreendimento], onDelete: NoAction, onUpdate: NoAction, map: "fk25hvi120kdcf3y4ae9caq6bjb")
  ge_principais_clientes_tab    ge_principais_clientes_tab @relation(fields: [id_ge_principais_clientes_tab], references: [id_ge_principais_clientes_tab], onDelete: NoAction, onUpdate: NoAction, map: "fk_ge_principais_clientes_tab")
}

model ge_principais_clientes_tab {
  id_ge_principais_clientes_tab BigInt                   @id(map: "pk_ge_principais_clientes_tab") @default(autoincrement())
  des_principais_clientes       String                   @db.VarChar(100)
  ativo                         Boolean?
  ge_principais_clientes        ge_principais_clientes[]
}

model ge_principais_concorrentes {
  id_ge_principais_concorrentes     BigInt                         @id(map: "pk_ge_principais_concorrentes") @default(autoincrement())
  id_ge_info_empreendimento         BigInt
  id_ge_principais_concorrentes_tab BigInt
  ativo                             Boolean?
  ge_info_empreendimento            ge_info_empreendimento         @relation(fields: [id_ge_info_empreendimento], references: [id_ge_info_empreendimento], onDelete: NoAction, onUpdate: NoAction, map: "fk_ge_principais_concorrentes")
  ge_principais_concorrentes_tab    ge_principais_concorrentes_tab @relation(fields: [id_ge_principais_concorrentes_tab], references: [id_ge_principais_concorrentes_tab], onDelete: NoAction, onUpdate: NoAction, map: "fk_ge_principais_concorrentes_tab")
}

model ge_principais_concorrentes_tab {
  id_ge_principais_concorrentes_tab BigInt                       @id(map: "pk_ge_principais_concorrentes_tab") @default(autoincrement())
  des_principais_concorrentes       String                       @db.VarChar(100)
  ativo                             Boolean?
  ge_principais_concorrentes        ge_principais_concorrentes[]
}

model ge_principais_fornecedores {
  id_ge_principais_fornecedores     BigInt                          @id(map: "pk_ge_principais_fornecedores") @default(autoincrement())
  id_ge_info_empreendimento         BigInt
  id_ge_principais_fornecedores_tab BigInt?
  ativo                             Boolean?
  id_ge_origem_agricola             BigInt?
  ge_info_empreendimento            ge_info_empreendimento          @relation(fields: [id_ge_info_empreendimento], references: [id_ge_info_empreendimento], onDelete: NoAction, onUpdate: NoAction, map: "fk2pq0p7qagwi2epqwg8sesns1s")
  ge_principais_fornecedores_tab    ge_principais_fornecedores_tab? @relation(fields: [id_ge_principais_fornecedores_tab], references: [id_ge_principais_fornecedores_tab], onDelete: NoAction, onUpdate: NoAction, map: "fk2prc5dpu9srkrbxsfpf133w3d")
  ge_origem_agricola                ge_origem_agricola?             @relation(fields: [id_ge_origem_agricola], references: [id_ge_origem_agricola], onDelete: NoAction, onUpdate: NoAction, map: "fk7kr3eqvcp37ue1beju75gmv8m")
}

model ge_principais_fornecedores_tab {
  id_ge_principais_fornecedores_tab BigInt                       @id(map: "pk_ge_principais_fornecedores_tab") @default(autoincrement())
  des_principais_fornecedores       String                       @db.VarChar(100)
  ativo                             Boolean?
  ge_principais_fornecedores        ge_principais_fornecedores[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ge_projecoes {
  id_ge_estimativa_venda BigInt              @id
  quantidade_vendida     Int?
  dt_update_record       DateTime            @default(now()) @db.Timestamp(6)
  ge_estimativa_venda    ge_estimativa_venda @relation(fields: [id_ge_estimativa_venda], references: [id_ge_estimativa_venda], onDelete: NoAction, onUpdate: NoAction, map: "fk1fkfroxh7k4j1woh09d7d3f69")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ge_projecoes_resultado {
  id_ge_info_empreendimento BigInt                 @id
  analise_projecao          Json?                  @db.Json
  projecao_itens            Json?                  @db.Json
  dt_update_record          DateTime               @default(now()) @db.Timestamp(6)
  analise_viabilidade       Json?                  @db.Json
  analise_itens             Json?                  @db.Json
  ge_info_empreendimento    ge_info_empreendimento @relation(fields: [id_ge_info_empreendimento], references: [id_ge_info_empreendimento], onDelete: NoAction, onUpdate: NoAction, map: "fk_ge_projecoes_resultado")
}

model ge_tipo_atividade {
  id_ge_tipo_atividade   BigInt                   @id(map: "pk_ge_tipo_atividade") @default(autoincrement())
  des_tipo_atividade     String                   @db.VarChar(100)
  ativo                  Boolean?
  ge_info_empreendimento ge_info_empreendimento[]
}

model ger_cargo {
  id_cargo         String    @id @db.Char(4)
  nm_cargo         String    @db.VarChar(100)
  dt_update_record DateTime  @db.Timestamp(6)
  usuario          usuario[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ger_cat_pessoa {
  id_cat_pessoa                Int                            @id @db.SmallInt
  ds_cat_pessoa                String?                        @unique(map: "ger_cat_pessoa_idx1") @db.VarChar(80)
  sn_spa                       Int?                           @default(0) @db.SmallInt
  dt_update_record             DateTime                       @db.Timestamp(6)
  sn_meta_estrategica          Int?                           @db.SmallInt
  ger_pes_cat_ramo_relacao     ger_pes_cat_ramo_relacao[]
  spa_meta_categoria_municipio spa_meta_categoria_municipio[]
  sub_categoria_pessoa         sub_categoria_pessoa[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ger_end_pessoa {
  id_end_pessoa          String?             @db.Char(36)
  id_end_pessoa_demeter  Int                 @id @default(autoincrement())
  tp_endereco            Int                 @db.SmallInt
  fk_tpo_logradouro      Int?
  ds_logradouro          String?             @db.VarChar(100)
  nr_logradouro          String?             @db.VarChar(15)
  ds_complemento         String?             @db.VarChar(80)
  nm_bairro              String?             @db.VarChar(80)
  nr_cep                 String?             @db.VarChar(8)
  fk_municipio           Int
  sn_end_principal       Int?                @db.SmallInt
  sn_exclusao            Int?                @db.SmallInt
  sn_end_correspondencia Int?                @db.SmallInt
  id_und_empresa         String?             @db.Char(5)
  fk_pessoa              BigInt
  dt_update_record       DateTime            @db.Timestamp(6)
  id_sincronismo         String?             @default(dbgenerated("(uuid_generate_v4())::character varying(36)")) @db.VarChar(36)
  id_sincronismo_cliente String?             @db.VarChar(36)
  fk_distrito            Int?
  ger_und_empresa        ger_und_empresa?    @relation(fields: [id_und_empresa], references: [id_und_empresa], onDelete: NoAction, onUpdate: NoAction, map: "fk3jdfinhhariwaa29iuwlwbvr3")
  sep_tpo_logradouro     sep_tpo_logradouro? @relation(fields: [fk_tpo_logradouro], references: [id_tpo_logradouro], onDelete: NoAction, onUpdate: NoAction, map: "fk3vsl5ywab2vwvw0leueb020k7")
  sep_distrito           sep_distrito?       @relation(fields: [fk_distrito], references: [id_distrito], onDelete: NoAction, onUpdate: NoAction, map: "fk6xgkp8e153m9sm20s8m2p631x")
  ger_pessoa             ger_pessoa          @relation(fields: [fk_pessoa], references: [id_pessoa_demeter], onDelete: Cascade, map: "fk_ger_end_pessoa_1")
  sep_municipio          sep_municipio       @relation(fields: [fk_municipio], references: [id_municipio], onDelete: NoAction, map: "fk_ger_end_pessoa_2")

  @@index([fk_pessoa])
  @@index([id_und_empresa])
}

model ger_enum_descricao {
  tipo        String  @db.VarChar(64)
  id          Int
  descricao   String? @db.VarChar(256)
  id_contrato Int     @db.SmallInt

  @@id([id_contrato, tipo, id], map: "ger_enum_descricao_pk")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model ger_enum_descricao_salva {
  tipo      String? @db.VarChar(64)
  id        Int?
  descricao String? @db.VarChar(256)

  @@ignore
}

model ger_grupo_produto {
  id_grupo_produto    Int              @id(map: "pk_ger_grupo_produto")
  cd_grupo            String?          @db.Char(4)
  nm_grupo            String?          @db.VarChar(40)
  dt_update_record    DateTime?        @db.Timestamp(6)
  sn_pcr              Int              @db.SmallInt
  tp_grupo_geral      Int?             @db.SmallInt
  sn_evolucao_rebanho Int?             @db.SmallInt
  sn_agricola         Int?             @db.SmallInt
  ger_produto         ger_produto[]
  mbr_item_custo      mbr_item_custo[]
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model ger_municipio_ensino {
  id_municipio_ensino Int?
  fk_municipio        Int?
  fk_regional_ensino  Int?

  @@index([id_municipio_ensino], map: "idx_ger_municipio_ensino_lookup")
  @@ignore
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ger_pes_cat_ramo_relacao {
  id_pes_cat_ramo_relacao_demeter Int              @id @default(autoincrement())
  id_pes_cat_ramo_relacao         String?          @db.Char(36)
  fk_pessoa                       Int
  fk_cat_pessoa                   Int              @db.SmallInt
  id_und_empresa                  String?          @db.Char(5)
  dt_update_record                DateTime         @db.Timestamp(6)
  id_sincronismo                  String?          @default(dbgenerated("(uuid_generate_v4())::character varying(36)")) @db.VarChar(36)
  id_sincronismo_cliente          String?          @db.VarChar(36)
  ger_cat_pessoa                  ger_cat_pessoa   @relation(fields: [fk_cat_pessoa], references: [id_cat_pessoa], onDelete: NoAction, onUpdate: NoAction, map: "fk4664xhfl2h04xy6asxgohm1dy")
  ger_und_empresa                 ger_und_empresa? @relation(fields: [id_und_empresa], references: [id_und_empresa], onDelete: NoAction, onUpdate: NoAction, map: "fk_ger_cat_ger_und_empresa")
  ger_pessoa                      ger_pessoa       @relation(fields: [fk_pessoa], references: [id_pessoa_demeter], onDelete: Cascade, map: "fk_ger_pes_cat_ramo_relacao_1")

  @@unique([fk_pessoa, fk_cat_pessoa], map: "fk_pessoa_ger_cat_pessoa")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ger_pessoa {
  id_pessoa                                                                        String?                          @db.Char(36)
  id_pessoa_demeter                                                                BigInt                           @id @default(autoincrement())
  nm_pessoa                                                                        String?                          @db.VarChar(100)
  ds_apelido                                                                       String?                          @db.VarChar(80)
  sn_pronaf                                                                        Int?                             @db.SmallInt
  sn_ativo                                                                         Int                              @default(1) @db.SmallInt
  tp_sexo                                                                          String?                          @db.Char(1)
  nr_cpf_cnpj                                                                      String?                          @unique(map: "uk_ger_pessoa_nr_cpf_cnpj") @db.VarChar(14)
  dt_nascimento                                                                    DateTime?                        @db.Date
  nr_identidade                                                                    String?                          @db.VarChar(15)
  ds_orgao_expedidor                                                               String?                          @db.VarChar(10)
  fk_uf_emissor                                                                    Int?
  tp_desativacao                                                                   Int?                             @db.SmallInt
  dt_desativacao                                                                   DateTime?                        @db.Timestamp(6)
  nm_nacionalidade                                                                 String?                          @db.VarChar(100)
  fk_est_civil                                                                     Int?
  nm_mae                                                                           String?                          @db.VarChar(100)
  nm_pai                                                                           String?                          @db.VarChar(100)
  nm_profissao                                                                     String?                          @db.VarChar(100)
  nr_ins_produtor_rural                                                            String?                          @db.VarChar(40)
  dap                                                                              String?                          @db.VarChar(40)
  tp_pessoa                                                                        String?                          @db.Char(1)
  id_und_empresa                                                                   String?                          @db.Char(5)
  sn_principal_provedor                                                            Int?                             @db.SmallInt
  ds_email                                                                         String?                          @db.VarChar(80)
  dt_update_record                                                                 DateTime                         @db.Timestamp(6)
  id_sincronismo                                                                   String?                          @default(dbgenerated("(uuid_generate_v4())::character varying(36)")) @db.VarChar
  sn_ctd                                                                           Int?
  caf                                                                              String?                          @db.VarChar(24)
  sn_plantao_tecnico                                                               Int?                             @db.SmallInt
  ds_nome_rio                                                                      String?                          @db.VarChar(80)
  loja_e_do_campo                                                                  String?                          @db.VarChar(100)
  as_analise                                                                       as_analise[]
  at_cli_atend_prop                                                                at_cli_atend_prop[]
  at_prf_see                                                                       at_prf_see[]
  bp_associacao_bp_associacao_id_pessoa_demeter_associacaoToger_pessoa             bp_associacao[]                  @relation("bp_associacao_id_pessoa_demeter_associacaoToger_pessoa")
  bp_associacao_bp_associacao_id_pessoa_demeter_associadoToger_pessoa              bp_associacao[]                  @relation("bp_associacao_id_pessoa_demeter_associadoToger_pessoa")
  bp_atestado                                                                      bp_atestado[]
  bp_atestado_pessoa                                                               bp_atestado_pessoa[]
  bp_cooperativa_bp_cooperativa_id_pessoa_demeter_cooperadoToger_pessoa            bp_cooperativa[]                 @relation("bp_cooperativa_id_pessoa_demeter_cooperadoToger_pessoa")
  bp_cooperativa_bp_cooperativa_id_pessoa_demeter_cooperativaToger_pessoa          bp_cooperativa[]                 @relation("bp_cooperativa_id_pessoa_demeter_cooperativaToger_pessoa")
  bp_grupo_produtor_bp_grupo_produtor_id_pessoa_demeter_participanteToger_pessoa   bp_grupo_produtor[]              @relation("bp_grupo_produtor_id_pessoa_demeter_participanteToger_pessoa")
  bp_grupo_produtor_bp_grupo_produtor_id_pessoa_demeter_grupo_produtorToger_pessoa bp_grupo_produtor[]              @relation("bp_grupo_produtor_id_pessoa_demeter_grupo_produtorToger_pessoa")
  contato_pessoa                                                                   contato_pessoa[]
  cp_custo_individual_agricola                                                     cp_custo_individual_agricola[]
  cp_custo_individual_pecuaria                                                     cp_custo_individual_pecuaria[]
  cr_custeio_agricola_proponente                                                   cr_custeio_agricola_proponente[]
  cr_custeio_pecuaria_proponente                                                   cr_custeio_pecuaria_proponente[]
  cr_imoveis_agricola                                                              cr_imoveis_agricola[]
  cr_imoveis_pecuaria                                                              cr_imoveis_pecuaria[]
  cr_investimento_proponente                                                       cr_investimento_proponente[]
  cr_propriedade_contrato_cr_propriedade_contrato_id_pessoa_demeterToger_pessoa    cr_propriedade_contrato[]        @relation("cr_propriedade_contrato_id_pessoa_demeterToger_pessoa")
  cr_propriedade_contrato_cr_propriedade_contrato_id_cr_investimentoToger_pessoa   cr_propriedade_contrato[]        @relation("cr_propriedade_contrato_id_cr_investimentoToger_pessoa")
  ge_info_empreendimento                                                           ge_info_empreendimento[]
  ger_end_pessoa                                                                   ger_end_pessoa[]
  ger_pes_cat_ramo_relacao                                                         ger_pes_cat_ramo_relacao[]
  sep_estado                                                                       sep_estado?                      @relation(fields: [fk_uf_emissor], references: [id_estado], onDelete: NoAction, map: "fk_ger_pessoa_1")
  dap_tipo_item                                                                    dap_tipo_item?                   @relation(fields: [fk_est_civil], references: [id_tipo_item], onDelete: NoAction, map: "fk_ger_pessoa_2")
  ger_und_empresa                                                                  ger_und_empresa?                 @relation(fields: [id_und_empresa], references: [id_und_empresa], onDelete: NoAction, onUpdate: NoAction, map: "fk_ger_pessoa_ger_und_empresa")
  in_inventario                                                                    in_inventario[]
  is_quest                                                                         is_quest[]
  mp_atendimento_minaspec                                                          mp_atendimento_minaspec[]
  pl_propriedade_ger_pessoa                                                        pl_propriedade_ger_pessoa[]
  sub_categoria_pessoa_relacao                                                     sub_categoria_pessoa_relacao[]
  unidade_familiar_unidade_familiar_id_ger_pessoaToger_pessoa                      unidade_familiar[]               @relation("unidade_familiar_id_ger_pessoaToger_pessoa")
  unidade_familiar_unidade_familiar_id_ger_pessoa_provedorToger_pessoa             unidade_familiar[]               @relation("unidade_familiar_id_ger_pessoa_provedorToger_pessoa")

  @@index([dt_update_record], map: "ix_ger_pessoa_dt_update_record")
  @@index([nm_pessoa], map: "ix_ger_pessoa_nm_pessoa")
  @@index([nr_identidade], map: "ix_ger_pessoa_nr_identidade")
}

model ger_polo {
  id_polo          Int               @id
  nm_polo          String?           @db.VarChar(100)
  dt_update_record DateTime          @db.Timestamp(6)
  ger_und_empresa  ger_und_empresa[]
}

model ger_produto {
  id_produto             Int                      @id(map: "pk_ger_produto")
  cd_produto             String?                  @db.Char(4)
  fk_grupo               Int
  nm_produto             String?                  @db.VarChar(100)
  ds_unidade             String?                  @db.VarChar(30)
  qt_ciclo               Int?                     @db.SmallInt
  qt_pm_alta_kg          Decimal?                 @db.Decimal(18, 2)
  qt_pm_alta_sc          Decimal?                 @db.Decimal(18, 2)
  qt_pm_media_kg         Decimal?                 @db.Decimal(18, 2)
  qt_pm_media_sc         Decimal?                 @db.Decimal(18, 2)
  qt_pm_baixa_kg         Decimal?                 @db.Decimal(18, 2)
  qt_pm_baixa_sc         Decimal?                 @db.Decimal(18, 2)
  qt_pm_plantio_kg       Decimal?                 @db.Decimal(18, 2)
  qt_pm_plnatio_sc       Decimal?                 @db.Decimal(18, 2)
  dt_update_record       DateTime?                @db.Timestamp(6)
  sn_custo_producao      Int?                     @db.SmallInt
  nr_cod_cultura         Int?                     @db.SmallInt
  sn_safra               Int?                     @db.SmallInt
  tp_grupo_safra         Int?                     @db.SmallInt
  nr_ciclo_ini           Int?                     @db.SmallInt
  nr_ciclo_fim           Int?                     @db.SmallInt
  cd_produto_ceasa       String?                  @db.VarChar(20)
  sn_precos              Int?                     @db.SmallInt
  ds_und_area            String?                  @db.VarChar(50)
  ds_und_produtividade   String?                  @db.VarChar(50)
  ds_und_producao        String?                  @db.VarChar(50)
  ger_grupo_produto      ger_grupo_produto        @relation(fields: [fk_grupo], references: [id_grupo_produto], onDelete: NoAction, map: "fk_ger_produto_1")
  mbr_mercado            mbr_mercado[]
  mbr_produto_item_custo mbr_produto_item_custo[]
  spa_atendimento        spa_atendimento[]
}

model ger_produto_pecuaria {
  id_ger_produto_pecuaria BigInt   @id(map: "pk_ger_produto_pecuaria") @default(autoincrement())
  nome_produto            String   @db.VarChar(125)
  ds_und_area             String?  @db.VarChar(50)
  ds_und_produtividade    String?  @db.VarChar(50)
  ds_und_producao         String?  @db.VarChar(50)
  ativo                   Boolean  @default(true)
  date_update_record      DateTime @default(now()) @db.Timestamp(6)
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model ger_regional_ensino {
  id_regional_ensino Int?
  nm_regional_ensino String? @db.VarChar(100)

  @@index([id_regional_ensino], map: "idx_ger_regional_ensino_lookup")
  @@ignore
}

model ger_tipo_unidade {
  id_tipo_unidade  String            @id @db.Char(1)
  nm_tipo_unidade  String            @db.VarChar(40)
  dt_update_record DateTime          @db.Timestamp(6)
  ger_und_empresa  ger_und_empresa[]
}

model ger_und_empresa {
  id_und_empresa                                                                                  String                         @id @db.Char(5)
  nm_und_empresa                                                                                  String?                        @db.VarChar(100)
  fk_und_empresa                                                                                  String?                        @db.Char(5)
  nr_cgc                                                                                          String?                        @db.VarChar(14)
  sn_esc_central                                                                                  Int?                           @db.SmallInt
  sg_und_empresa                                                                                  String?                        @db.VarChar(10)
  fk_municipio                                                                                    Int?
  fk_tipo_unidade                                                                                 String?                        @db.Char(1)
  fk_tpo_logradouro                                                                               Int?                           @db.SmallInt
  ds_logradouro                                                                                   String?                        @db.VarChar(100)
  nr_logradouro                                                                                   String?                        @db.VarChar(15)
  ds_complemento                                                                                  String?                        @db.VarChar(20)
  nm_bairro                                                                                       String?                        @db.VarChar(80)
  nr_telefone1                                                                                    String?                        @db.VarChar(15)
  nr_telefone2                                                                                    String?                        @db.VarChar(15)
  ds_email                                                                                        String?                        @db.VarChar(80)
  nr_cep                                                                                          String?                        @db.VarChar(12)
  sn_ativa                                                                                        Int                            @default(1) @db.SmallInt
  fk_polo                                                                                         Int?
  dt_update_record                                                                                DateTime                       @db.Timestamp(6)
  sn_status_uregi                                                                                 Int?                           @db.SmallInt
  sn_visualizar                                                                                   Int                            @default(1) @db.SmallInt
  sn_atendimento                                                                                  Boolean?
  sn_convenio                                                                                     Int?                           @db.SmallInt
  sn_mp                                                                                           Int?                           @db.SmallInt
  at_atendimento                                                                                  at_atendimento[]
  at_grupo_unidade_empresa                                                                        at_grupo_unidade_empresa[]
  bp_atestado                                                                                     bp_atestado[]
  contato_pessoa                                                                                  contato_pessoa[]
  cp_empreendimento_agricola                                                                      cp_empreendimento_agricola[]
  cp_empreendimento_pecuaria                                                                      cp_empreendimento_pecuaria[]
  ger_end_pessoa                                                                                  ger_end_pessoa[]
  ger_pes_cat_ramo_relacao                                                                        ger_pes_cat_ramo_relacao[]
  ger_pessoa                                                                                      ger_pessoa[]
  ger_und_empresa                                                                                 ger_und_empresa?               @relation("ger_und_empresaToger_und_empresa", fields: [fk_und_empresa], references: [id_und_empresa], onDelete: NoAction, map: "fk_ger_und_empresa_1")
  other_ger_und_empresa                                                                           ger_und_empresa[]              @relation("ger_und_empresaToger_und_empresa")
  sep_municipio                                                                                   sep_municipio?                 @relation(fields: [fk_municipio], references: [id_municipio], onDelete: NoAction, map: "fk_ger_und_empresa_2")
  ger_tipo_unidade                                                                                ger_tipo_unidade?              @relation(fields: [fk_tipo_unidade], references: [id_tipo_unidade], onDelete: NoAction, map: "fk_ger_und_empresa_3")
  sep_tpo_logradouro                                                                              sep_tpo_logradouro?            @relation(fields: [fk_tpo_logradouro], references: [id_tpo_logradouro], onDelete: NoAction, map: "fk_ger_und_empresa_4")
  ger_polo                                                                                        ger_polo?                      @relation(fields: [fk_polo], references: [id_polo], onDelete: NoAction, map: "fk_ger_und_empresa_5")
  gm_meta_gm_meta_id_und_empresaToger_und_empresa                                                 gm_meta[]                      @relation("gm_meta_id_und_empresaToger_und_empresa")
  gm_meta_gm_meta_id_und_empresa_eslocToger_und_empresa                                           gm_meta[]                      @relation("gm_meta_id_und_empresa_eslocToger_und_empresa")
  mbr_custo                                                                                       mbr_custo[]
  mbr_mercado                                                                                     mbr_mercado[]
  pl_propriedade                                                                                  pl_propriedade[]
  pl_propriedade_ger_pessoa                                                                       pl_propriedade_ger_pessoa[]
  spa_meta_categoria_municipio_spa_meta_categoria_municipio_fk_und_empresa_uregiToger_und_empresa spa_meta_categoria_municipio[] @relation("spa_meta_categoria_municipio_fk_und_empresa_uregiToger_und_empresa")
  spa_meta_categoria_municipio_spa_meta_categoria_municipio_fk_und_empresaToger_und_empresa       spa_meta_categoria_municipio[] @relation("spa_meta_categoria_municipio_fk_und_empresaToger_und_empresa")
  spa_meta_chamada_publica_spa_meta_chamada_publica_fk_und_empresa_uregiToger_und_empresa         spa_meta_chamada_publica[]     @relation("spa_meta_chamada_publica_fk_und_empresa_uregiToger_und_empresa")
  spa_meta_chamada_publica_spa_meta_chamada_publica_fk_und_empresaToger_und_empresa               spa_meta_chamada_publica[]     @relation("spa_meta_chamada_publica_fk_und_empresaToger_und_empresa")
  spa_meta_indicador_spa_meta_indicador_fk_und_empresa_uregiToger_und_empresa                     spa_meta_indicador[]           @relation("spa_meta_indicador_fk_und_empresa_uregiToger_und_empresa")
  spa_meta_indicador_spa_meta_indicador_fk_und_empresaToger_und_empresa                           spa_meta_indicador[]           @relation("spa_meta_indicador_fk_und_empresaToger_und_empresa")
  sub_categoria_pessoa_relacao                                                                    sub_categoria_pessoa_relacao[]
  unidade_familiar                                                                                unidade_familiar[]
  usuario                                                                                         usuario[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model gm_meta {
  id_gm_meta                                                    BigInt           @id(map: "pk_gm_meta") @default(autoincrement())
  id_emater                                                     String?          @db.VarChar(36)
  id_und_empresa                                                String?          @db.Char(5)
  id_und_empresa_esloc                                          String?          @db.Char(5)
  nm_uregi                                                      String?          @db.VarChar(100)
  nm_esloc                                                      String?          @db.VarChar(100)
  ds_meta                                                       String?          @db.VarChar(100)
  sn_validacao                                                  String?          @db.Char(1)
  tp_grupo                                                      Int?
  nm_grupo                                                      String?          @db.VarChar(100)
  nr_ano                                                        Int?
  nr_mes                                                        Int?
  ds_observacao                                                 String?          @db.VarChar(100)
  qt_meta_mes                                                   BigInt?
  qt_pendente                                                   BigInt?
  qt_realizado                                                  BigInt?
  qt_saldo                                                      BigInt?
  qt_a_validar                                                  BigInt?
  dt_atualizacao                                                DateTime?        @db.Timestamp(6)
  dt_update_record                                              DateTime?        @db.Timestamp(6)
  ger_und_empresa_gm_meta_id_und_empresaToger_und_empresa       ger_und_empresa? @relation("gm_meta_id_und_empresaToger_und_empresa", fields: [id_und_empresa], references: [id_und_empresa], onDelete: NoAction, onUpdate: NoAction, map: "fk2faspfpj6xj8io4hiuf23xa6")
  ger_und_empresa_gm_meta_id_und_empresa_eslocToger_und_empresa ger_und_empresa? @relation("gm_meta_id_und_empresa_eslocToger_und_empresa", fields: [id_und_empresa_esloc], references: [id_und_empresa], onDelete: NoAction, onUpdate: NoAction, map: "fk_gm_meta_ger_und_empresa_esloc")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model in_grupo_inventario {
  id_in_grupo_inventario BigInt               @id(map: "pk_id_in_grupo_inventario") @default(autoincrement())
  nome                   String               @db.VarChar(60)
  dt_update_record       DateTime             @default(now()) @db.Timestamp(6)
  in_tipo_inventario     in_tipo_inventario[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model in_inventario {
  id_in_inventario                                                                     BigInt                    @id(map: "pk_id_in_inventario") @default(autoincrement())
  id_pl_propriedade                                                                    BigInt
  id_pessoa_demeter                                                                    BigInt
  ano                                                                                  Int
  ativo                                                                                Boolean                   @default(true)
  dt_update_record                                                                     DateTime                  @db.Timestamp(6)
  id_sincronismo                                                                       String?                   @default(dbgenerated("(uuid_generate_v4())::character varying(36)")) @db.VarChar(36)
  id_sincronismo_cliente                                                               String?                   @db.VarChar(36)
  id_sincronismo_propriedade                                                           String?                   @db.VarChar(36)
  id_und_empresa                                                                       String?                   @db.VarChar(5)
  pl_propriedade                                                                       pl_propriedade            @relation(fields: [id_pl_propriedade], references: [id_pl_propriedade], onDelete: NoAction, onUpdate: NoAction, map: "fk3x4csspxdngrkhjgddx757g6e")
  ger_pessoa                                                                           ger_pessoa                @relation(fields: [id_pessoa_demeter], references: [id_pessoa_demeter], onDelete: NoAction, onUpdate: NoAction, map: "fk9i3rtly1ftdru4c3hxihihiq7")
  in_item_inventario                                                                   in_item_inventario[]
  is_evolucao_patrimonial_is_evolucao_patrimonial_id_in_inventario_histToin_inventario is_evolucao_patrimonial[] @relation("is_evolucao_patrimonial_id_in_inventario_histToin_inventario")
  is_evolucao_patrimonial_is_evolucao_patrimonial_id_in_inventarioToin_inventario      is_evolucao_patrimonial[] @relation("is_evolucao_patrimonial_id_in_inventarioToin_inventario")
  mp_atendimento_minaspec                                                              mp_atendimento_minaspec[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model in_item_inventario {
  id_in_item_inventario     BigInt             @id(map: "pk_id_in_item_inventario") @default(autoincrement())
  id_in_inventario          BigInt
  id_in_tipo_inventario     BigInt
  quantidade                Int
  valor_unitario            Float
  dt_update_record          DateTime           @default(now()) @db.Timestamp(6)
  id_sincronismo            String?            @default(dbgenerated("(uuid_generate_v4())::character varying(36)")) @db.VarChar(36)
  id_sincronismo_inventario String?            @db.VarChar(36)
  id_und_empresa            String?            @db.VarChar(5)
  ativo                     Boolean            @default(true)
  investimento              Int?
  in_inventario             in_inventario      @relation(fields: [id_in_inventario], references: [id_in_inventario], onDelete: NoAction, onUpdate: NoAction, map: "fk9069oorgc0ibtfpxa69k8mkp5")
  in_tipo_inventario        in_tipo_inventario @relation(fields: [id_in_tipo_inventario], references: [id_in_tipo_inventario], onDelete: NoAction, onUpdate: NoAction, map: "fk_id_in_tipo_inventario")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model in_tipo_inventario {
  id_in_tipo_inventario  BigInt               @id(map: "pk_id_in_tipo_inventario") @default(autoincrement())
  nome                   String               @db.VarChar(60)
  id_in_grupo_inventario BigInt
  ativo                  Boolean              @default(true)
  dt_update_record       DateTime             @default(now()) @db.Timestamp(6)
  in_tipo_inventario     Int?
  investimento           Int?
  in_item_inventario     in_item_inventario[]
  in_grupo_inventario    in_grupo_inventario  @relation(fields: [id_in_grupo_inventario], references: [id_in_grupo_inventario], onDelete: NoAction, onUpdate: NoAction, map: "fk4ntxk7q3hkvnhhnq1goma8skg")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model inativa_cliente {
  id_pessoa_demeter Float?

  @@index([id_pessoa_demeter], map: "idx_inativa_cliente_lookup")
  @@ignore
}

model is_adequacao_areas_preservacao {
  id_is_adequacao_areas_preservacao BigInt   @id(map: "pk_is_adequacao_areas_preservacao") @default(autoincrement())
  id_is_isa                         BigInt
  unidade                           Decimal? @db.Decimal(10, 2)
  proporcao_conservacao             Float?
  id_sincronismo                    String?  @default(dbgenerated("(uuid_generate_v4())::character varying(36)")) @db.VarChar(36)
  id_sincronismo_isa                String?  @db.VarChar(36)
  id_und_empresa                    String?  @db.VarChar(5)
  ativo                             Boolean  @default(true)
  is_isa                            is_isa   @relation(fields: [id_is_isa], references: [id_is_isa], onDelete: NoAction, onUpdate: NoAction, map: "fk_adequacao_areas_preservacao_is_isa")
}

model is_adequacao_reserva_legal {
  id_is_adequacao_reserva_legal BigInt  @id(map: "pk_is_adequacao_reserva_legal") @default(autoincrement())
  id_is_isa                     BigInt
  area_reserva_legal            Float?
  areas_recomposicao            Float?
  id_sincronismo                String? @default(dbgenerated("(uuid_generate_v4())::character varying(36)")) @db.VarChar(36)
  id_sincronismo_isa            String? @db.VarChar(36)
  id_und_empresa                String? @db.VarChar(5)
  ativo                         Boolean @default(true)
  area_fora_imovel              Float?
  is_isa                        is_isa  @relation(fields: [id_is_isa], references: [id_is_isa], onDelete: NoAction, onUpdate: NoAction, map: "fk_adequacao_reserva_legal_is_isa")

  @@index([id_is_isa], map: "ix_reserva_legal_isa")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model is_anexo {
  id_is_anexo          BigInt    @id(map: "pk_id_is_anexo") @default(autoincrement())
  nome_arquivo         String?   @db.VarChar(50)
  mime_type            String?   @db.VarChar(50)
  id_is_quest          BigInt
  anexo_croqui         String?
  dt_update_record     DateTime? @db.Timestamp(6)
  id_sincronismo       String?   @default(dbgenerated("(uuid_generate_v4())::character varying(36)")) @db.VarChar(36)
  id_sincronismo_quest String?   @db.VarChar(36)
  id_und_empresa       String?   @db.VarChar(5)
  ativo                Boolean   @default(true)
  is_quest             is_quest  @relation(fields: [id_is_quest], references: [id_is_quest], onDelete: Cascade, onUpdate: NoAction, map: "fk_is_anexo_is_quest")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model is_app {
  id_is_app            BigInt    @default(autoincrement())
  area_total           Float?
  area_recuperar       Float?
  id_is_quest          BigInt
  dt_update_record     DateTime? @db.Timestamp(6)
  id_sincronismo       String?   @default(dbgenerated("(uuid_generate_v4())::character varying(36)")) @db.VarChar(36)
  id_sincronismo_quest String?   @db.VarChar(36)
  id_und_empresa       String?   @db.VarChar(5)
  ativo                Boolean   @default(true)
  is_quest             is_quest  @relation(fields: [id_is_quest], references: [id_is_quest], onDelete: Cascade, onUpdate: NoAction, map: "fk_is_app_is_quest")

  @@ignore
}

model is_area_processo_degradacao {
  id_is_area_processo_degradacao BigInt    @id(map: "pk_is_area_processo_degradacao") @default(autoincrement())
  id_is_isa                      BigInt
  area_ha                        Float?
  dt_update_record               DateTime? @db.Timestamp(6)
  estagio_degradacao             Int?
  tendencia_comportamento        Int?
  id_sincronismo                 String?   @default(dbgenerated("(uuid_generate_v4())::character varying(36)")) @db.VarChar(36)
  id_sincronismo_isa             String?   @db.VarChar(36)
  id_und_empresa                 String?   @db.VarChar(5)
  ativo                          Boolean   @default(true)
  is_isa                         is_isa    @relation(fields: [id_is_isa], references: [id_is_isa], onDelete: NoAction, onUpdate: NoAction, map: "fk_area_proc_degradacao_is_isa")

  @@index([id_is_isa], map: "ix_processo_degradacao_isa")
}

model is_atividade_executada {
  id_is_atividade_executada  BigInt      @id(map: "pk_is_atividade_executada") @default(autoincrement())
  id_is_isa                  BigInt
  id_as_cultura              BigInt?
  id_und_medida              BigInt?
  produtividade_media_atual  Float?
  preco_medio_venda          Float?
  produtividade_media_regiao Float?
  media_preco_regiao         Float?
  dt_update_record           DateTime?   @db.Timestamp(6)
  id_sincronismo             String?     @default(dbgenerated("(uuid_generate_v4())::character varying(36)")) @db.VarChar(36)
  id_sincronismo_isa         String?     @db.VarChar(36)
  id_und_empresa             String?     @db.VarChar(5)
  ativo                      Boolean     @default(true)
  is_isa                     is_isa      @relation(fields: [id_is_isa], references: [id_is_isa], onDelete: NoAction, onUpdate: NoAction, map: "fk6anns8rftq2i71egntcdg21sk")
  as_cultura                 as_cultura? @relation(fields: [id_as_cultura], references: [id_as_cultura], onDelete: NoAction, onUpdate: NoAction, map: "fk_id_as_cultura")
  und_medida                 und_medida? @relation(fields: [id_und_medida], references: [id_und_medida], onDelete: NoAction, onUpdate: NoAction, map: "fk_id_und_medida")
}

model is_capac_prod_solo {
  id_is_capac_prod_solo BigInt    @id(map: "pk_is_capac_prod_solo") @default(autoincrement())
  id_is_isa             BigInt
  descricao_talhao      String?   @db.VarChar(256)
  textura_solo          Float?
  mat_organica_arenosa  Float?
  mat_organica_media    Float?
  mat_organica_argilosa Float?
  mat_organica_mto_arg  Float?
  fosforo_disp_arenosa  Float?
  fosforo_disp_media    Float?
  fosforo_disp_argilosa Float?
  fosforo_disp_mto_arg  Float?
  calcio_trocavel       Float?
  magnesio_trocavel     Float?
  potassio_trocavel     Float?
  acidez_ativa          Float?
  aluminio_trocavel     Float?
  ctc_efetiva           Float?
  saturacao_base        Float?
  dt_update_record      DateTime? @db.Timestamp(6)
  id_sincronismo        String?   @default(dbgenerated("(uuid_generate_v4())::character varying(36)")) @db.VarChar(36)
  id_sincronismo_isa    String?   @db.VarChar(36)
  id_und_empresa        String?   @db.VarChar(5)
  ativo                 Boolean   @default(true)
  is_isa                is_isa    @relation(fields: [id_is_isa], references: [id_is_isa], onDelete: NoAction, onUpdate: NoAction, map: "fk_is_capac_prod_solo_is_isa")

  @@index([id_is_isa], map: "ix_capac_prod_solo")
}

model is_conservacao_estradas {
  id_is_conservacao_estradas  BigInt    @id(map: "pk_is_conservacao_estradas") @default(autoincrement())
  id_is_isa                   BigInt
  declividade_transversal     Float?
  presenca_lombadas           Float?
  presenca_caixas_infiltracao Float?
  presenca_buracos            Float?
  presenca_sulcos_erosao      Float?
  imovel_possui_ponto_critico Boolean?
  dt_update_record            DateTime? @db.Timestamp(6)
  id_sincronismo              String?   @default(dbgenerated("(uuid_generate_v4())::character varying(36)")) @db.VarChar(36)
  id_sincronismo_isa          String?   @db.VarChar(36)
  id_und_empresa              String?   @db.VarChar(5)
  ativo                       Boolean   @default(true)
  is_isa                      is_isa    @relation(fields: [id_is_isa], references: [id_is_isa], onDelete: NoAction, onUpdate: NoAction, map: "fk_is_conservacao_estradas_isa")

  @@index([id_is_isa], map: "ix_conservacao_estradas_isa")
}

model is_diversificacao_paisagem {
  id_is_diversificacao_paisagem BigInt   @id(map: "pk_is_diversificacao_paisagem") @default(autoincrement())
  id_is_isa                     BigInt
  lav_permanente_suficiente     Float?
  lav_permanente_insuficiente   Float?
  lav_temporaria_suficiente     Float?
  lav_temporaria_insuficiente   Float?
  lav_temporaria_sit_crit       Float?
  lav_permanente_sit_crit       Float?
  pastagem_suficiente           Float?
  pastagem_insuficiente         Float?
  pastagem_sit_crit             Float?
  silvicultura_suficiente       Float?
  silvicultura_insuficiente     Float?
  silvicultura_sit_crit         Float?
  alta_proporcao                Boolean?
  id_sincronismo                String?  @default(dbgenerated("(uuid_generate_v4())::character varying(36)")) @db.VarChar(36)
  id_sincronismo_isa            String?  @db.VarChar(36)
  id_und_empresa                String?  @db.VarChar(5)
  ativo                         Boolean  @default(true)
  is_isa                        is_isa   @relation(fields: [id_is_isa], references: [id_is_isa], onDelete: NoAction, onUpdate: NoAction, map: "fk83905275wc2nm2mkg93voww1o")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model is_escolaridade_curso {
  id_is_escolaridade_curso       BigInt    @id(map: "pk_is_escolaridade_curso") @default(autoincrement())
  num_integrantes_vinculo_direto Int?
  num_trabalhadores_permanentes  Int?
  qtd_menos_cinco_estudo_ivd     Int?
  qtd_menos_cinco_estudo_tp      Int?
  qtd_cinco_a_nove_estudo_ivd    Int?
  qtd_cinco_a_nove_estudo_tp     Int?
  qtd_acima_nove_estudo_ivd      Int?
  qtd_acima_nove_estudo_tp       Int?
  qtd_curso_superior_ivd         Int?
  qtd_curso_superior_tp          Int?
  qtd_capacit_curta_duracao_ivd  Int?
  qtd_capacit_curta_duracao_tp   Int?
  qtd_capacit_longa_duracao_ivd  Int?
  qtd_capacit_longa_duracao_tp   Int?
  num_depend_integrantes         Int?
  num_depend_residentes          Int?
  freq_ensino_depend_integrantes Int?
  freq_ensino_depend_residentes  Int?
  id_is_isa                      BigInt
  resultado                      Float?
  dt_update_record               DateTime? @db.Timestamp(6)
  id_sincronismo                 String?   @default(dbgenerated("(uuid_generate_v4())::character varying(36)")) @db.VarChar(36)
  id_sincronismo_isa             String?   @db.VarChar(36)
  id_und_empresa                 String?   @db.VarChar(5)
  ativo                          Boolean   @default(true)
  is_isa                         is_isa    @relation(fields: [id_is_isa], references: [id_is_isa], onDelete: NoAction, onUpdate: NoAction, map: "fk6gkwvhdkt9y6dabanr62v6tva")

  @@index([id_is_isa], map: "ix_escolaridade_curso_isa")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model is_evolucao_patrimonial {
  id_is_evolucao_patrimonial                                                 BigInt         @id(map: "pk_is_evolucao_patrimonial") @default(autoincrement())
  id_is_isa                                                                  BigInt
  irrigacao_inundacao                                                        Float?
  irrigacao_sulcos                                                           Float?
  irrigacao_aspersao                                                         Float?
  irrigacao_pivo_central                                                     Float?
  irrigacao_gotejamento                                                      Float?
  ocupacao_lavouras_permanentes                                              Float?
  ocupacao_lavouras_temporarias                                              Float?
  ocupacao_pastagens                                                         Float?
  ocupacao_silvicultura                                                      Float?
  ocupacao_area_nao_agricola                                                 Float?
  ocupacao_pousio                                                            Float?
  ocupacao_cursos_dagua                                                      Float?
  ocupacao_vegetacao_nativa                                                  Float?
  ocupacao_inaproveitavel                                                    Float?
  valor_terra                                                                Float?
  id_in_inventario                                                           BigInt?
  id_in_inventario_hist                                                      BigInt?
  id_sincronismo                                                             String?        @default(dbgenerated("(uuid_generate_v4())::character varying(36)")) @db.VarChar(36)
  id_sincronismo_isa                                                         String?        @db.VarChar(36)
  id_und_empresa                                                             String?        @db.VarChar(5)
  ativo                                                                      Boolean        @default(true)
  id_sincronismo_inventario                                                  String?        @db.VarChar(36)
  id_sincronismo_inventario_hist                                             String?        @db.VarChar(36)
  dt_update_record                                                           DateTime       @default(now()) @db.Timestamp(6)
  in_inventario_is_evolucao_patrimonial_id_in_inventario_histToin_inventario in_inventario? @relation("is_evolucao_patrimonial_id_in_inventario_histToin_inventario", fields: [id_in_inventario_hist], references: [id_in_inventario], onDelete: NoAction, onUpdate: NoAction, map: "fk7difw8xymujj7beni3f488v5a")
  in_inventario_is_evolucao_patrimonial_id_in_inventarioToin_inventario      in_inventario? @relation("is_evolucao_patrimonial_id_in_inventarioToin_inventario", fields: [id_in_inventario], references: [id_in_inventario], onDelete: NoAction, onUpdate: NoAction, map: "fk_id_in_inventario")
  is_isa                                                                     is_isa         @relation(fields: [id_is_isa], references: [id_is_isa], onDelete: NoAction, onUpdate: NoAction, map: "fk_is_evolucao_patrimonial_isa")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model is_fator_pond_indicador {
  id_is_fator_pond_indicador BigInt    @id(map: "pk_is_fator_pond_indicador") @default(autoincrement())
  item                       Int
  subitem                    Int
  fator_ponderacao           Float
  dt_update_record           DateTime? @db.Timestamp(6)
  ativo                      Boolean   @default(true)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model is_fonte_agua {
  id_is_fonte_agua     BigInt    @id(map: "pk_id_is_fonte_agua") @default(autoincrement())
  superficial          Boolean?
  subterranea          Boolean?
  id_is_quest          BigInt?
  dt_update_record     DateTime? @db.Timestamp(6)
  id_sincronismo       String?   @default(dbgenerated("(uuid_generate_v4())::character varying(36)")) @db.VarChar(36)
  id_sincronismo_quest String?   @db.VarChar(36)
  id_und_empresa       String?   @db.VarChar(5)
  ativo                Boolean   @default(true)
  is_quest             is_quest? @relation(fields: [id_is_quest], references: [id_is_quest], onDelete: Cascade, onUpdate: NoAction, map: "fk_is_fonte_agua_is_quest")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model is_gerencia_resid_efluentes {
  id_is_gerencia_resid_efluentes BigInt    @id(map: "pk_is_gerencia_resid_efluentes") @default(autoincrement())
  id_is_isa                      BigInt
  esg_aus_estrut_coleta_tratam   Boolean?
  esg_fossa_rudimentar_negra     Boolean?
  esg_fossa_indicada_sem_manut   Boolean?
  esg_fossa_indicada_com_manut   Boolean?
  esg_fossa_biodigestor          Boolean?
  lixo_descartado_local_inap     Boolean?
  lixo_enterrado_local_inap      Boolean?
  lixo_enterrado_local_aprop     Boolean?
  lixo_levado_produtor           Boolean?
  lixo_coletado                  Boolean?
  possui_ponto_critico_resid     Boolean?
  reaprov_resid_solidos          Float?
  trat_adeq_efluentes_liquidos   Float?
  trat_adeq_efluentes_gasosos    Float?
  dt_update_record               DateTime? @db.Timestamp(6)
  id_sincronismo                 String?   @default(dbgenerated("(uuid_generate_v4())::character varying(36)")) @db.VarChar(36)
  id_sincronismo_isa             String?   @db.VarChar(36)
  id_und_empresa                 String?   @db.VarChar(5)
  ativo                          Boolean   @default(true)
  is_isa                         is_isa    @relation(fields: [id_is_isa], references: [id_is_isa], onDelete: NoAction, onUpdate: NoAction, map: "fk_is_ger_resid_efluent_is_isa")

  @@index([id_is_isa], map: "ix_gerencia_efluentes_isa")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model is_gestao_empreendimento {
  id_is_gestao_empreendimento BigInt    @id(map: "pk_is_gestao_empreendimento") @default(autoincrement())
  id_is_isa                   BigInt
  num_fluxo_caixa             Int?
  num_custo_producao          Int?
  num_assistencia_tecnica     Int?
  num_forma_participacao      Int?
  num_regularizacao_ambiental Int?
  num_credito_investimento    Int?
  num_credito_custeio         Int?
  num_credito_comercial       Int?
  dt_update_record            DateTime? @db.Timestamp(6)
  id_sincronismo              String?   @default(dbgenerated("(uuid_generate_v4())::character varying(36)")) @db.VarChar(36)
  id_sincronismo_isa          String?   @db.VarChar(36)
  id_und_empresa              String?   @db.VarChar(5)
  ativo                       Boolean   @default(true)
  is_isa                      is_isa    @relation(fields: [id_is_isa], references: [id_is_isa], onDelete: NoAction, onUpdate: NoAction, map: "fk_is_gestao_empreend_is_isa")

  @@index([id_is_isa], map: "ix_gestao_empreendimento_isa")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model is_gestao_informacao {
  id_is_gestao_informacao       BigInt    @id(map: "pk_is_gestao_informacao") @default(autoincrement())
  id_is_isa                     BigInt
  informacao_comercializacao    Int?
  gera_produtos_certificados    Int?
  adocao_tecnicas_inovadoras    Int?
  descricao_tecnicas_inovadoras String?   @db.VarChar(100)
  capacidade_inovacao_lideranca Int?
  descricao_capacidade_inovacao String?   @db.VarChar(100)
  dt_update_record              DateTime? @db.Timestamp(6)
  id_sincronismo                String?   @default(dbgenerated("(uuid_generate_v4())::character varying(36)")) @db.VarChar(36)
  id_sincronismo_isa            String?   @db.VarChar(36)
  id_und_empresa                String?   @db.VarChar(5)
  ativo                         Boolean   @default(true)
  is_isa                        is_isa    @relation(fields: [id_is_isa], references: [id_is_isa], onDelete: NoAction, onUpdate: NoAction, map: "fk4dmipb4poshd5ujpf81bgjrds")

  @@index([id_is_isa], map: "ix_gestao_informacao_isa")
}

model is_grau_endividamento {
  id_is_grau_endividamento BigInt           @id(map: "pk_is_grau_endividamento") @default(autoincrement())
  id_is_isa                BigInt
  id_is_valor_divida       BigInt?
  dt_update_record         DateTime?        @db.Timestamp(6)
  id_sincronismo           String?          @default(dbgenerated("(uuid_generate_v4())::character varying(36)")) @db.VarChar(36)
  id_sincronismo_isa       String?          @db.VarChar(36)
  id_und_empresa           String?          @db.VarChar(5)
  ativo                    Boolean          @default(true)
  is_isa                   is_isa           @relation(fields: [id_is_isa], references: [id_is_isa], onDelete: NoAction, onUpdate: NoAction, map: "fk_is_grau_end_is_isa")
  is_valor_divida          is_valor_divida? @relation(fields: [id_is_valor_divida], references: [id_is_valor_divida], onDelete: NoAction, onUpdate: NoAction, map: "fk_is_grau_end_is_valor_divida")

  @@index([id_is_isa], map: "ix_grau_endividamento_isa")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model is_isa {
  id_is_isa                      BigInt                           @id(map: "pk_id_is_isa") @default(autoincrement())
  data_atualizacao               DateTime?                        @db.Timestamp(6)
  ativo                          Boolean
  data_criacao                   DateTime                         @default(now()) @db.Timestamp(6)
  id_is_quest                    BigInt                           @unique(map: "uk_kbit0p6flryf3ousrnh653pny")
  dt_update_record               DateTime?                        @db.Timestamp(6)
  id_sincronismo                 String?                          @default(dbgenerated("(uuid_generate_v4())::character varying(36)")) @db.VarChar(36)
  id_sincronismo_quest           String?                          @db.VarChar(36)
  id_und_empresa                 String?                          @db.VarChar(5)
  is_adequacao_areas_preservacao is_adequacao_areas_preservacao[]
  is_adequacao_reserva_legal     is_adequacao_reserva_legal[]
  is_area_processo_degradacao    is_area_processo_degradacao[]
  is_atividade_executada         is_atividade_executada[]
  is_capac_prod_solo             is_capac_prod_solo[]
  is_conservacao_estradas        is_conservacao_estradas[]
  is_diversificacao_paisagem     is_diversificacao_paisagem[]
  is_escolaridade_curso          is_escolaridade_curso[]
  is_evolucao_patrimonial        is_evolucao_patrimonial[]
  is_gerencia_resid_efluentes    is_gerencia_resid_efluentes[]
  is_gestao_empreendimento       is_gestao_empreendimento[]
  is_gestao_informacao           is_gestao_informacao[]
  is_grau_endividamento          is_grau_endividamento[]
  is_quest                       is_quest                         @relation(fields: [id_is_quest], references: [id_is_quest], onDelete: NoAction, onUpdate: NoAction, map: "fk_is_quest")
  is_plano_adequacao             is_plano_adequacao[]
  is_pratica_conservacionista    is_pratica_conservacionista[]
  is_qualidade_agua              is_qualidade_agua[]
  is_qualidade_ocupacao_emp      is_qualidade_ocupacao_emp[]
  is_renda_bruta_estimada        is_renda_bruta_estimada[]
  is_renda_bruta_estimada_fora   is_renda_bruta_estimada_fora[]
  is_renda_bruta_estimada_outra  is_renda_bruta_estimada_outra[]
  is_residencia                  is_residencia[]
  is_risco_contaminacao          is_risco_contaminacao[]
  is_seg_trab_uso_agrotoxico     is_seg_trab_uso_agrotoxico[]
  is_vegetacao_nativa            is_vegetacao_nativa[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model is_ocupacao_lavoura_perm {
  id_is_ocupacao_lavoura_perm BigInt   @id(map: "pk_id_is_ocp_lavoura_perm") @default(autoincrement())
  id_is_quest                 BigInt
  descricao                   String?  @db.VarChar(100)
  area                        Float?
  dt_update_record            DateTime @default(now()) @db.Timestamp(6)
  id_sincronismo              String?  @default(dbgenerated("(uuid_generate_v4())::character varying(36)")) @db.VarChar(36)
  id_sincronismo_quest        String?  @db.VarChar(36)
  id_und_empresa              String?  @db.VarChar(5)
  ativo                       Boolean  @default(true)
  is_quest                    is_quest @relation(fields: [id_is_quest], references: [id_is_quest], onDelete: Cascade, map: "fk_id_is_ocp_lvr_quest")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model is_ocupacao_lavoura_temp {
  id_is_ocupacao_lavoura_temp BigInt   @id(map: "pk_id_is_ocp_lavoura_temp") @default(autoincrement())
  id_is_quest                 BigInt
  descricao                   String?  @db.VarChar(100)
  area                        Float?
  dt_update_record            DateTime @default(now()) @db.Timestamp(6)
  id_sincronismo              String?  @default(dbgenerated("(uuid_generate_v4())::character varying(36)")) @db.VarChar(36)
  id_sincronismo_quest        String?  @db.VarChar(36)
  id_und_empresa              String?  @db.VarChar(5)
  ativo                       Boolean  @default(true)
  is_quest                    is_quest @relation(fields: [id_is_quest], references: [id_is_quest], onDelete: Cascade, map: "fk_id_is_ocp_lvr_temp")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model is_ocupacao_pastagens {
  id_is_ocupacao_pastagens BigInt   @id(map: "pk_id_is_ocupacao_pastagens") @default(autoincrement())
  id_is_quest              BigInt
  descricao                String?  @db.VarChar(100)
  area                     Float?
  dt_update_record         DateTime @default(now()) @db.Timestamp(6)
  id_sincronismo           String?  @default(dbgenerated("(uuid_generate_v4())::character varying(36)")) @db.VarChar(36)
  id_sincronismo_quest     String?  @db.VarChar(36)
  id_und_empresa           String?  @db.VarChar(5)
  ativo                    Boolean  @default(true)
  is_quest                 is_quest @relation(fields: [id_is_quest], references: [id_is_quest], onDelete: NoAction, onUpdate: NoAction, map: "fk4325gv90cv5wgyjbt5ycjg0mv")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model is_ocupacao_silvicultura {
  id_is_ocupacao_silvicultura BigInt   @id(map: "pk_id_is_ocupacao_silvicultura") @default(autoincrement())
  id_is_quest                 BigInt
  descricao                   String?  @db.VarChar(100)
  area                        Float?
  dt_update_record            DateTime @default(now()) @db.Timestamp(6)
  id_sincronismo              String?  @default(dbgenerated("(uuid_generate_v4())::character varying(36)")) @db.VarChar(36)
  id_sincronismo_quest        String?  @db.VarChar(36)
  id_und_empresa              String?  @db.VarChar(5)
  ativo                       Boolean  @default(true)
  is_quest                    is_quest @relation(fields: [id_is_quest], references: [id_is_quest], onDelete: Cascade, map: "fk_id_is_ocp_silvicultura_quest")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model is_plano_adequacao {
  id_is_plano_adequacao      BigInt                  @id(map: "pk_id_is_plano_adequacao") @default(autoincrement())
  id_is_tipo_plano_adequacao BigInt
  id_is_isa                  BigInt
  proposicao                 String?                 @db.VarChar(4000)
  data_inicial               DateTime?               @db.Date
  data_final                 DateTime?               @db.Date
  data_criacao               DateTime                @default(now()) @db.Timestamp(6)
  data_atualizacao           DateTime?               @db.Timestamp(6)
  dt_update_record           DateTime?               @db.Timestamp(6)
  id_sincronismo             String?                 @default(dbgenerated("(uuid_generate_v4())::character varying(36)")) @db.VarChar(36)
  id_sincronismo_isa         String?                 @db.VarChar(36)
  id_und_empresa             String?                 @db.VarChar(5)
  ativo                      Boolean                 @default(true)
  is_isa                     is_isa                  @relation(fields: [id_is_isa], references: [id_is_isa], onDelete: NoAction, onUpdate: NoAction, map: "fk2of8ajfrxjg9xbs90e0wtai2t")
  is_tipo_plano_adequacao    is_tipo_plano_adequacao @relation(fields: [id_is_tipo_plano_adequacao], references: [id_is_tipo_plano_adequacao], onDelete: Cascade, map: "fk_id_is_tipo_plano_adequacao")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model is_ponto_critico {
  id_is_ponto_critico  BigInt    @id(map: "pk_id_is_ponto_critico") @default(autoincrement())
  descricao            String?   @db.VarChar(255)
  id_is_quest          BigInt
  dt_update_record     DateTime? @db.Timestamp(6)
  id_sincronismo       String?   @default(dbgenerated("(uuid_generate_v4())::character varying(36)")) @db.VarChar(36)
  id_sincronismo_quest String?   @db.VarChar(36)
  id_und_empresa       String?   @db.VarChar(5)
  ativo                Boolean   @default(true)
  is_quest             is_quest  @relation(fields: [id_is_quest], references: [id_is_quest], onDelete: Cascade, onUpdate: NoAction, map: "fk_is_ponto_critico_is_quest")
}

model is_posse_terra_quest {
  id_is_posse_terra    String  @db.VarChar(50)
  id_is_quest          BigInt
  id_sincronismo       String? @default(dbgenerated("(uuid_generate_v4())::character varying(36)")) @db.VarChar(36)
  id_sincronismo_quest String? @db.VarChar(36)
  id_und_empresa       String? @db.VarChar(5)
  ativo                Boolean @default(true)

  @@id([id_is_quest, id_is_posse_terra], map: "pk_id_is_posse_terra_quest")
}

model is_pratica_conservacionista {
  id_is_pratica_conservacionista BigInt    @id(map: "pk_is_pratica_conserv") @default(autoincrement())
  id_is_isa                      BigInt
  grau_conservacao_aguas         Int?
  lav_permanente_suficiente      Float?
  lav_permanente_insuficiente    Float?
  lav_temporaria_suficiente      Float?
  lav_temporaria_insuficiente    Float?
  lav_temporaria_sit_inad        Float?
  lav_permanente_sit_inad        Float?
  pastagem_suficiente            Float?
  pastagem_insuficiente          Float?
  pastagem_sit_inad              Float?
  silvicultura_suficiente        Float?
  silvicultura_insuficiente      Float?
  silvicultura_sit_inad          Float?
  dt_update_record               DateTime? @db.Timestamp(6)
  id_sincronismo                 String?   @default(dbgenerated("(uuid_generate_v4())::character varying(36)")) @db.VarChar(36)
  id_sincronismo_isa             String?   @db.VarChar(36)
  id_und_empresa                 String?   @db.VarChar(5)
  ativo                          Boolean   @default(true)
  is_isa                         is_isa    @relation(fields: [id_is_isa], references: [id_is_isa], onDelete: NoAction, onUpdate: NoAction, map: "fk7awe5c77743j86pldmqfu6l3g")

  @@index([id_is_isa], map: "ix_pratica_conservac_isa")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model is_principio_ativo {
  id_is_principio_ativo BigInt                  @id(map: "pk_is_principio_ativo") @default(autoincrement())
  nome                  String                  @unique(map: "uq_is_principio_ativo_nome") @db.VarChar(100)
  nome_iupac            String                  @db.VarChar(100)
  ativo                 Boolean                 @default(true)
  dt_update_record      DateTime?               @db.Timestamp(6)
  is_produto_agrotoxico is_produto_agrotoxico[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model is_problemas_agua {
  id_is_problemas_agua BigInt    @id(map: "pk_id_is_problemas_agua") @default(autoincrement())
  descricao            String?   @db.VarChar(255)
  id_is_quest          BigInt?
  dt_update_record     DateTime? @db.Timestamp(6)
  id_sincronismo       String?   @default(dbgenerated("(uuid_generate_v4())::character varying(36)")) @db.VarChar(36)
  id_sincronismo_quest String?   @db.VarChar(36)
  id_und_empresa       String?   @db.VarChar(5)
  ativo                Boolean   @default(true)
  is_quest             is_quest? @relation(fields: [id_is_quest], references: [id_is_quest], onDelete: Cascade, onUpdate: NoAction, map: "fk_is_problemas_agua_is_quest")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model is_produto_agrotoxico {
  id_is_produto_agrotoxico BigInt                  @id(map: "pk_is_produto_agrotoxico") @default(autoincrement())
  t1_2                     Float
  indice_vulnerabilidade   Float?
  koc                      Float
  nome                     String                  @db.VarChar(100)
  toxicidade_dah           Float
  toxicidade_peixes        Float
  ativo                    Boolean                 @default(true)
  id_is_principio_ativo    BigInt?
  is_principio_ativo       is_principio_ativo?     @relation(fields: [id_is_principio_ativo], references: [id_is_principio_ativo], onDelete: NoAction, onUpdate: NoAction, map: "fk_is_principio_ativo")
  is_risco_contaminacao    is_risco_contaminacao[]
}

model is_qualidade_agua {
  id_is_qualidade_agua          BigInt  @id(map: "pk_is_qualidade_agua") @default(autoincrement())
  id_is_isa                     BigInt
  margem_montante               Int?
  margem_jusante                Int?
  alteracoes_montante           Int?
  alteracoes_jusante            Int?
  sombreamento_montante         Int?
  sombreamento_jusante          Int?
  erosao_montante               Int?
  erosao_jusante                Int?
  transparencia_montante        Int?
  transparencia_jusante         Int?
  odor_agua_montante            Int?
  odor_agua_jusante             Int?
  oleosidade_agua_montante      Int?
  oleosidade_agua_jusante       Int?
  odor_sedimento_montante       Int?
  odor_sedimento_jusante        Int?
  oleosidade_sedimento_montante Int?
  oleosidade_sedimento_jusante  Int?
  fundo_montante                Int?
  fundo_jusante                 Int?
  desc_coleta_superficial       String? @db.VarChar(50)
  ph_agua_montante              Float?
  ph_agua_jusante               Float?
  coliformes_montante           Float?
  coliformes_jusante            Float?
  turbidez_montante             Float?
  turbidez_jusante              Float?
  nitrato_montante              Float?
  nitrato_jusante               Float?
  desc_coleta_subterraneo       String? @db.VarChar(50)
  ph_agua                       Float?
  coliformes                    Float?
  nitrato                       Float?
  id_sincronismo                String? @default(dbgenerated("(uuid_generate_v4())::character varying(36)")) @db.VarChar(36)
  id_sincronismo_isa            String? @db.VarChar(36)
  id_und_empresa                String? @db.VarChar(5)
  ativo                         Boolean @default(true)
  is_isa                        is_isa  @relation(fields: [id_is_isa], references: [id_is_isa], onDelete: NoAction, onUpdate: NoAction, map: "fk_is_qualidade_agua_is_isa")

  @@index([id_is_isa], map: "ix_qualidade_agua")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model is_qualidade_ocupacao_emp {
  id_is_qualidade_ocupacao_emp   BigInt    @id(map: "pk_is_qualidade_ocupacao_emp") @default(autoincrement())
  id_is_isa                      BigInt
  num_func_cont_efetiva          Int?
  num_func_cont_temporaria       Int?
  reg_func_cont_efetiva          Int?
  reg_func_cont_temporaria       Int?
  pag_hora_extra_cont_efetiva    Int?
  pag_hora_extra_cont_temporaria Int?
  acima_um_sal_cont_efetiva      Int?
  acima_um_sal_cont_temporaria   Int?
  aux_alimentacao_cont_efetiva   Int?
  aux_alimentacao_cont_temp      Int?
  aux_moradia_cont_efetiva       Int?
  aux_moradia_cont_temporaria    Int?
  aux_educ_transp_cont_efetiva   Int?
  aux_educ_transp_cont_temp      Int?
  particip_lucros_cont_efetiva   Int?
  particip_lucros_cont_temp      Int?
  seg_contra_acid_cont_efetiva   Int?
  seg_contra_acid_cont_temp      Int?
  acesso_lazer_cont_efetiva      Int?
  acesso_lazer_cont_temporaria   Int?
  numero_func_perm_e_temp        Int?
  espaco_cultivo_cont_efetiva    Int?
  espaco_cultivo_cont_temporaria Int?
  dt_update_record               DateTime? @db.Timestamp(6)
  id_sincronismo                 String?   @default(dbgenerated("(uuid_generate_v4())::character varying(36)")) @db.VarChar(36)
  id_sincronismo_isa             String?   @db.VarChar(36)
  id_und_empresa                 String?   @db.VarChar(5)
  ativo                          Boolean   @default(true)
  is_isa                         is_isa    @relation(fields: [id_is_isa], references: [id_is_isa], onDelete: NoAction, onUpdate: NoAction, map: "fk9u49mdle3f5no44uftss3votw")

  @@index([id_is_isa], map: "ix_qualidade_ocupacao_isa")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model is_quest {
  id_is_quest                BigInt                     @id(map: "pk_id_is_quest") @default(autoincrement())
  data_criacao               DateTime                   @default(now()) @db.Timestamp(6)
  data_atualizacao           DateTime?                  @db.Timestamp(6)
  data_visita                DateTime?                  @db.Timestamp(6)
  id_pl_propriedade          BigInt
  id_ger_pessoa              BigInt
  geo_ponto                  Unsupported("geometry")?
  posse_terra                BigInt?
  area_imovel                Float?
  tamanho_modulo_fiscal      Float?
  agricultura_familiar       Boolean?
  servidao_administrativa    Float?
  status                     String                     @db.VarChar(50)
  id_usuario                 BigInt?
  nome_recurso_hidrico       String?                    @db.VarChar(100)
  id_municipio               Int?
  id_pl_tipo_posse           Int?                       @db.SmallInt
  area_nao_agricola          Float?
  pousio                     Float?
  espelho_dagua              Float?
  vegetacao_nativa           Float?
  areas_inaproveitaveis      Float?
  dt_update_record           DateTime?                  @db.Timestamp(6)
  area_consolidado_car       Float?
  pousio_car                 Float?
  espelho_dagua_car          Float?
  vegetacao_nativa_car       Float?
  id_sincronismo             String?                    @default(dbgenerated("(uuid_generate_v4())::character varying(36)")) @db.VarChar(36)
  id_sincronismo_propriedade String?                    @db.VarChar(36)
  id_sincronismo_cliente     String?                    @db.VarChar(36)
  id_und_empresa             String?                    @db.VarChar(5)
  ativo                      Boolean                    @default(true)
  is_anexo                   is_anexo[]
  is_app                     is_app[]                   @ignore
  is_fonte_agua              is_fonte_agua[]
  is_isa                     is_isa?
  is_ocupacao_lavoura_perm   is_ocupacao_lavoura_perm[]
  is_ocupacao_lavoura_temp   is_ocupacao_lavoura_temp[]
  is_ocupacao_pastagens      is_ocupacao_pastagens[]
  is_ocupacao_silvicultura   is_ocupacao_silvicultura[]
  is_ponto_critico           is_ponto_critico[]
  is_problemas_agua          is_problemas_agua[]
  usuario                    usuario?                   @relation(fields: [id_usuario], references: [id_usuario], onDelete: NoAction, onUpdate: NoAction, map: "fk6u0p5obs6rsvfo1v0evpemum4")
  sep_municipio              sep_municipio?             @relation(fields: [id_municipio], references: [id_municipio], onDelete: NoAction, onUpdate: NoAction, map: "fk88u5x1gb5cuk8bhqceedok6vi")
  ger_pessoa                 ger_pessoa                 @relation(fields: [id_ger_pessoa], references: [id_pessoa_demeter], onDelete: NoAction, onUpdate: NoAction, map: "fk_is_quest_ger_pessoa")
  pl_propriedade             pl_propriedade             @relation(fields: [id_pl_propriedade], references: [id_pl_propriedade], onDelete: NoAction, onUpdate: NoAction, map: "fk_is_quest_pl_propriedade")
  pl_tipo_posse              pl_tipo_posse?             @relation(fields: [id_pl_tipo_posse], references: [id_pl_tipo_posse], onDelete: NoAction, onUpdate: NoAction, map: "fk_pl_tipo_posse_is_quest")
  is_rec_hidrico             is_rec_hidrico[]
  is_regularizacao           is_regularizacao[]
  is_terreno                 is_terreno[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model is_rec_hidrico {
  id_is_rec_hidrico      BigInt    @id(map: "pk_id_is_rec_hidrico") @default(autoincrement())
  numero_cursos_agua     Int?
  numero_nascentes       Int?
  numero_lagos           Int?
  numero_represas        Int?
  id_is_quest            BigInt?
  fonte_agua_superficial Boolean?
  fonte_agua_subterranea Boolean?
  problemas_agua_motivo  String?   @db.VarChar(100)
  possui_problemas_agua  Boolean?
  dt_update_record       DateTime? @db.Timestamp(6)
  id_sincronismo         String?   @default(dbgenerated("(uuid_generate_v4())::character varying(36)")) @db.VarChar(36)
  id_sincronismo_quest   String?   @db.VarChar(36)
  id_und_empresa         String?   @db.VarChar(5)
  ativo                  Boolean   @default(true)
  is_quest               is_quest? @relation(fields: [id_is_quest], references: [id_is_quest], onDelete: Cascade, onUpdate: NoAction, map: "fk_is_rec_hidrico_is_quest")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model is_regularizacao {
  id_is_regularizacao     BigInt    @id(map: "pk_id_is_regularizacao") @default(autoincrement())
  uso_agua                Boolean?
  licenciamento_ambiental Boolean?
  reserva_legal           Boolean?
  id_is_quest             BigInt?
  dt_update_record        DateTime? @db.Timestamp(6)
  id_sincronismo          String?   @default(dbgenerated("(uuid_generate_v4())::character varying(36)")) @db.VarChar(36)
  id_sincronismo_quest    String?   @db.VarChar(36)
  id_und_empresa          String?   @db.VarChar(5)
  ativo                   Boolean   @default(true)
  is_quest                is_quest? @relation(fields: [id_is_quest], references: [id_is_quest], onDelete: Cascade, onUpdate: NoAction, map: "fk_is_regularizacao_is_quest")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model is_renda_bruta_estimada {
  id_is_renda_bruta_estimada BigInt    @id(map: "pk_is_renda_bruta_estimada") @default(autoincrement())
  id_is_isa                  BigInt
  descricao_atividade        String?   @db.VarChar(50)
  valor_estimado             Float?
  dt_update_record           DateTime? @db.Timestamp(6)
  id_sincronismo             String?   @default(dbgenerated("(uuid_generate_v4())::character varying(36)")) @db.VarChar(36)
  id_sincronismo_isa         String?   @db.VarChar(36)
  id_und_empresa             String?   @db.VarChar(5)
  ativo                      Boolean   @default(true)
  is_isa                     is_isa    @relation(fields: [id_is_isa], references: [id_is_isa], onDelete: NoAction, onUpdate: NoAction, map: "fk_is_isa")

  @@index([id_is_isa], map: "ix_renda_bruta_estimada_isa")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model is_renda_bruta_estimada_fora {
  id_is_renda_estimada_fora BigInt    @id(map: "pk_is_renda_bruta_estimada_fora") @default(autoincrement())
  id_is_isa                 BigInt
  ajudas_financeiras        Float?
  outras_atividades         Float?
  dt_update_record          DateTime? @db.Timestamp(6)
  id_sincronismo            String?   @default(dbgenerated("(uuid_generate_v4())::character varying(36)")) @db.VarChar(36)
  id_sincronismo_isa        String?   @db.VarChar(36)
  id_und_empresa            String?   @db.VarChar(5)
  ativo                     Boolean   @default(true)
  is_isa                    is_isa    @relation(fields: [id_is_isa], references: [id_is_isa], onDelete: NoAction, onUpdate: NoAction, map: "fk_is_isa")

  @@index([id_is_isa], map: "ix_renda_estimada_fora_isa")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model is_renda_bruta_estimada_outra {
  id_is_renda_estimada_outra BigInt    @id(map: "pk_is_renda_bruta_estimada_outras") @default(autoincrement())
  id_is_isa                  BigInt
  descricao_atividade        String?   @db.VarChar(50)
  valor_estimado             Float?
  dt_update_record           DateTime? @db.Timestamp(6)
  id_sincronismo             String?   @default(dbgenerated("(uuid_generate_v4())::character varying(36)")) @db.VarChar(36)
  id_sincronismo_isa         String?   @db.VarChar(36)
  id_und_empresa             String?   @db.VarChar(5)
  ativo                      Boolean   @default(true)
  is_isa                     is_isa    @relation(fields: [id_is_isa], references: [id_is_isa], onDelete: NoAction, onUpdate: NoAction, map: "fk_is_isa")

  @@index([id_is_isa], map: "ix_renda_estimada_outra_isa")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model is_residencia {
  id_is_residencia     BigInt    @id(map: "pk_id_is_residencia") @default(autoincrement())
  id_is_isa            BigInt?
  tipo_residencia      Int?
  disponibilidade_agua Int?
  energia_eletrica     Int?
  escoamento_producao  Int?
  servico_saude        Int?
  transporte_escolar   Int?
  seguranca_campo      Int?
  telefone             Int?
  internet             Int?
  coleta_lixo          Int?
  hortalica_graos      Int?
  pomar                Int?
  criacao_animais      Int?
  dt_update_record     DateTime? @db.Timestamp(6)
  id_sincronismo       String?   @default(dbgenerated("(uuid_generate_v4())::character varying(36)")) @db.VarChar(36)
  id_sincronismo_isa   String?   @db.VarChar(36)
  id_und_empresa       String?   @db.VarChar(5)
  ativo                Boolean   @default(true)
  is_isa               is_isa?   @relation(fields: [id_is_isa], references: [id_is_isa], onDelete: NoAction, onUpdate: NoAction, map: "fk_is_isa")

  @@index([id_is_isa], map: "ix_residencia_isa")
}

model is_risco_contaminacao {
  id_is_risco_contaminacao BigInt                @id(map: "pk_is_risco_contaminacao") @default(autoincrement())
  id_is_isa                BigInt
  id_is_produto_agrotoxico BigInt
  descricao_cultura        String?               @db.VarChar(100)
  area_aplicada            Float?
  volume_aplicado          Float?
  conteudo_argila_solo     Int?
  distancia_curso_dagua    Int?
  tp_manejo_solo           Int?
  dt_update_record         DateTime?             @db.Timestamp(6)
  id_sincronismo           String?               @default(dbgenerated("(uuid_generate_v4())::character varying(36)")) @db.VarChar(36)
  id_sincronismo_isa       String?               @db.VarChar(36)
  id_und_empresa           String?               @db.VarChar(5)
  ativo                    Boolean               @default(true)
  is_produto_agrotoxico    is_produto_agrotoxico @relation(fields: [id_is_produto_agrotoxico], references: [id_is_produto_agrotoxico], onDelete: NoAction, onUpdate: NoAction, map: "fk_is_risco_cont_is_prod_def")
  is_isa                   is_isa                @relation(fields: [id_is_isa], references: [id_is_isa], onDelete: NoAction, onUpdate: NoAction, map: "fk_is_risco_contamin_is_isa")

  @@index([id_is_isa], map: "ix_risco_contaminacao_isa")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model is_seg_trab_uso_agrotoxico {
  id_is_seg_trab_uso_agrotoxico BigInt    @id(map: "pk_is_seg_trab_uso_agrotoxico") @default(autoincrement())
  id_is_isa                     BigInt
  qtd_pessoas_manu_agrot        Int?
  qtd_pessoas_epi_adeq          Int?
  armazena_adeq_embalagens      Boolean?
  devol_embalagens_agrot        Boolean?
  dt_update_record              DateTime? @db.Timestamp(6)
  id_sincronismo                String?   @default(dbgenerated("(uuid_generate_v4())::character varying(36)")) @db.VarChar(36)
  id_sincronismo_isa            String?   @db.VarChar(36)
  id_und_empresa                String?   @db.VarChar(5)
  ativo                         Boolean   @default(true)
  is_isa                        is_isa    @relation(fields: [id_is_isa], references: [id_is_isa], onDelete: NoAction, onUpdate: NoAction, map: "fk5pbqduci8nrecsr6nyfawj8gc")

  @@index([id_is_isa], map: "ix_seg_trab_isa")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model is_terreno {
  id_is_terreno        BigInt    @id(map: "pk_id_is_terreno") @default(autoincrement())
  area                 Float?
  descricao            String?   @db.VarChar(255)
  id_is_quest          BigInt?
  dt_update_record     DateTime? @db.Timestamp(6)
  area_nao_contigua    String?   @db.VarChar(400)
  id_sincronismo       String?   @default(dbgenerated("(uuid_generate_v4())::character varying(36)")) @db.VarChar(36)
  id_sincronismo_quest String?   @db.VarChar(36)
  id_und_empresa       String?   @db.VarChar(5)
  ativo                Boolean   @default(true)
  is_quest             is_quest? @relation(fields: [id_is_quest], references: [id_is_quest], onDelete: Cascade, onUpdate: NoAction, map: "fk_is_terreno_is_quest")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model is_tipo_plano_adequacao {
  id_is_tipo_plano_adequacao BigInt               @id(map: "pk_id_is_tipo_plano_adequacao") @default(autoincrement())
  nome_item                  String               @db.VarChar(50)
  dt_update_record           DateTime?            @db.Timestamp(6)
  is_plano_adequacao         is_plano_adequacao[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model is_valor_divida {
  id_is_valor_divida    BigInt                  @id(map: "pk_id_is_valor_divida")
  descricao             String                  @db.VarChar(100)
  fator_ponderacao      Float
  dt_update_record      DateTime?               @db.Timestamp(6)
  ativo                 Boolean                 @default(true)
  is_grau_endividamento is_grau_endividamento[]
}

model is_vegetacao_nativa {
  id_is_vegetacao_nativa BigInt    @id(map: "pk_is_vegetacao_nativa") @default(autoincrement())
  estagio_avancado_1     Decimal?  @db.Decimal(10, 2)
  estagio_avancado_2     Decimal?  @db.Decimal(10, 2)
  estagio_avancado_3     Decimal?  @db.Decimal(10, 2)
  estagio_avancado_4     Decimal?  @db.Decimal(10, 2)
  estagio_medio_1        Decimal?  @db.Decimal(10, 2)
  estagio_medio_2        Decimal?  @db.Decimal(10, 2)
  estagio_medio_3        Decimal?  @db.Decimal(10, 2)
  estagio_medio_4        Decimal?  @db.Decimal(10, 2)
  estagio_inicial_1      Decimal?  @db.Decimal(10, 2)
  estagio_inicial_2      Decimal?  @db.Decimal(10, 2)
  estagio_inicial_3      Decimal?  @db.Decimal(10, 2)
  estagio_inicial_4      Decimal?  @db.Decimal(10, 2)
  fragmento_vegetacao    Boolean?
  fragmento_pastoreio    Boolean?
  id_is_isa              BigInt
  dt_update_record       DateTime? @db.Timestamp(6)
  fragmentos             Int?
  tipo_vegetacao_1       Int?
  tipo_vegetacao_2       Int?
  tipo_vegetacao_3       Int?
  tipo_vegetacao_4       Int?
  id_sincronismo         String?   @default(dbgenerated("(uuid_generate_v4())::character varying(36)")) @db.VarChar(36)
  id_sincronismo_isa     String?   @db.VarChar(36)
  id_und_empresa         String?   @db.VarChar(5)
  ativo                  Boolean   @default(true)
  is_isa                 is_isa    @relation(fields: [id_is_isa], references: [id_is_isa], onDelete: NoAction, onUpdate: NoAction, map: "fk_vegetacao_nativa_is_isa")

  @@index([id_is_isa], map: "ix_vegetacao_nativa_isa")
}

model log_acesso {
  id_log_acesso     BigInt   @id(map: "pk_id_log_acesso") @default(autoincrement())
  id_usuario        BigInt
  matricula_usuario String?  @db.Char(5)
  digito_matricula  String?  @db.Char(1)
  data_acesso       DateTime @db.Date
  observacao        String?  @db.VarChar(400)
  logado            Boolean?
  usuario           usuario  @relation(fields: [id_usuario], references: [id_usuario], onDelete: NoAction, onUpdate: NoAction, map: "fk_log_acesso_usuario")
}

model mbr_custo {
  id_custo         Int             @id
  fk_item          Int
  fk_und_empresa   String          @db.Char(5)
  dt_custo         DateTime?       @db.Date
  vl_minimo        Decimal?        @db.Decimal(18, 2)
  vl_medio         Decimal?        @db.Decimal(18, 2)
  vl_maximo        Decimal?        @db.Decimal(18, 2)
  fk_usuario       String?         @db.Char(5)
  dt_update_record DateTime?       @db.Timestamp(6)
  ger_und_empresa  ger_und_empresa @relation(fields: [fk_und_empresa], references: [id_und_empresa], onDelete: NoAction, map: "fk_mbr_custo_1")
  mbr_item_custo   mbr_item_custo  @relation(fields: [fk_item], references: [id_item_custo], onDelete: NoAction, map: "fk_mbr_custo_2")
}

model mbr_item_custo {
  id_item_custo          Int                      @id
  ds_item                String?                  @db.VarChar(100)
  fk_grupo               Int
  ds_unidade             String?                  @db.VarChar(30)
  dt_update_record       DateTime?                @db.Timestamp(6)
  mbr_custo              mbr_custo[]
  ger_grupo_produto      ger_grupo_produto        @relation(fields: [fk_grupo], references: [id_grupo_produto], onDelete: NoAction, map: "fk_mbr_item_custo_1")
  mbr_produto_item_custo mbr_produto_item_custo[]
}

model mbr_mercado {
  id_mercado       Int             @id
  fk_produto       Int
  fk_und_empresa   String          @db.Char(5)
  fk_usuario       String          @db.Char(5)
  dt_preco1        DateTime?       @db.Date
  dt_preco2        DateTime?       @db.Date
  vl_minimo        Decimal?        @db.Decimal(18, 2)
  vl_medio         Decimal?        @db.Decimal(18, 2)
  vl_maximo        Decimal?        @db.Decimal(18, 2)
  dt_update_record DateTime?       @db.Timestamp(6)
  ger_produto      ger_produto     @relation(fields: [fk_produto], references: [id_produto], onDelete: NoAction, map: "fk_mbr_mercado_1")
  ger_und_empresa  ger_und_empresa @relation(fields: [fk_und_empresa], references: [id_und_empresa], onDelete: NoAction, map: "fk_mbr_mercado_2")
}

model mbr_produto_item_custo {
  id_produto_item_custo Int            @id
  fk_produto            Int
  fk_item               Int
  qt_alta               Decimal?       @db.Decimal(18, 2)
  qt_media              Decimal?       @db.Decimal(18, 2)
  qt_baixa              Decimal?       @db.Decimal(18, 2)
  qt_plantio            Decimal?       @db.Decimal(18, 2)
  dt_update_record      DateTime?      @db.Timestamp(6)
  ger_produto           ger_produto    @relation(fields: [fk_produto], references: [id_produto], onDelete: NoAction, map: "fk_mbr_produto_item_custo_1")
  mbr_item_custo        mbr_item_custo @relation(fields: [fk_item], references: [id_item_custo], onDelete: NoAction, map: "fk_mbr_produto_item_custo_2")

  @@unique([fk_produto, fk_item], map: "mbr_produto_item_custo_idx1")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model modulo {
  id_modulo              BigInt                   @id(map: "pk_modulo") @default(autoincrement())
  nome_modulo            String?                  @db.VarChar(255)
  descricao_modulo       String?                  @db.VarChar(255)
  dt_update_record       DateTime?                @db.Timestamp(6)
  nome_icone             String?                  @db.VarChar(255)
  nome_page              String?                  @db.VarChar(255)
  demeter_mobile         Boolean?
  ativo                  Boolean                  @default(true)
  at_pos_process_modulos at_pos_process_modulos[]
  perfil_modulo          perfil_modulo[]
}

model mp_agrupamento_despesa {
  id_mp_agrupamento_despesa BigInt                @id @default(autoincrement())
  ativo                     Boolean?
  dt_update_record          DateTime?             @db.Timestamp(6)
  nm_agrupamento            String?               @db.VarChar(255)
  mp_item_fluxo_caixa       mp_item_fluxo_caixa[]
}

model mp_alimentacao {
  id_mp_alimentacao        BigInt                     @id(map: "pk_mp_alimentacao") @default(autoincrement())
  nm_alimentacao           String                     @db.VarChar(60)
  sn_ativo                 Boolean?
  tp_agrupamento           Int?                       @db.SmallInt
  mp_item_alimentacao_seca mp_item_alimentacao_seca[]
}

model mp_animal {
  id_mp_animal                                                            BigInt                  @id(map: "pk_mp_animal") @default(autoincrement())
  id_usuario                                                              BigInt?
  id_manejo_origem                                                        BigInt?
  id_mp_cat_animal                                                        BigInt?
  id_mp_raca                                                              BigInt?
  id_mae                                                                  BigInt?
  id_touro                                                                BigInt?
  id_mp_semen                                                             BigInt?
  id_pl_propriedade                                                       BigInt?
  id_animal                                                               String?                 @db.Char(36)
  fk_pessoa_propriedade                                                   String?                 @db.Char(36)
  fk_raca                                                                 Int?
  nm_animal                                                               String                  @db.VarChar(40)
  ds_codigo                                                               String?                 @db.VarChar(20)
  dt_nascimento                                                           DateTime                @db.Date
  fk_cat_animal                                                           Int?
  sg_sexo                                                                 String                  @db.Char(1)
  nm_pai                                                                  String?                 @db.VarChar(40)
  nm_mae                                                                  String?                 @db.VarChar(40)
  tp_origem                                                               Int
  dt_cadastro                                                             DateTime                @db.Date
  fk_usuario                                                              String?                 @db.Char(5)
  vl_peso                                                                 Float?
  vl_compra                                                               Float?
  fk_manejo_origem                                                        String?                 @db.Char(36)
  sn_touro_pro_genetica                                                   Boolean?
  nr_meses_desmama                                                        Int?
  vl_peso_desmama                                                         Float?
  dt_update_record                                                        DateTime                @db.Timestamp(6)
  fk_touro                                                                String?                 @db.Char(36)
  fk_semen                                                                String?                 @db.Char(36)
  fk_mae                                                                  String?                 @db.Char(36)
  ativo                                                                   Boolean                 @default(true)
  mp_animal_mp_animal_id_maeTomp_animal                                   mp_animal?              @relation("mp_animal_id_maeTomp_animal", fields: [id_mae], references: [id_mp_animal], onDelete: NoAction, onUpdate: NoAction, map: "fk8hq98hcqgqosl8cq0i35bmxbi")
  other_mp_animal_mp_animal_id_maeTomp_animal                             mp_animal[]             @relation("mp_animal_id_maeTomp_animal")
  mp_raca                                                                 mp_raca?                @relation(fields: [id_mp_raca], references: [id_mp_raca], onDelete: NoAction, onUpdate: NoAction, map: "fk_id_mp_raca")
  mp_semen                                                                mp_semen?               @relation(fields: [id_mp_semen], references: [id_mp_semen], onDelete: NoAction, onUpdate: NoAction, map: "fk_id_mp_semen")
  usuario                                                                 usuario?                @relation(fields: [id_usuario], references: [id_usuario], onDelete: NoAction, onUpdate: NoAction, map: "fk_id_usuario")
  mp_cat_animal                                                           mp_cat_animal?          @relation(fields: [id_mp_cat_animal], references: [id_mp_cat_animal], onDelete: NoAction, onUpdate: NoAction, map: "fk_mp_cat_animal")
  mp_manejo_reprodutivo_mp_animal_id_manejo_origemTomp_manejo_reprodutivo mp_manejo_reprodutivo?  @relation("mp_animal_id_manejo_origemTomp_manejo_reprodutivo", fields: [id_manejo_origem], references: [id_mp_manejo_reprodutivo], onDelete: NoAction, onUpdate: NoAction, map: "fk_mp_manejo_origem")
  pl_propriedade                                                          pl_propriedade?         @relation(fields: [id_pl_propriedade], references: [id_pl_propriedade], onDelete: NoAction, onUpdate: NoAction, map: "fk_pl_propriedade")
  mp_animal_mp_animal_id_touroTomp_animal                                 mp_animal?              @relation("mp_animal_id_touroTomp_animal", fields: [id_touro], references: [id_mp_animal], onDelete: NoAction, onUpdate: NoAction, map: "fkgcv165r357m43ow5thb2wh7pw")
  other_mp_animal_mp_animal_id_touroTomp_animal                           mp_animal[]             @relation("mp_animal_id_touroTomp_animal")
  mp_manejo_reprodutivo_mp_manejo_reprodutivo_id_mp_animalTomp_animal     mp_manejo_reprodutivo[] @relation("mp_manejo_reprodutivo_id_mp_animalTomp_animal")
  mp_manejo_reprodutivo_mp_manejo_reprodutivo_id_touroTomp_animal         mp_manejo_reprodutivo[] @relation("mp_manejo_reprodutivo_id_touroTomp_animal")
  mp_mov_rebanho                                                          mp_mov_rebanho[]
}

model mp_atendimento_minaspec {
  id_mp_atendimento_minaspec    BigInt            @id(map: "pk_id_mp_atendimento_minaspec") @default(autoincrement())
  id_pl_propriedade             BigInt
  id_pessoa_demeter             BigInt
  id_usuario                    BigInt
  id_in_inventario              BigInt?
  comunidade                    String?           @db.VarChar(50)
  sub_bacia                     String?           @db.VarChar(50)
  curso_dagua                   String?           @db.VarChar(50)
  id_captacao_agua              Int?
  agua_suficiente               Boolean?
  producao_inicial_leite        Float?
  irrigacao                     Boolean?
  agua_perene                   Boolean?
  usa_computador                Boolean?
  reside_propriedade            Boolean?
  mao_obra_propria              Boolean?
  mao_obra_esposa               Boolean?
  mao_obra_eventual             Boolean?
  mao_obra_permanente           Boolean?
  assist_tecnica_emater         Boolean?
  assist_tecnica_cooperativa    Boolean?
  assist_tecnica_consultor      Boolean?
  assist_tecnica_outra          Boolean?
  area_atividade_leiteira       Float?
  area_pastagem_total           Float?
  area_irrigacao                Float?
  area_arrendada                Float?
  inicio_atividade              DateTime?         @db.Date
  participa_associacao          Boolean?
  participa_sindicato           Boolean?
  participa_cooperativa         Boolean?
  dt_update_record              DateTime          @default(now()) @db.Timestamp(6)
  ativo                         Boolean?          @default(true)
  custo_estimado_terra          Float?
  ganho_peso_inicial            Float?
  mao_obra_envolvida            String?           @db.VarChar(50)
  meta_ganho_peso_inicial       Float?
  meta_litros_dia               Float?
  prazo_meta_ganho_peso_inicial Float?
  prazo_meta_litros_dia         Float?
  sist_prod_apasto              Boolean?
  sist_prod_confinado           Boolean?
  sist_prod_cria                Boolean?
  sist_prod_engorda             Boolean?
  sist_prod_recria              Boolean?
  sist_prod_semi_confinado      Boolean?
  tp_sistema_producao           Int?              @db.SmallInt
  custo_arrendamento_terra      Float?
  dt_insert_record              DateTime?         @db.Timestamp(6)
  pl_propriedade                pl_propriedade    @relation(fields: [id_pl_propriedade], references: [id_pl_propriedade], onDelete: NoAction, onUpdate: NoAction, map: "fk5sn9na2owojfw191v7symktp8")
  ger_pessoa                    ger_pessoa        @relation(fields: [id_pessoa_demeter], references: [id_pessoa_demeter], onDelete: NoAction, onUpdate: NoAction, map: "fk6f2jvlddsxkg7fjbtmyuuyf3a")
  mp_captacao_agua              mp_captacao_agua? @relation(fields: [id_captacao_agua], references: [id_mp_captacao_agua], onDelete: NoAction, onUpdate: NoAction, map: "fk_id_captacao_agua")
  usuario                       usuario           @relation(fields: [id_usuario], references: [id_usuario], onDelete: NoAction, onUpdate: NoAction, map: "fk_id_usuario")
  in_inventario                 in_inventario?    @relation(fields: [id_in_inventario], references: [id_in_inventario], onDelete: NoAction, onUpdate: NoAction, map: "fk_in_inventario")
  mp_rel_anual                  mp_rel_anual[]
}

model mp_captacao_agua {
  id_mp_captacao_agua     Int                       @id(map: "pk_id_mp_captacao_agua") @default(autoincrement())
  nome                    String?                   @db.VarChar(50)
  ativo                   Boolean?                  @default(true)
  dt_update_record        DateTime                  @default(now()) @db.Timestamp(6)
  mp_atendimento_minaspec mp_atendimento_minaspec[]
}

model mp_cat_animal {
  id_mp_cat_animal BigInt      @id(map: "pk_mp_cat_animal") @default(autoincrement())
  nm_categoria     String      @db.VarChar(40)
  vl_und_animal    Float
  ds_nome_femea    String?     @db.VarChar(15)
  ds_nome_macho    String?     @db.VarChar(15)
  dt_update_record DateTime    @db.Timestamp(6)
  ativo            Boolean     @default(true)
  sg_sexo          String?     @db.Char(1)
  mp_animal        mp_animal[]
}

model mp_controle_leiteiro {
  id_mp_controle_leiteiro  BigInt                @id(map: "pk_mp_controle_leiteiro") @default(autoincrement())
  id_mp_manejo_reprodutivo BigInt
  id_usuario               BigInt?
  dt_ordenha               DateTime              @db.Date
  nr_lote                  String?               @db.VarChar(5)
  vl_ordenha1              Float?
  vl_ordenha2              Float?
  vl_ordenha3              Float?
  vl_consumo_racao         Float?
  vl_consumo_corporal      Float?
  vl_escore                Float?
  dt_cadastro              DateTime              @db.Date
  ds_observacao            String?               @db.VarChar(200)
  mp_manejo_reprodutivo    mp_manejo_reprodutivo @relation(fields: [id_mp_manejo_reprodutivo], references: [id_mp_manejo_reprodutivo], onDelete: NoAction, onUpdate: NoAction, map: "fk_controle_manejo")
  usuario                  usuario?              @relation(fields: [id_usuario], references: [id_usuario], onDelete: NoAction, onUpdate: NoAction, map: "fk_controle_usuario")
}

model mp_dados_complementares {
  id_mp_dados_complementares                    BigInt          @id(map: "id_mp_dados_complementares") @default(autoincrement())
  id_pl_propriedade                             BigInt?
  id_usuario                                    BigInt?
  id_dados_complementares                       String?         @db.VarChar(36)
  fk_pessoa_propriedade                         String?         @db.VarChar(36)
  tp_ordenha_mecanica                           Int?
  sn_ordenha_com_bezerro                        Boolean?
  nr_ordenhas_dia                               Int?            @db.SmallInt
  tp_piso_local_ordenha                         Int?            @db.SmallInt
  sn_sala_ordenha                               Boolean?
  sn_local_ordenha_agua                         Boolean?
  sn_local_ordenha_energia                      Boolean?
  tp_armazenamento_leite                        Int?            @db.SmallInt
  sn_venda_laticinio                            Boolean?
  sn_venda_cooperativa                          Boolean?
  sn_fabricacao_queijo                          Boolean?
  sn_inseminacao_artificial                     Boolean?
  sn_anota_dia_parto                            Boolean?
  sn_faz_controle_leiteiro                      Boolean?
  sn_touro_e_inseminacao                        Boolean?
  sn_anota_dia_secagem                          Boolean?
  sn_anota_cobertura                            Boolean?
  sn_anota_gastos                               Boolean?
  sn_tem_pediluvio                              Boolean?
  sn_comercializacao_informal                   Boolean?
  sn_usa_coador                                 Boolean?
  sn_faz_teste_caneca                           Boolean?
  sn_faz_teste_cmt                              Boolean?
  sn_faz_pre_dipping                            Boolean?
  sn_faz_pos_dipping                            Boolean?
  sn_exame_brucelose                            Boolean?
  sn_exame_tuberculose                          Boolean?
  sn_vacina_brucelose                           Boolean?
  sn_vacina_raiva                               Boolean?
  sn_vacina_aftosa                              Boolean?
  sn_vacina_clostidiose                         Boolean?
  sn_tristeza_parasitaria                       Boolean?
  sn_bomba_costal                               Boolean?
  sn_bomba_capeta                               Boolean?
  sn_ducha                                      Boolean?
  sn_pouron                                     Boolean?
  sn_injetavel                                  Boolean?
  tp_tratamento_carrapato                       Int?            @db.SmallInt
  sn_vermifugacao_injetavel                     Boolean?
  sn_vermifugacao_oral                          Boolean?
  sn_vermifugacao_pouron                        Boolean?
  tp_tratamento_vermifugacao                    Int?            @db.SmallInt
  tp_mosca_chifre_freq                          Int?            @db.SmallInt
  sn_banhos_mosca_chifre                        Boolean?
  sn_pouron_mosca_chifre                        Boolean?
  sn_brinco_mosca_chifre                        Boolean?
  tp_tratamento_mosca_chifre                    Int?            @db.SmallInt
  fk_usuario                                    String?         @db.VarChar(255)
  tp_freq_banhos_seca                           Int?            @db.SmallInt
  nr_banhos_seca_ano                            Int?            @db.SmallInt
  tp_freq_banhos_aguas                          Int?            @db.SmallInt
  nr_banhos_aguas_ano                           Int?            @db.SmallInt
  tp_freq_verfmifugacao_seca                    Int?            @db.SmallInt
  nr_vermifugacoes_seca                         Int?            @db.SmallInt
  tp_freq_vermifugacao_aguas                    Int?            @db.SmallInt
  nr_vermifugacoes_aguas                        Int?            @db.SmallInt
  dt_update_record                              DateTime        @db.Date
  tp_freq_banhos                                Int?            @db.SmallInt
  nr_banhos_ano                                 Int?            @db.SmallInt
  tp_vermifugacao_freq                          Int?            @db.SmallInt
  nr_vermifugacoes                              Int?            @db.SmallInt
  sn_cura_umbigo                                Boolean?
  nr_curas                                      Int?            @db.SmallInt
  sn_latao                                      Boolean?
  sn_nao_armazena                               Boolean?
  sn_primera_colostragem_pos_parto              Boolean?
  sn_tanque_expansao_coletivo                   Boolean?
  sn_tanque_expansao_proprio                    Boolean?
  sn_teste_colostro                             Boolean?
  sn_venda_animais_frigorifico                  Boolean?
  sn_venda_animais_outros                       Boolean?
  sn_via_alimentacao_mineral                    Boolean?
  sn_via_alimentacao_mineral_controle_carrapato Boolean?
  sn_via_alimentacao_mineral_mosca_chifre       Boolean?
  pl_propriedade                                pl_propriedade? @relation(fields: [id_pl_propriedade], references: [id_pl_propriedade], onDelete: NoAction, onUpdate: NoAction, map: "fk_mp_dados_comp_prop")
  usuario                                       usuario?        @relation(fields: [id_usuario], references: [id_usuario], onDelete: NoAction, onUpdate: NoAction, map: "fk_mp_dados_comp_user")
}

model mp_fluxo_caixa {
  id_mp_fluxo_caixa      BigInt              @id(map: "pk_mp_fluxo_caixa") @default(autoincrement())
  id_mp_item_fluxo_caixa BigInt
  id_pl_propriedade      BigInt
  id_mp_semen            BigInt?
  id_mp_mov_rebanho      BigInt?
  id_fluxo_caixa         String?             @db.Char(36)
  dt_lancamento          DateTime?           @db.Date
  fk_item_fluxo_caixa    Int?
  qt_item                Int
  vl_unitario            Float
  fk_pessoa_propriedade  String?             @db.Char(36)
  dt_update_record       DateTime            @db.Timestamp(6)
  fk_semen               String?             @db.Char(36)
  fk_mov_rebanho         String?             @db.Char(36)
  sn_lanc_pecuaria       Boolean?
  mp_item_fluxo_caixa    mp_item_fluxo_caixa @relation(fields: [id_mp_item_fluxo_caixa], references: [id_mp_item_fluxo_caixa], onDelete: NoAction, onUpdate: NoAction, map: "fk_mp_fluxo_caixa_item")
  mp_mov_rebanho         mp_mov_rebanho?     @relation(fields: [id_mp_mov_rebanho], references: [id_mp_mov_rebanho], onDelete: NoAction, onUpdate: NoAction, map: "fk_mp_fluxo_caixa_mov")
  pl_propriedade         pl_propriedade      @relation(fields: [id_pl_propriedade], references: [id_pl_propriedade], onDelete: NoAction, onUpdate: NoAction, map: "fk_mp_fluxo_caixa_prop")
  mp_semen               mp_semen?           @relation(fields: [id_mp_semen], references: [id_mp_semen], onDelete: NoAction, onUpdate: NoAction, map: "fk_mp_fluxo_caixa_semen")
}

model mp_forrageira {
  id_mp_forrageira   BigInt               @id(map: "pk_mp_forrageira") @default(autoincrement())
  nm_forrageira      String               @db.VarChar(60)
  tp_forrageira      Int?                 @db.SmallInt
  dt_update_record   DateTime             @db.Timestamp(6)
  sn_ativo           Boolean?
  mp_prop_forrageira mp_prop_forrageira[]
}

model mp_intervencao {
  id_mp_intervencao     BigInt         @id(map: "pk_mp_intervencao") @default(autoincrement())
  id_pl_propriedade     BigInt
  id_usuario            BigInt
  id_intervencao        String?        @db.Char(36)
  fk_pessoa_propriedade String?        @db.Char(36)
  dt_intervencao        DateTime       @db.Date
  ds_intervencao        String         @db.VarChar(200)
  fk_usuario            String?        @db.Char(5)
  dt_update_record      DateTime       @db.Timestamp(6)
  ativo                 Boolean
  usuario               usuario        @relation(fields: [id_usuario], references: [id_usuario], onDelete: NoAction, onUpdate: NoAction, map: "fk9xwap7pqxnna3t16a9haji1gt")
  pl_propriedade        pl_propriedade @relation(fields: [id_pl_propriedade], references: [id_pl_propriedade], onDelete: NoAction, onUpdate: NoAction, map: "fk_mp_intervencao_prop")
}

model mp_item_alimentacao_seca {
  id_mp_item_alimentacao_seca BigInt                   @id(map: "pk_mp_item_alimentacao_seca") @default(autoincrement())
  id_mp_alimentacao           BigInt
  id_mp_prop_alimentacao_seca BigInt
  mp_alimentacao              mp_alimentacao           @relation(fields: [id_mp_alimentacao], references: [id_mp_alimentacao], onDelete: NoAction, onUpdate: NoAction, map: "fk9hj309lc8bgunsfc3nu5agdw3")
  mp_prop_alimentacao_seca    mp_prop_alimentacao_seca @relation(fields: [id_mp_prop_alimentacao_seca], references: [id_mp_prop_alimentacao_seca], onDelete: NoAction, map: "fk_mp_item_alimentacao_seca_prop")
}

model mp_item_fluxo_caixa {
  id_mp_item_fluxo_caixa    BigInt                  @id(map: "pk_item_fluxo_caixa") @default(autoincrement())
  id_und_medida             BigInt
  nm_item_fluxo_caixa       String                  @db.VarChar(60)
  tp_despesa                Int                     @db.SmallInt
  tp_lancamento             String                  @db.Char(1)
  sn_ativo                  Boolean?
  dt_update_record          DateTime                @db.Timestamp(6)
  tp_agrupamento            Float?
  id_mp_agrupamento_despesa BigInt?
  mp_fluxo_caixa            mp_fluxo_caixa[]
  mp_agrupamento_despesa    mp_agrupamento_despesa? @relation(fields: [id_mp_agrupamento_despesa], references: [id_mp_agrupamento_despesa], onDelete: NoAction, onUpdate: NoAction, map: "fke56x8eklgmtdami92wd4e8fgm")
  und_medida                und_medida              @relation(fields: [id_und_medida], references: [id_und_medida], onDelete: NoAction, onUpdate: NoAction, map: "fkfm6mo6o0u3258xlg3qiyf0drb")
}

model mp_manejo_reprodutivo {
  id_mp_manejo_reprodutivo                                    BigInt                 @id(map: "pk_mp_manejo_reprodutivo") @default(autoincrement())
  id_mp_pl_propriedade                                        BigInt?
  id_mp_animal                                                BigInt?
  id_touro                                                    BigInt?
  id_semen                                                    BigInt?
  id_usuario                                                  BigInt?
  id_mp_ocorrencia_cio                                        BigInt?
  dt_cio                                                      DateTime               @db.Date
  dt_diagnostico                                              DateTime?              @db.Date
  dt_secagem                                                  DateTime?              @db.Date
  tp_diagnostico                                              BigInt?
  dt_parto                                                    DateTime?              @db.Date
  tp_parto                                                    BigInt?
  dt_cadastro                                                 DateTime               @db.Timestamp(6)
  ds_observacao                                               String?                @db.VarChar(200)
  ativo                                                       Boolean?               @default(true)
  dt_parto_previsao                                           DateTime?              @db.Date
  dt_secagem_previsao                                         DateTime?              @db.Date
  dt_diagnostico_previsao                                     DateTime?              @db.Date
  ip                                                          Int?
  tp_metodo_empregado                                         Int?                   @db.SmallInt
  primeiro_parto                                              Boolean?               @default(false)
  mp_animal_mp_animal_id_manejo_origemTomp_manejo_reprodutivo mp_animal[]            @relation("mp_animal_id_manejo_origemTomp_manejo_reprodutivo")
  mp_controle_leiteiro                                        mp_controle_leiteiro[]
  mp_animal_mp_manejo_reprodutivo_id_mp_animalTomp_animal     mp_animal?             @relation("mp_manejo_reprodutivo_id_mp_animalTomp_animal", fields: [id_mp_animal], references: [id_mp_animal], onDelete: NoAction, onUpdate: NoAction, map: "fk256qjtvuybk50ig3p9q4015dk")
  mp_ocorrencia_cio                                           mp_ocorrencia_cio?     @relation(fields: [id_mp_ocorrencia_cio], references: [id_mp_ocorrencia_cio], onDelete: NoAction, onUpdate: NoAction, map: "fk_mp_ocorrencia_cio")
  pl_propriedade                                              pl_propriedade?        @relation(fields: [id_mp_pl_propriedade], references: [id_pl_propriedade], onDelete: NoAction, onUpdate: NoAction, map: "fk_mp_pl_propriedade")
  mp_semen                                                    mp_semen?              @relation(fields: [id_semen], references: [id_mp_semen], onDelete: NoAction, onUpdate: NoAction, map: "fk_semen")
  mp_animal_mp_manejo_reprodutivo_id_touroTomp_animal         mp_animal?             @relation("mp_manejo_reprodutivo_id_touroTomp_animal", fields: [id_touro], references: [id_mp_animal], onDelete: NoAction, onUpdate: NoAction, map: "fk_touro")
  usuario                                                     usuario?               @relation(fields: [id_usuario], references: [id_usuario], onDelete: NoAction, onUpdate: NoAction, map: "fk_usuario")
  mp_tp_diagnostico                                           mp_tp_diagnostico?     @relation(fields: [tp_diagnostico], references: [id_mp_tp_diagnostico], onDelete: NoAction, onUpdate: NoAction, map: "fkc6p4723o2oaqhvsllysqtx8ga")
  mp_tp_parto                                                 mp_tp_parto?           @relation(fields: [tp_parto], references: [id_mp_tp_parto], onDelete: NoAction, onUpdate: NoAction, map: "fkl6gn2u65g3osxeil19vpgbuqw")
}

model mp_mov_rebanho {
  id_mp_mov_rebanho     BigInt             @id(map: "pk_mp_mov_rebanho") @default(autoincrement())
  id_mp_animal          BigInt
  id_mp_tp_movimentacao BigInt
  id_mov_rebanho        String?            @db.Char(36)
  dt_movimento          DateTime           @db.Date
  fk_animal             String?            @db.Char(36)
  vl_peso               Float
  vl_movimentacao       Float
  ds_observacao         String?            @db.VarChar(200)
  dt_update_record      DateTime           @db.Timestamp(6)
  ativo                 Boolean            @default(true)
  mp_fluxo_caixa        mp_fluxo_caixa[]
  mp_animal             mp_animal          @relation(fields: [id_mp_animal], references: [id_mp_animal], onDelete: NoAction, onUpdate: NoAction, map: "fk2f8hjvgybc4t5ap25dr5urmt3")
  mp_tp_movimentacao    mp_tp_movimentacao @relation(fields: [id_mp_tp_movimentacao], references: [id_mp_tp_movimentacao], onDelete: NoAction, onUpdate: NoAction, map: "fk2vdmg7xg4q91bi5cje2qw2j6h")
}

model mp_ocorrencia_cio {
  id_mp_ocorrencia_cio  BigInt                  @id(map: "pk_mp_ocorrencia_cio") @default(autoincrement())
  descricao_cio         String                  @db.VarChar(100)
  ativo                 Boolean?
  mp_manejo_reprodutivo mp_manejo_reprodutivo[]
}

model mp_prop_alimentacao_seca {
  id_mp_prop_alimentacao_seca BigInt                     @id(map: "pk_mp_prop_alimentacao_seca") @default(autoincrement())
  id_pl_propriedade           BigInt
  id_prop_alimentacao_seca    String?                    @db.VarChar(36)
  fk_pessoa_propriedade       String?                    @db.VarChar(36)
  nr_ano                      Int
  nr_mes_inicial              Int
  nr_mes_final                Int
  mp_item_alimentacao_seca    mp_item_alimentacao_seca[]
  pl_propriedade              pl_propriedade             @relation(fields: [id_pl_propriedade], references: [id_pl_propriedade], onDelete: NoAction, onUpdate: NoAction, map: "fk2dgssqf43vml6nooegdr8d343")
}

model mp_prop_forrageira {
  id_mp_prop_forrageira                 BigInt                              @id(map: "pk_mp_prop_forrageira") @default(autoincrement())
  id_mp_prop_forrageira_agua            BigInt?
  id_mp_prop_forrageira_estado          BigInt?
  id_mp_prop_forrageira_distancia_fonte BigInt?
  id_mp_prop_forrageira_sombra          BigInt?
  id_pl_propriedade                     BigInt?
  id_mp_forrageira                      BigInt
  id_prop_forrageira                    String?                             @db.Char(36)
  fk_pessoa_propriedade                 String?                             @db.Char(36)
  nr_ano                                Int?                                @db.SmallInt
  fk_forrageira                         Int?
  vl_area_plantada_volumoso             Float?
  nr_pquetes                            Int?                                @db.SmallInt
  sn_aduba                              Boolean?
  dt_update_record                      DateTime?                           @db.Timestamp(6)
  sn_manejo_rotacionado                 Boolean?
  tp_forrageira                         Int?                                @db.SmallInt
  qt_kg_adub_quim_plantio_ha            Float?
  qt_kg_adub_quim_cobertura_ha          Float?
  qt_ton_esterco_ha                     Float?
  vl_area_cortada_verde_ha              Float?
  nr_cortes_verde                       Int?                                @db.SmallInt
  qt_ton_prod_total_verde_ano           Float?
  vl_area_ensilada_ha                   Float?
  vl_prod_total_silagem                 Float?
  vl_prod_total_area                    Float?
  qt_ton_prod_total_area_ano            Float?
  nr_dias_consumo_silagem               Int?
  vl_prod_total_volumoso                Float?
  mp_forrageira                         mp_forrageira                       @relation(fields: [id_mp_forrageira], references: [id_mp_forrageira], onDelete: NoAction, onUpdate: NoAction, map: "fk17r8m2yb6tv6domniomx26iem")
  mp_prop_forrageira_sombra             mp_prop_forrageira_sombra?          @relation(fields: [id_mp_prop_forrageira_sombra], references: [id_mp_prop_forrageira_sombra], onDelete: NoAction, onUpdate: NoAction, map: "fk2bog70hcu6o4nxfwuiv9lt8uk")
  mp_prop_forrageira_distancia_fonte    mp_prop_forrageira_distancia_fonte? @relation(fields: [id_mp_prop_forrageira_distancia_fonte], references: [id_mp_prop_forrageira_distancia_fonte], onDelete: NoAction, onUpdate: NoAction, map: "fk2ngtmqsdi81asn15286ia6ums")
  mp_prop_forrageira_agua               mp_prop_forrageira_agua?            @relation(fields: [id_mp_prop_forrageira_agua], references: [id_mp_prop_forrageira_agua], onDelete: NoAction, onUpdate: NoAction, map: "fk_prop_forrageira_agua")
  mp_prop_forrageira_estado             mp_prop_forrageira_estado?          @relation(fields: [id_mp_prop_forrageira_estado], references: [id_mp_prop_forrageira_estado], onDelete: NoAction, onUpdate: NoAction, map: "fk_prop_forrageira_estado")
  pl_propriedade                        pl_propriedade?                     @relation(fields: [id_pl_propriedade], references: [id_pl_propriedade], onDelete: NoAction, onUpdate: NoAction, map: "fk_prop_forrageira_propriedade")
}

model mp_prop_forrageira_agua {
  id_mp_prop_forrageira_agua BigInt               @id(map: "pk_mp_prop_forrageira_agua") @default(autoincrement())
  descricao                  String?              @db.VarChar(100)
  sn_ativo                   Boolean?
  mp_prop_forrageira         mp_prop_forrageira[]
}

model mp_prop_forrageira_distancia_fonte {
  id_mp_prop_forrageira_distancia_fonte BigInt               @id(map: "pk_mp_prop_forrageira_distancia_fonte") @default(autoincrement())
  descricao                             String?              @db.VarChar(100)
  sn_ativo                              Boolean?
  mp_prop_forrageira                    mp_prop_forrageira[]
}

model mp_prop_forrageira_estado {
  id_mp_prop_forrageira_estado BigInt               @id(map: "pk_mp_prop_forrageira_estado") @default(autoincrement())
  descricao                    String?              @db.VarChar(100)
  sn_ativo                     Boolean?
  mp_prop_forrageira           mp_prop_forrageira[]
}

model mp_prop_forrageira_sombra {
  id_mp_prop_forrageira_sombra BigInt               @id(map: "pk_mp_prop_forrageira_sombra") @default(autoincrement())
  descricao                    String?              @db.VarChar(100)
  sn_ativo                     Boolean?
  mp_prop_forrageira           mp_prop_forrageira[]
}

model mp_qualidade_leite {
  id_mp_qualidade_leite BigInt          @id(map: "pk_mp_qualidade_leite") @default(autoincrement())
  id_pl_propriedade     BigInt?
  id_qualidade_leite    String?         @db.Char(36)
  fk_pessoa_propriedade String?         @db.Char(36)
  dt_lancamento         DateTime        @db.Date
  teor_proteina         Float?
  teor_gordura          Float?
  estrato_seco          Float?
  celula_somatica       Float?
  bacteriana            Float?
  densidade             Float?
  indice_crioscopico    Float?
  dt_update_record      DateTime        @db.Timestamp(6)
  ativo                 Boolean
  antibiotico           Float?
  caseina               Float?
  lactose               Float?
  nitrogenio_ureico     Float?
  perc_caseina          Float?
  sn_antibiotico        Boolean?
  st                    Float?
  pl_propriedade        pl_propriedade? @relation(fields: [id_pl_propriedade], references: [id_pl_propriedade], onDelete: NoAction, onUpdate: NoAction, map: "fk_mp_qualidade_leite_prop")
}

model mp_raca {
  id_mp_raca       BigInt      @id(map: "pk_mp_raca") @default(autoincrement())
  nm_raca          String      @db.VarChar(60)
  dt_update_record DateTime    @db.Timestamp(6)
  ativo            Boolean     @default(true)
  mp_animal        mp_animal[]
  mp_semen         mp_semen[]
}

model mp_rel_anual {
  id_mp_rel_anual            BigInt                  @id(map: "pk_mp_rel_anual") @default(autoincrement())
  id_mp_atendimento_minaspec BigInt
  ano_referencia             BigInt?
  item_relatorio             String?                 @db.VarChar(100)
  sub_item_relatorio         String?                 @db.VarChar(100)
  qtde_01                    Float?
  qtde_02                    Float?
  qtde_03                    Float?
  qtde_04                    Float?
  qtde_05                    Float?
  qtde_06                    Float?
  qtde_07                    Float?
  qtde_08                    Float?
  qtde_09                    Float?
  qtde_10                    Float?
  qtde_11                    Float?
  qtde_12                    Float?
  mp_atendimento_minaspec    mp_atendimento_minaspec @relation(fields: [id_mp_atendimento_minaspec], references: [id_mp_atendimento_minaspec], onDelete: NoAction, onUpdate: NoAction, map: "fk_mp_rel_anual")
}

model mp_semen {
  id_mp_semen           BigInt                  @id(map: "pk_mp_semen") @default(autoincrement())
  id_mp_raca            BigInt
  id_pl_propriedade     BigInt?
  id_semen              String?                 @db.Char(36)
  dt_lancamento         DateTime?               @db.Date
  fk_pessoa_propriedade String?                 @db.Char(36)
  fk_raca               Int?
  nm_semen              String                  @db.VarChar(40)
  ds_codigo             String?                 @db.VarChar(30)
  nm_pai                String?                 @db.VarChar(40)
  vl_semen              Float
  dt_update_record      DateTime                @db.Timestamp(6)
  qt_doses              Int?
  ativo                 Boolean                 @default(true)
  mp_animal             mp_animal[]
  mp_fluxo_caixa        mp_fluxo_caixa[]
  mp_manejo_reprodutivo mp_manejo_reprodutivo[]
  pl_propriedade        pl_propriedade?         @relation(fields: [id_pl_propriedade], references: [id_pl_propriedade], onDelete: NoAction, onUpdate: NoAction, map: "fk1mt36x3lwq9qul6wvp1opxj8h")
  mp_raca               mp_raca                 @relation(fields: [id_mp_raca], references: [id_mp_raca], onDelete: NoAction, onUpdate: NoAction, map: "fk_semen_raca")
}

model mp_tp_diagnostico {
  id_mp_tp_diagnostico  BigInt                  @id(map: "pk_mp_tp_diagnostico") @default(autoincrement())
  descricao_diagnostico String                  @db.VarChar(100)
  ativo                 Boolean?
  mp_manejo_reprodutivo mp_manejo_reprodutivo[]
}

model mp_tp_movimentacao {
  id_mp_tp_movimentacao  BigInt           @id(map: "pk_mp_tp_movimentacao") @default(autoincrement())
  descricao_movimentacao String?          @db.VarChar(50)
  ativo                  Boolean?
  mp_mov_rebanho         mp_mov_rebanho[]
}

model mp_tp_parto {
  id_mp_tp_parto        BigInt                  @id(map: "pk_mp_tp_parto") @default(autoincrement())
  descricao_parto       String                  @db.VarChar(100)
  ativo                 Boolean?
  mp_manejo_reprodutivo mp_manejo_reprodutivo[]
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model municipio_coord {
  id_municipio Int?
  cd_ibge      String? @db.VarChar(15)
  nm_municipio String? @db.VarChar(100)
  nome         String? @db.VarChar(100)
  codigo_ibge  String? @db.VarChar(15)
  latitude     String? @db.VarChar(10)
  longitude    String? @db.VarChar(10)

  @@ignore
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model operadora {
  id_operadora     Int              @id
  nome             String?          @db.VarChar(30)
  descricao        String?          @db.VarChar(100)
  dt_update_record DateTime?        @db.Timestamp(6)
  contato_pessoa   contato_pessoa[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model parametros_gerais {
  id_parametro        BigInt    @id(map: "pk_parametros_gerais") @default(autoincrement())
  nome_parametro      String    @db.VarChar(255)
  valor_parametro     String?   @db.VarChar(255)
  descricao_parametro String?   @db.VarChar(255)
  dt_update_record    DateTime? @db.Timestamp(6)
  json_content        String?
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model perfil {
  id_perfil        BigInt           @id(map: "pk_perfil") @default(autoincrement())
  descricao_perfil String           @db.VarChar(255)
  dt_update_record DateTime?        @db.Timestamp(6)
  perfil_modulo    perfil_modulo[]
  perfil_usuario   perfil_usuario[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model perfil_modulo {
  id_perfil          BigInt
  id_modulo          BigInt
  permissao_leitura  Boolean
  permissao_escrita  Boolean
  permissao_exclusao Boolean
  dt_update_record   DateTime? @db.Timestamp(6)
  modulo             modulo    @relation(fields: [id_modulo], references: [id_modulo], onDelete: NoAction, onUpdate: NoAction, map: "fk_modulo")
  perfil             perfil    @relation(fields: [id_perfil], references: [id_perfil], onDelete: NoAction, onUpdate: NoAction, map: "fk_perfil")

  @@id([id_perfil, id_modulo], map: "pk_perfil_modulo")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model perfil_usuario {
  id_perfil        BigInt
  id_usuario       BigInt
  dt_update_record DateTime? @db.Timestamp(6)
  usuario          usuario   @relation(fields: [id_usuario], references: [id_usuario], onDelete: NoAction, onUpdate: NoAction, map: "fk4fufsx76e5t1sjsi7wd9bb76")
  perfil           perfil    @relation(fields: [id_perfil], references: [id_perfil], onDelete: NoAction, onUpdate: NoAction, map: "fk9yj8yi3w6sgcnwlakjp6jppes")

  @@id([id_perfil, id_usuario], map: "pk_perfil_usuario")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model pl_propriedade {
  id_pl_propriedade            BigInt                         @id(map: "pk_pl_propiedade") @default(autoincrement())
  nome_propriedade             String                         @db.VarChar(100)
  logradouro                   String?                        @db.VarChar(80)
  bairro                       String?                        @db.VarChar(80)
  complemento                  String?                        @db.VarChar(80)
  cep                          String?                        @db.VarChar(8)
  numero                       String?                        @db.VarChar(15)
  area_total                   Decimal?                       @db.Decimal(13, 4)
  geo_ponto                    Unsupported("geometry")?
  geo_ponto_texto              String?                        @db.VarChar(255)
  area_condominio              Boolean?                       @default(false)
  origem_ocupacao              String?                        @db.VarChar(100)
  atividade_principal          String?                        @db.VarChar(100)
  numero_registro_imovel       String?                        @db.VarChar(50)
  nirf                         String?                        @db.VarChar(100)
  car                          String?                        @db.VarChar(100)
  ccir                         String?                        @db.VarChar(100)
  numero_instalacao_cemig      String?                        @db.VarChar(15)
  distancia_sede               Decimal?                       @db.Decimal(15, 2)
  tempo_ocupacao_imovel        Float?
  id_emater                    String?                        @db.VarChar(36)
  id_distrito                  Int?
  id_municipio                 Int?
  id_und_empresa               String?                        @db.Char(5)
  id_sincronismo               String?                        @default(dbgenerated("(uuid_generate_v4())::character varying(36)")) @db.VarChar(36)
  id_tipo_logradouro           Int?
  dt_update_record             DateTime?                      @default(now()) @db.Timestamp(6)
  ativo                        Boolean?
  ds_roteiro_acesso            String?                        @db.VarChar(500)
  sn_ctd                       Int?
  id_car                       Int?                           @db.SmallInt
  as_analise                   as_analise[]
  at_cli_atend_prop            at_cli_atend_prop[]
  at_prf_see_propriedade       at_prf_see_propriedade[]
  bp_atestado_propriedade      bp_atestado_propriedade[]
  cc_cert_cafe                 cc_cert_cafe[]
  cp_custo_individual_agricola cp_custo_individual_agricola[]
  cp_custo_individual_pecuaria cp_custo_individual_pecuaria[]
  cr_imoveis_agricola          cr_imoveis_agricola[]
  cr_imoveis_pecuaria          cr_imoveis_pecuaria[]
  cr_proponente_propriedade    cr_proponente_propriedade[]
  cr_propriedade_contrato      cr_propriedade_contrato[]
  in_inventario                in_inventario[]
  is_quest                     is_quest[]
  mp_animal                    mp_animal[]
  mp_atendimento_minaspec      mp_atendimento_minaspec[]
  mp_dados_complementares      mp_dados_complementares[]
  mp_fluxo_caixa               mp_fluxo_caixa[]
  mp_intervencao               mp_intervencao[]
  mp_manejo_reprodutivo        mp_manejo_reprodutivo[]
  mp_prop_alimentacao_seca     mp_prop_alimentacao_seca[]
  mp_prop_forrageira           mp_prop_forrageira[]
  mp_qualidade_leite           mp_qualidade_leite[]
  mp_semen                     mp_semen[]
  sep_tpo_logradouro           sep_tpo_logradouro?            @relation(fields: [id_tipo_logradouro], references: [id_tpo_logradouro], onDelete: NoAction, onUpdate: NoAction, map: "fk_pl_propr_sep_tpo_logradouro")
  sep_municipio                sep_municipio?                 @relation(fields: [id_municipio], references: [id_municipio], onDelete: NoAction, onUpdate: NoAction, map: "fk_pl_propriedade_municipio")
  sep_distrito                 sep_distrito?                  @relation(fields: [id_distrito], references: [id_distrito], onDelete: NoAction, onUpdate: NoAction, map: "fk_pl_propriedade_sep_distrito")
  ger_und_empresa              ger_und_empresa?               @relation(fields: [id_und_empresa], references: [id_und_empresa], onDelete: NoAction, onUpdate: NoAction, map: "fk_pl_propriedade_uregi")
  pl_propriedade_ger_pessoa    pl_propriedade_ger_pessoa[]

  @@index([nome_propriedade, logradouro])
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model pl_propriedade_ger_pessoa {
  id_pl_propriedade          BigInt
  id_pessoa_demeter          BigInt
  id_und_empresa             String?          @db.Char(5)
  id_pl_tipo_posse           Int?             @db.SmallInt
  id_sincronismo_cliente     String?          @db.VarChar(36)
  id_sincronismo_propriedade String?          @db.VarChar(36)
  dt_update_record           DateTime?        @default(now()) @db.Timestamp(6)
  dt_inicio_contrato         DateTime?        @db.Timestamp(6)
  dt_termino_contrato        DateTime?        @db.Timestamp(6)
  ger_pessoa                 ger_pessoa       @relation(fields: [id_pessoa_demeter], references: [id_pessoa_demeter], onDelete: NoAction, onUpdate: NoAction, map: "fk_ger_pessoa_propriedade")
  pl_propriedade             pl_propriedade   @relation(fields: [id_pl_propriedade], references: [id_pl_propriedade], onDelete: NoAction, onUpdate: NoAction, map: "fk_propriedade_ger_pessoa")
  ger_und_empresa            ger_und_empresa? @relation(fields: [id_und_empresa], references: [id_und_empresa], onDelete: NoAction, onUpdate: NoAction, map: "fk_propriedade_ger_und_empresa")
  pl_tipo_posse              pl_tipo_posse?   @relation(fields: [id_pl_tipo_posse], references: [id_pl_tipo_posse], onDelete: NoAction, onUpdate: NoAction, map: "fk_propriedade_pl_tipo_posse")

  @@id([id_pl_propriedade, id_pessoa_demeter], map: "pk_propriedade_ger_pessoa")
}

model pl_tipo_posse {
  id_pl_tipo_posse           Int                          @id(map: "pk_pl_tipo_posse") @default(autoincrement()) @db.SmallInt
  descricao                  String                       @db.VarChar(40)
  dt_update_record           DateTime?                    @db.Timestamp(6)
  ativo                      Boolean                      @default(true)
  cr_investimento_proponente cr_investimento_proponente[]
  cr_propriedade_contrato    cr_propriedade_contrato[]
  is_quest                   is_quest[]
  pl_propriedade_ger_pessoa  pl_propriedade_ger_pessoa[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model rm_administracao_publica {
  id_rm_administracao_publica BigInt        @id(map: "pk_rm_administracao_publica") @default(autoincrement())
  id_municipio                Int
  cargo                       String?       @db.VarChar(100)
  nome                        String        @db.VarChar(255)
  partido                     String?       @db.VarChar(100)
  email                       String?       @db.VarChar(100)
  telefone                    String?       @db.VarChar(11)
  dt_update_record            DateTime?     @db.Timestamp(6)
  sep_municipio               sep_municipio @relation(fields: [id_municipio], references: [id_municipio], onDelete: NoAction, onUpdate: NoAction, map: "fk_sep_municrm_administracao_publica")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model rm_agendas_estrategicas {
  id_rm_agendas_estrategicas BigInt        @id(map: "pk_rm_agendas_estrategicas") @default(autoincrement())
  id_municipio               Int
  agenda_estrategica         String?       @db.VarChar(150)
  dt_update_record           DateTime?     @db.Timestamp(6)
  sep_municipio              sep_municipio @relation(fields: [id_municipio], references: [id_municipio], onDelete: NoAction, onUpdate: NoAction, map: "fk_sep_municrm_agendas_estrategicas")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model rm_agroindustria {
  id_rm_agroindustria BigInt        @id(map: "pk_rm_agroindustria") @default(autoincrement())
  id_municipio        Int
  produto             String?       @db.VarChar(150)
  unidade             String?       @db.VarChar(50)
  quantidade          Int?
  valor_producao      Float?
  dt_update_record    DateTime?     @db.Timestamp(6)
  sep_municipio       sep_municipio @relation(fields: [id_municipio], references: [id_municipio], onDelete: NoAction, onUpdate: NoAction, map: "fk_sep_municrm_agroindustria")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model rm_agua_esgoto {
  id_municipio     Int
  ligacoes_agua    Int?
  ligacoes_esgoto  Int?
  dt_update_record DateTime?     @db.Timestamp(6)
  sep_municipio    sep_municipio @relation(fields: [id_municipio], references: [id_municipio], onDelete: NoAction, onUpdate: NoAction, map: "fk_sep_agua_esgoto")

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model rm_altitude_municipio {
  id_municipio     Int
  sede             Int?
  maxima           Int?
  minima           Int?
  local_maxima     String?       @db.VarChar(100)
  local_minima     String?       @db.VarChar(100)
  dt_update_record DateTime?     @db.Timestamp(6)
  sep_municipio    sep_municipio @relation(fields: [id_municipio], references: [id_municipio], onDelete: NoAction, onUpdate: NoAction, map: "fk_sep_munic_altitude_munic")

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model rm_area_total_municipio_km2 {
  id_municipio     Int
  area_total       Float?
  dt_update_record DateTime?     @db.Timestamp(6)
  sep_municipio    sep_municipio @relation(fields: [id_municipio], references: [id_municipio], onDelete: NoAction, onUpdate: NoAction, map: "fk_sep_municipio")

  @@ignore
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model rm_armaz_produtos {
  id_rm_armaz_produtos BigInt        @id(map: "pk_rm_armaz_produtos") @default(autoincrement())
  id_municipio         Int
  estrutura            String?       @db.VarChar(50)
  produto              String?       @db.VarChar(50)
  capacidade           Float?
  municipio            String?       @db.VarChar(50)
  dt_update_record     DateTime?     @db.Timestamp(6)
  sep_municipio        sep_municipio @relation(fields: [id_municipio], references: [id_municipio], onDelete: NoAction, onUpdate: NoAction, map: "fk7h46hu9mldccsfjuanln02acp")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model rm_arrecadacao_icms {
  id_municipio     Int
  comercio         Int?
  agropecuaria     Int?
  industria        Int?
  transporte       Int?
  outros           Int?
  dt_update_record DateTime?     @db.Timestamp(6)
  sep_municipio    sep_municipio @relation(fields: [id_municipio], references: [id_municipio], onDelete: NoAction, onUpdate: NoAction, map: "fk_sep_munic_arrecadacao_icms")

  @@ignore
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model rm_aspectos_culturais {
  id_rm_aspectos_culturais BigInt        @id(map: "pk_rm_aspectos_culturais") @default(autoincrement())
  id_municipio             Int
  aspecto_cultural         String?       @db.VarChar(255)
  dt_update_record         DateTime?     @db.Timestamp(6)
  sep_municipio            sep_municipio @relation(fields: [id_municipio], references: [id_municipio], onDelete: NoAction, onUpdate: NoAction, map: "fk_sep_municrm_aspectos_culturais")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model rm_associacoes_comunit_rural {
  id_rm_associacoes_comunit_rural BigInt        @id(map: "pk_rm_associacoes_comunit_rural") @default(autoincrement())
  id_municipio                    Int
  nome                            String?       @db.VarChar(100)
  cnpj                            String?       @db.VarChar(14)
  nome_presidente                 String?       @db.VarChar(100)
  termino_mandato                 DateTime?     @db.Date
  dt_update_record                DateTime?     @db.Timestamp(6)
  sep_municipio                   sep_municipio @relation(fields: [id_municipio], references: [id_municipio], onDelete: NoAction, onUpdate: NoAction, map: "fk_sep_municrm_associacoes_comunit_rural")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model rm_associativ_cooperativ {
  id_rm_associativ_cooperativ BigInt        @id(map: "pk_rm_associativ_cooperativ") @default(autoincrement())
  id_municipio                Int
  instituicao                 String?       @db.VarChar(255)
  num_associados              Int?
  contato                     String?       @db.VarChar(100)
  cnpj                        String?       @db.VarChar(14)
  dt_update_record            DateTime?     @db.Timestamp(6)
  sep_municipio               sep_municipio @relation(fields: [id_municipio], references: [id_municipio], onDelete: NoAction, onUpdate: NoAction, map: "fk_sep_municrm_associativ_cooperativ")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model rm_bacia_hidrografica {
  id_municipio            Int
  nome_bacia_hidrografica String?       @db.VarChar(150)
  dt_update_record        DateTime?     @db.Timestamp(6)
  sep_municipio           sep_municipio @relation(fields: [id_municipio], references: [id_municipio], onDelete: NoAction, onUpdate: NoAction, map: "fk_sep_munic_bacia_hidrog")

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model rm_captacao_agua {
  id_municipio         Int
  nascente             Int?
  cisterna             Int?
  corrego_rio_barragem Int?
  poco_artesiano       Int?
  sistema_publico      Int?
  dt_update_record     DateTime?     @db.Timestamp(6)
  sep_municipio        sep_municipio @relation(fields: [id_municipio], references: [id_municipio], onDelete: NoAction, onUpdate: NoAction, map: "fk_sep_captacao_agua")

  @@ignore
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model rm_comunidades_existentes {
  id_rm_comunidades_existentes BigInt        @id(map: "pk_rm_comunidades_existentes") @default(autoincrement())
  id_municipio                 Int
  denominacao                  String?       @db.VarChar(255)
  num_familias                 Int?
  distancia_km                 Int?
  principais_exploracoes       String?       @db.VarChar(255)
  assistida                    Boolean?
  referencia_contato           String?       @db.VarChar(100)
  celular                      String?       @db.VarChar(11)
  dt_update_record             DateTime?     @db.Timestamp(6)
  sep_municipio                sep_municipio @relation(fields: [id_municipio], references: [id_municipio], onDelete: NoAction, onUpdate: NoAction, map: "fk_sep_municrm_comunidades_existentes")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model rm_credito_rural {
  id_municipio                Int
  aplicado_municipio          Float?
  numero_beneficiarios        Float?
  numero_daps_emitidas_ativas Float?
  dt_update_record            DateTime?     @db.Timestamp(6)
  sep_municipio               sep_municipio @relation(fields: [id_municipio], references: [id_municipio], onDelete: NoAction, onUpdate: NoAction, map: "fk_sep_cred_rural")

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model rm_destino_dejetos {
  id_municipio           Int
  ceu_aberto             Int?
  corpo_agua             Int?
  fossa_rudimentar       Int?
  fossa_septica          Int?
  fossa_ecologica        Int?
  estacao_tratamento_ete Int?
  dt_update_record       DateTime?     @db.Timestamp(6)
  sep_municipio          sep_municipio @relation(fields: [id_municipio], references: [id_municipio], onDelete: NoAction, onUpdate: NoAction, map: "fk_sep_destino_dejetos")

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model rm_destino_lixo {
  id_municipio     Int
  ceu_aberto       Int?
  enterrado        Int?
  queima           Int?
  coleta_lixo      Int?
  dt_update_record DateTime?     @db.Timestamp(6)
  sep_municipio    sep_municipio @relation(fields: [id_municipio], references: [id_municipio], onDelete: NoAction, onUpdate: NoAction, map: "fk_sep_destino_lixo")

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model rm_estabelecimento_ensino_ur {
  id_municipio     Int
  urbana           Int?
  rural            Int?
  dt_update_record DateTime?     @db.Timestamp(6)
  sep_municipio    sep_municipio @relation(fields: [id_municipio], references: [id_municipio], onDelete: NoAction, onUpdate: NoAction, map: "fk_sep_estab_ensino_ur")

  @@ignore
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model rm_estradas_estaduais_federais {
  id_rm_estradas_estaduais_federais BigInt        @id(map: "pk_rm_estradas_estaduais_federais") @default(autoincrement())
  id_municipio                      Int
  estrada                           String        @db.VarChar(100)
  dt_update_record                  DateTime?     @db.Timestamp(6)
  sep_municipio                     sep_municipio @relation(fields: [id_municipio], references: [id_municipio], onDelete: NoAction, onUpdate: NoAction, map: "fk38c53wco4ly14ft1ayx5njct2")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model rm_estrutura_fundiaria {
  id_rm_estrutura_fundiaria BigInt        @id(map: "pk_rm_estrutura_fundiaria") @default(autoincrement())
  id_municipio              Int
  tamanho_propriedade       String?       @db.VarChar(50)
  numero                    Int?
  area_ha                   Float?
  dt_update_record          DateTime?     @db.Timestamp(6)
  sep_municipio             sep_municipio @relation(fields: [id_municipio], references: [id_municipio], onDelete: NoAction, onUpdate: NoAction, map: "fk_sep_municrm_estrutura_fundiaria")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model rm_exploracao_agricola {
  id_rm_exploracao_agricola BigInt        @id(map: "pk_rm_exploracao_agricola") @default(autoincrement())
  id_municipio              Int
  exploracao                String?       @db.VarChar(50)
  area_ha                   Int?
  produtividade             Int?
  producao                  Int?
  valor_producao            Float?
  dt_update_record          DateTime?     @db.Timestamp(6)
  sep_municipio             sep_municipio @relation(fields: [id_municipio], references: [id_municipio], onDelete: NoAction, onUpdate: NoAction, map: "fk1qrf4fqxss0aa0x2nk55upk6e")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model rm_exploracao_nao_agricola {
  id_rm_exploracao_nao_agricola BigInt        @id(map: "pk_rm_exploracao_nao_agricola") @default(autoincrement())
  id_municipio                  Int
  produto                       String?       @db.VarChar(50)
  tipo_artesanato               String?       @db.VarChar(150)
  dt_update_record              DateTime?     @db.Timestamp(6)
  sep_municipio                 sep_municipio @relation(fields: [id_municipio], references: [id_municipio], onDelete: NoAction, onUpdate: NoAction, map: "fk_sep_municrm_exploracao_nao_agricola")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model rm_exploracao_pecuaria {
  id_rm_exploracao_pecuaria BigInt        @id(map: "pk_rm_exploracao_pecuaria") @default(autoincrement())
  id_municipio              Int
  exploracao                String?       @db.VarChar(50)
  produtividade             Int?
  unidades                  String?       @db.VarChar(50)
  quantidades               Int?
  valor_producao            Float?
  dt_update_record          DateTime?     @db.Timestamp(6)
  sep_municipio             sep_municipio @relation(fields: [id_municipio], references: [id_municipio], onDelete: NoAction, onUpdate: NoAction, map: "fk_sep_municrm_exploracao_pecuaria")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model rm_filtro {
  id_rm_filtro        BigInt                @id(map: "pk_filtro") @default(autoincrement())
  descricao           String?               @db.VarChar(60)
  sn_ativo            Int                   @default(1) @db.SmallInt
  dt_update_record    DateTime?             @db.Timestamp(6)
  rm_filtro_municipio rm_filtro_municipio[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model rm_filtro_municipio {
  id_rm_filtro  BigInt
  id_municipio  BigInt
  rm_filtro     rm_filtro     @relation(fields: [id_rm_filtro], references: [id_rm_filtro], onDelete: NoAction, onUpdate: NoAction, map: "fk_rm_filtro")
  sep_municipio sep_municipio @relation(fields: [id_municipio], references: [id_municipio], onDelete: NoAction, onUpdate: NoAction, map: "fk_sep_municipio")

  @@id([id_rm_filtro, id_municipio], map: "pk_rm_filtro_municipio")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model rm_habitacao {
  id_rm_habitacao  BigInt        @id(map: "pk_rm_habitacao") @default(autoincrement())
  id_municipio     Int
  rural            Float?
  urbano           Float?
  tipo_habitacao   String?       @db.VarChar(20)
  dt_update_record DateTime?     @db.Timestamp(6)
  sep_municipio    sep_municipio @relation(fields: [id_municipio], references: [id_municipio], onDelete: NoAction, onUpdate: NoAction, map: "fk1e29kywffmg6n6ct6ecc093bp")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model rm_idh_municipio {
  id_municipio     Int
  idh              Float?
  dt_update_record DateTime?     @db.Timestamp(6)
  sep_municipio    sep_municipio @relation(fields: [id_municipio], references: [id_municipio], onDelete: NoAction, onUpdate: NoAction, map: "fk_sep_munic_idh_municipio")

  @@ignore
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model rm_indice_pluviometrico_medio {
  id_rm_indice_pluvio BigInt        @id(map: "pk_rm_indice_pluviometrico_medio") @default(autoincrement())
  id_municipio        Int
  mes                 String?       @db.VarChar(9)
  indice              Int?
  dt_update_record    DateTime?     @db.Timestamp(6)
  sep_municipio       sep_municipio @relation(fields: [id_municipio], references: [id_municipio], onDelete: NoAction, onUpdate: NoAction, map: "fk1ssvsqdhootltp896l8s447e7")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model rm_inst_assistenciais {
  id_rm_inst_assistenciais BigInt        @id(map: "pk_rm_inst_assistenciais") @default(autoincrement())
  id_municipio             Int
  nome_inst                String?       @db.VarChar(150)
  numero_beneficiarios     Int?
  cnpj                     String?       @db.VarChar(14)
  dt_update_record         DateTime?     @db.Timestamp(6)
  sep_municipio            sep_municipio @relation(fields: [id_municipio], references: [id_municipio], onDelete: NoAction, onUpdate: NoAction, map: "fk_sep_municrm_inst_assistenciais")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model rm_inst_financeiras {
  id_rm_inst_financeiras BigInt        @id(map: "pk_rm_inst_financeiras") @default(autoincrement())
  id_municipio           Int
  nome_instituicao       String?       @db.VarChar(150)
  municipio_sede         String?       @db.VarChar(50)
  email                  String?       @db.VarChar(150)
  telefone               String?       @db.VarChar(11)
  dt_update_record       DateTime?     @db.Timestamp(6)
  sep_municipio          sep_municipio @relation(fields: [id_municipio], references: [id_municipio], onDelete: NoAction, onUpdate: NoAction, map: "fk_sep_municrm_inst_financeiras")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model rm_inst_publicas {
  id_rm_inst_publicas BigInt        @id(map: "pk_rm_inst_publicas") @default(autoincrement())
  id_municipio        Int
  nome_instituicao    String?       @db.VarChar(150)
  municipio_sede      String?       @db.VarChar(50)
  email               String?       @db.VarChar(150)
  telefone            String?       @db.VarChar(11)
  dt_update_record    DateTime?     @db.Timestamp(6)
  sep_municipio       sep_municipio @relation(fields: [id_municipio], references: [id_municipio], onDelete: NoAction, onUpdate: NoAction, map: "fk9h97kvoof1lbnv03a1iyqcmnx")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model rm_jornais {
  id_rm_jornais    BigInt        @id(map: "pk_rm_jornais") @default(autoincrement())
  id_municipio     Int
  nome_jornal      String?       @db.VarChar(50)
  tiragem          Int?
  periodicidade    String?       @db.VarChar(20)
  email            String?       @db.VarChar(150)
  telefone         String?       @db.VarChar(11)
  dt_update_record DateTime?     @db.Timestamp(6)
  sep_municipio    sep_municipio @relation(fields: [id_municipio], references: [id_municipio], onDelete: NoAction, onUpdate: NoAction, map: "fk_sep_municrm_jornais")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model rm_mercado_insumos {
  id_rm_mercado_insumos BigInt        @id(map: "pk_rm_mercado_insumos") @default(autoincrement())
  id_municipio          Int
  produto               String?       @db.VarChar(50)
  mercado               String?       @db.VarChar(50)
  percentual            Float?
  dt_update_record      DateTime?     @db.Timestamp(6)
  sep_municipio         sep_municipio @relation(fields: [id_municipio], references: [id_municipio], onDelete: NoAction, onUpdate: NoAction, map: "fk_sep_municrm_mercado_insumos")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model rm_mercado_produtos {
  id_rm_mercado_produtos BigInt        @id(map: "pk_rm_mercado_produtos") @default(autoincrement())
  id_municipio           Int
  produto                String?       @db.VarChar(50)
  mercado                String?       @db.VarChar(50)
  percentual             Float?
  dt_update_record       DateTime?     @db.Timestamp(6)
  sep_municipio          sep_municipio @relation(fields: [id_municipio], references: [id_municipio], onDelete: NoAction, onUpdate: NoAction, map: "fk_sep_municrm_mercado_produtos")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model rm_metadados_colunas {
  id_rm_metadados_colunas Int
  nome_tabela             String?   @db.VarChar(30)
  nome_coluna             String?   @db.VarChar(30)
  descricao_coluna        String?   @db.VarChar(150)
  dt_update_record        DateTime? @db.Timestamp(6)

  @@ignore
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model rm_metadados_tabelas {
  id_rm_metadados           BigInt    @id(map: "pk_rm_metadados_tabelas") @default(autoincrement())
  nome_tabela               String    @unique(map: "uq_rm_metadados_tab_nom_tabela") @db.VarChar(30)
  descricao_tabela          String?   @db.VarChar(255)
  data_atualizacao          DateTime  @db.Date
  fonte_atualizacao         String    @db.VarChar(100)
  periodicidade_atualizacao String?   @db.VarChar(30)
  dt_update_record          DateTime? @db.Timestamp(6)
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model rm_numero_agricultores {
  id_municipio        Int
  agricultor_familiar Int?
  demais              Int?
  dt_update_record    DateTime?     @db.Timestamp(6)
  sep_municipio       sep_municipio @relation(fields: [id_municipio], references: [id_municipio], onDelete: NoAction, onUpdate: NoAction, map: "fk_sep_munic_num_agricultores")

  @@ignore
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model rm_numero_alunos_ur {
  id_rm_numero_alunos_ur BigInt        @id(map: "pk_rm_numero_alunos_ur") @default(autoincrement())
  id_municipio           Int
  ensino_basico          String?       @db.VarChar(50)
  urbano                 Int?
  rural                  Int?
  dt_update_record       DateTime?     @db.Timestamp(6)
  sep_municipio          sep_municipio @relation(fields: [id_municipio], references: [id_municipio], onDelete: NoAction, onUpdate: NoAction, map: "fk_sep_municrm_numero_alunos_ur")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model rm_numero_consumidores_energia {
  id_municipio     Int
  rural            Int?
  comercial        Int?
  industrial       Int?
  residencial      Int?
  outros           Int?
  dt_update_record DateTime?     @db.Timestamp(6)
  sep_municipio    sep_municipio @relation(fields: [id_municipio], references: [id_municipio], onDelete: NoAction, onUpdate: NoAction, map: "fk_sep_munic_num_cons_energia")

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model rm_ocorrencia_geadas {
  id_municipio                   Int
  mes_maior_frequencia           String?       @db.VarChar(9)
  num_anos_ocorrencia_ultimos_10 Int?
  dt_update_record               DateTime?     @db.Timestamp(6)
  sep_municipio                  sep_municipio @relation(fields: [id_municipio], references: [id_municipio], onDelete: NoAction, onUpdate: NoAction, map: "fk_sep_munic_ocorr_geadas")

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model rm_ocupacao_setor_economico {
  id_municipio     Int
  agropecuario     Int?
  industrial       Int?
  comercial        Int?
  transporte       Int?
  outros           Int?
  dt_update_record DateTime?     @db.Timestamp(6)
  sep_municipio    sep_municipio @relation(fields: [id_municipio], references: [id_municipio], onDelete: NoAction, onUpdate: NoAction, map: "fk_sep_munic_ocup_set_econ")

  @@ignore
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model rm_outros_programas {
  id_rm_outros_programas BigInt        @id(map: "pk_rm_outros_programas") @default(autoincrement())
  id_municipio           Int
  nome_programa          String?       @db.VarChar(150)
  dt_update_record       DateTime?     @db.Timestamp(6)
  sep_municipio          sep_municipio @relation(fields: [id_municipio], references: [id_municipio], onDelete: NoAction, onUpdate: NoAction, map: "fk_sep_municrm_outros_programas")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model rm_pib_municipal {
  id_municipio                Int
  setor_primario_agropecuario Int?
  setor_secundario_industria  Int?
  setor_terciario_servicos    Int?
  dt_update_record            DateTime?     @db.Timestamp(6)
  sep_municipio               sep_municipio @relation(fields: [id_municipio], references: [id_municipio], onDelete: NoAction, onUpdate: NoAction, map: "fk_sep_munic_pib_municipal")

  @@ignore
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model rm_politicas_estad_federais {
  id_rm_politicas_estad_federais BigInt        @id(map: "pk_rm_politicas_estad_federais") @default(autoincrement())
  id_municipio                   Int
  nome_programa                  String?       @db.VarChar(150)
  dt_update_record               DateTime?     @db.Timestamp(6)
  sep_municipio                  sep_municipio @relation(fields: [id_municipio], references: [id_municipio], onDelete: NoAction, onUpdate: NoAction, map: "fk_sep_municrm_politicas_estad_federais")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model rm_politicas_municipais {
  id_rm_politicas_municipais BigInt        @id(map: "pk_rm_politicas_municipais") @default(autoincrement())
  id_municipio               Int
  nome_programa              String?       @db.VarChar(150)
  dt_update_record           DateTime?     @db.Timestamp(6)
  sep_municipio              sep_municipio @relation(fields: [id_municipio], references: [id_municipio], onDelete: NoAction, onUpdate: NoAction, map: "fk_sep_municrm_politicas_municipais")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model rm_populacao_municipio {
  id_municipio     Int
  urbana           Int?
  rural            Int?
  dt_update_record DateTime?     @db.Timestamp(6)
  sep_municipio    sep_municipio @relation(fields: [id_municipio], references: [id_municipio], onDelete: NoAction, onUpdate: NoAction, map: "fk_sep_munic_pop_munic")

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model rm_posse_terra {
  id_municipio     Int
  proprietario     Int?
  arrendatario     Int?
  parceiro         Int?
  meeiro           Int?
  dt_update_record DateTime?     @db.Timestamp(6)
  sep_municipio    sep_municipio @relation(fields: [id_municipio], references: [id_municipio], onDelete: NoAction, onUpdate: NoAction, map: "fk_sep_munic_posse_terra")

  @@ignore
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model rm_potencial_hidrico {
  id_rm_potencial_hidrico BigInt        @id(map: "pk_rm_potencial_hidrico") @default(autoincrement())
  id_municipio            Int
  nome_potencial_hidrico  String?       @db.VarChar(20)
  dt_update_record        DateTime?     @db.Timestamp(6)
  sep_municipio           sep_municipio @relation(fields: [id_municipio], references: [id_municipio], onDelete: NoAction, onUpdate: NoAction, map: "fk_sep_munic_potencial_hidrico")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model rm_princ_recursos_hidricos {
  id_municipio                Int
  nome_princ_recursos_hidrico String?       @db.VarChar(150)
  dt_update_record            DateTime?     @db.Timestamp(6)
  sep_municipio               sep_municipio @relation(fields: [id_municipio], references: [id_municipio], onDelete: NoAction, onUpdate: NoAction, map: "fk_sep_munic_princ_rec_hid")

  @@ignore
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model rm_radios {
  id_rm_radios     BigInt        @id(map: "pk_rm_radios") @default(autoincrement())
  id_municipio     Int
  nome_radio       String?       @db.VarChar(50)
  email            String?       @db.VarChar(150)
  telefone         String?       @db.VarChar(11)
  dt_update_record DateTime?     @db.Timestamp(6)
  sep_municipio    sep_municipio @relation(fields: [id_municipio], references: [id_municipio], onDelete: NoAction, onUpdate: NoAction, map: "fk15jeaevyxuoebsli21whmd3a6")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model rm_recursos_hidricos {
  id_municipio              Int
  potencial_hidrico         String?       @db.VarChar(100)
  principal_recurso_hidrico Boolean?
  bacia_hidrografica        Boolean?
  sep_municipio             sep_municipio @relation(fields: [id_municipio], references: [id_municipio], onDelete: NoAction, onUpdate: NoAction, map: "fk_sep_munic_recursos_hidricos")

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model rm_revestimento_floristico {
  id_municipio         Int
  lavouras_permanentes Int?
  lavouras_temporarias Int?
  pastagens_naturais   Int?
  pastagens_formadas   Int?
  matas_naturais       Int?
  reflorestamento      Int?
  areas_improdutivas   Int?
  dt_update_record     DateTime?     @db.Timestamp(6)
  sep_municipio        sep_municipio @relation(fields: [id_municipio], references: [id_municipio], onDelete: NoAction, onUpdate: NoAction, map: "fk_sep_munic_rev_floristico")

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model rm_saneamento_urbano {
  id_municipio         Int
  rede_coletora_esgoto Boolean?
  tratamento_esgoto    Boolean?
  coleta_lixo          Boolean?
  aterro_controlado    Boolean?
  uso_ceu_aberto       Boolean?
  aterro_sanitario     Boolean?
  usina_reciclagem     Boolean?
  usina_compostagem    Boolean?
  dt_update_record     DateTime?     @db.Timestamp(6)
  sep_municipio        sep_municipio @relation(fields: [id_municipio], references: [id_municipio], onDelete: NoAction, onUpdate: NoAction, map: "fk_sep_agua_esgoto")

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model rm_saude {
  id_municipio         Int
  farmacias            Int?
  laboratorios         Int?
  hospitais            Int?
  posto_saude_urbano   Int?
  posto_saude_rural    Int?
  servico_odonto_rural Int?
  equipe_saude_familia Int?
  servico_ambulancia   Int?
  dt_update_record     DateTime?     @db.Timestamp(6)
  sep_municipio        sep_municipio @relation(fields: [id_municipio], references: [id_municipio], onDelete: NoAction, onUpdate: NoAction, map: "fk_sep_saude")

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model rm_secret_agricultura {
  id_municipio     Int
  nome_secretario  String?       @db.VarChar(50)
  email            String?       @db.VarChar(150)
  telefone         String?       @db.VarChar(11)
  dt_update_record DateTime?     @db.Timestamp(6)
  sep_municipio    sep_municipio @relation(fields: [id_municipio], references: [id_municipio], onDelete: NoAction, onUpdate: NoAction, map: "fk_sep_munic_secret_agric")

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model rm_solos {
  id_municipio     Int
  tipo_predominane String?       @db.VarChar(100)
  textura          String?       @db.VarChar(100)
  dt_update_record DateTime?     @db.Timestamp(6)
  sep_municipio    sep_municipio @relation(fields: [id_municipio], references: [id_municipio], onDelete: NoAction, onUpdate: NoAction, map: "fk_sep_munic_solos")

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model rm_telefonia_linhas {
  id_municipio     Int
  rural            Int?
  urbana           Int?
  comunitarias     Int?
  dt_update_record DateTime?     @db.Timestamp(6)
  sep_municipio    sep_municipio @relation(fields: [id_municipio], references: [id_municipio], onDelete: NoAction, onUpdate: NoAction, map: "fk_sep_inst_financ")

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model rm_temperatura_media {
  id_municipio     Int
  media            Int?
  alta             Int?
  maxima           Int?
  dt_update_record DateTime?     @db.Timestamp(6)
  sep_municipio    sep_municipio @relation(fields: [id_municipio], references: [id_municipio], onDelete: NoAction, onUpdate: NoAction, map: "fk_sep_munic_temp_media")

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model rm_tratamento_agua {
  id_municipio     Int
  tipo_padrao      Int?
  nenhum           Int?
  cloro            Int?
  filtracao_lenta  Int?
  fervura          Int?
  dt_update_record DateTime?     @db.Timestamp(6)
  sep_municipio    sep_municipio @relation(fields: [id_municipio], references: [id_municipio], onDelete: NoAction, onUpdate: NoAction, map: "fk_sep_tratamento_agua")

  @@ignore
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model rm_tv_local {
  id_rm_tv_local   BigInt        @id(map: "pk_rm_tv_local") @default(autoincrement())
  id_municipio     Int
  nome_tv          String?       @db.VarChar(50)
  email            String?       @db.VarChar(150)
  telefone         String?       @db.VarChar(11)
  dt_update_record DateTime?     @db.Timestamp(6)
  sep_municipio    sep_municipio @relation(fields: [id_municipio], references: [id_municipio], onDelete: NoAction, onUpdate: NoAction, map: "fk_sep_municrm_tv_local")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sep_distrito {
  id_distrito      Int              @id
  fk_municipio     Int?
  nm_distrito      String?          @db.VarChar(100)
  dt_update_record DateTime         @db.Timestamp(6)
  ger_end_pessoa   ger_end_pessoa[]
  pl_propriedade   pl_propriedade[]
  sep_municipio    sep_municipio?   @relation(fields: [fk_municipio], references: [id_municipio], onDelete: NoAction, map: "fk_sep_distrito_municipio")
}

model sep_estado {
  id_estado        Int             @id
  fk_pais          Int
  ds_estado        String?         @db.VarChar(60)
  sg_estado        String?         @db.Char(2)
  cd_ibge          String?         @db.VarChar(15)
  dt_update_record DateTime        @db.Timestamp(6)
  ger_pessoa       ger_pessoa[]
  sep_pais         sep_pais        @relation(fields: [fk_pais], references: [id_pais], onDelete: NoAction, map: "fk_sep_estado_1")
  sep_municipio    sep_municipio[]
}

model sep_microterritorio {
  id_microterritorio Int             @id
  nm_microterritorio String?         @db.VarChar(100)
  sep_municipio      sep_municipio[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sep_municipio {
  id_municipio                   Int                              @id
  fk_estado                      Int
  nm_municipio                   String?                          @db.VarChar(100)
  cd_ibge                        String?                          @db.VarChar(15)
  cd_cpi                         String?                          @db.VarChar(15)
  fk_reg_planejamento            Int?                             @db.SmallInt
  fk_reg_administrativa          Int?                             @db.SmallInt
  dt_update_record               DateTime                         @db.Timestamp(6)
  fk_microterritorio             Int?
  data_atualizacao_rm            DateTime?                        @db.Date
  tamanho_modulo_fiscal          Float?
  nr_latitude                    String?                          @db.VarChar(10)
  nr_longitude                   String?                          @db.VarChar(10)
  as_laboratorio                 as_laboratorio[]
  at_prf_config_municipio        at_prf_config_municipio[]
  cr_custeio_agricola            cr_custeio_agricola[]
  cr_custeio_pecuaria            cr_custeio_pecuaria[]
  cr_investimento                cr_investimento[]
  ger_end_pessoa                 ger_end_pessoa[]
  ger_und_empresa                ger_und_empresa[]
  is_quest                       is_quest[]
  pl_propriedade                 pl_propriedade[]
  rm_administracao_publica       rm_administracao_publica[]
  rm_agendas_estrategicas        rm_agendas_estrategicas[]
  rm_agroindustria               rm_agroindustria[]
  rm_agua_esgoto                 rm_agua_esgoto[]                 @ignore
  rm_altitude_municipio          rm_altitude_municipio[]          @ignore
  rm_area_total_municipio_km2    rm_area_total_municipio_km2[]    @ignore
  rm_armaz_produtos              rm_armaz_produtos[]
  rm_arrecadacao_icms            rm_arrecadacao_icms[]            @ignore
  rm_aspectos_culturais          rm_aspectos_culturais[]
  rm_associacoes_comunit_rural   rm_associacoes_comunit_rural[]
  rm_associativ_cooperativ       rm_associativ_cooperativ[]
  rm_bacia_hidrografica          rm_bacia_hidrografica[]          @ignore
  rm_captacao_agua               rm_captacao_agua[]               @ignore
  rm_comunidades_existentes      rm_comunidades_existentes[]
  rm_credito_rural               rm_credito_rural[]               @ignore
  rm_destino_dejetos             rm_destino_dejetos[]             @ignore
  rm_destino_lixo                rm_destino_lixo[]                @ignore
  rm_estabelecimento_ensino_ur   rm_estabelecimento_ensino_ur[]   @ignore
  rm_estradas_estaduais_federais rm_estradas_estaduais_federais[]
  rm_estrutura_fundiaria         rm_estrutura_fundiaria[]
  rm_exploracao_agricola         rm_exploracao_agricola[]
  rm_exploracao_nao_agricola     rm_exploracao_nao_agricola[]
  rm_exploracao_pecuaria         rm_exploracao_pecuaria[]
  rm_filtro_municipio            rm_filtro_municipio[]
  rm_habitacao                   rm_habitacao[]
  rm_idh_municipio               rm_idh_municipio[]               @ignore
  rm_indice_pluviometrico_medio  rm_indice_pluviometrico_medio[]
  rm_inst_assistenciais          rm_inst_assistenciais[]
  rm_inst_financeiras            rm_inst_financeiras[]
  rm_inst_publicas               rm_inst_publicas[]
  rm_jornais                     rm_jornais[]
  rm_mercado_insumos             rm_mercado_insumos[]
  rm_mercado_produtos            rm_mercado_produtos[]
  rm_numero_agricultores         rm_numero_agricultores[]         @ignore
  rm_numero_alunos_ur            rm_numero_alunos_ur[]
  rm_numero_consumidores_energia rm_numero_consumidores_energia[] @ignore
  rm_ocorrencia_geadas           rm_ocorrencia_geadas[]           @ignore
  rm_ocupacao_setor_economico    rm_ocupacao_setor_economico[]    @ignore
  rm_outros_programas            rm_outros_programas[]
  rm_pib_municipal               rm_pib_municipal[]               @ignore
  rm_politicas_estad_federais    rm_politicas_estad_federais[]
  rm_politicas_municipais        rm_politicas_municipais[]
  rm_populacao_municipio         rm_populacao_municipio[]         @ignore
  rm_posse_terra                 rm_posse_terra[]                 @ignore
  rm_potencial_hidrico           rm_potencial_hidrico[]
  rm_princ_recursos_hidricos     rm_princ_recursos_hidricos[]     @ignore
  rm_radios                      rm_radios[]
  rm_recursos_hidricos           rm_recursos_hidricos[]           @ignore
  rm_revestimento_floristico     rm_revestimento_floristico[]     @ignore
  rm_saneamento_urbano           rm_saneamento_urbano[]           @ignore
  rm_saude                       rm_saude[]                       @ignore
  rm_secret_agricultura          rm_secret_agricultura[]          @ignore
  rm_solos                       rm_solos[]                       @ignore
  rm_telefonia_linhas            rm_telefonia_linhas[]            @ignore
  rm_temperatura_media           rm_temperatura_media[]           @ignore
  rm_tratamento_agua             rm_tratamento_agua[]             @ignore
  rm_tv_local                    rm_tv_local[]
  sep_distrito                   sep_distrito[]
  sep_estado                     sep_estado                       @relation(fields: [fk_estado], references: [id_estado], onDelete: NoAction, map: "fk_sep_municipio_1")
  sep_reg_planejamento           sep_reg_planejamento?            @relation(fields: [fk_reg_planejamento], references: [id_reg_planejamento], onDelete: NoAction, map: "fk_sep_municipio_2")
  sep_reg_administrativa         sep_reg_administrativa?          @relation(fields: [fk_reg_administrativa], references: [id_reg_administrativa], onDelete: NoAction, map: "fk_sep_municipio_3")
  sep_microterritorio            sep_microterritorio?             @relation(fields: [fk_microterritorio], references: [id_microterritorio], onDelete: NoAction, map: "fk_sep_municipio_5")

  @@index([nm_municipio], map: "sep_municipio_idx1")
}

model sep_pais {
  id_pais          Int          @id @db.SmallInt
  nm_pais          String?      @db.VarChar(60)
  sg_pais          String?      @db.VarChar(5)
  dt_update_record DateTime     @db.Timestamp(6)
  sep_estado       sep_estado[]
}

model sep_reg_administrativa {
  id_reg_administrativa Int             @id @db.SmallInt
  ds_reg_administrativa String?         @db.VarChar(40)
  dt_update_record      DateTime        @db.Timestamp(6)
  sep_municipio         sep_municipio[]
}

model sep_reg_planejamento {
  id_reg_planejamento Int             @id @db.SmallInt
  ds_reg_planejamento String?         @unique(map: "sep_reg_planejamento_idx1") @db.VarChar(100)
  dt_update_record    DateTime        @db.Timestamp(6)
  sep_municipio       sep_municipio[]
}

model sep_tpo_logradouro {
  id_tpo_logradouro Int               @id
  ds_tpo_logradouro String?           @db.VarChar(15)
  dt_update_record  DateTime          @db.Timestamp(6)
  sg_log_ticket     String?           @db.Char(4)
  ger_end_pessoa    ger_end_pessoa[]
  ger_und_empresa   ger_und_empresa[]
  pl_propriedade    pl_propriedade[]
}

model spa_atendimento {
  id_atendimento          Int                       @id(map: "pk_spa_atendimento")
  ds_atendimento          String?                   @db.VarChar(60)
  sg_unidade              String?                   @db.Char(2)
  ds_hint                 String?                   @db.VarChar(100)
  sn_repeticao            Int?                      @db.SmallInt
  fk_grupo_atendimento    Int
  sn_ativo                Int                       @default(1) @db.SmallInt
  sn_lancto_qtde          Int                       @default(0) @db.SmallInt
  sn_meta_estrategica     Int?                      @db.SmallInt
  dt_update_record        DateTime                  @db.Timestamp(6)
  sn_chamada_publica      Int?                      @default(0) @db.SmallInt
  sn_lanctos_qtdes        Int?                      @db.SmallInt
  sn_paa_pnae             Int?                      @db.SmallInt
  sn_convenio_ater        Int?                      @db.SmallInt
  sn_reforma_agraria      Int?                      @db.SmallInt
  sn_coletivo             Int?                      @db.SmallInt
  fk_produto              Int?
  sn_informa_atividade    Int?                      @db.SmallInt
  sn_informa_dados        Int?                      @db.SmallInt
  spa_grupo_atendimento   spa_grupo_atendimento     @relation(fields: [fk_grupo_atendimento], references: [id_grupo_atendimento], onDelete: NoAction, map: "fk_spa_atendimento_1")
  ger_produto             ger_produto?              @relation(fields: [fk_produto], references: [id_produto], onDelete: NoAction, map: "fk_spa_atendimento_2")
  spa_chamada_atendimento spa_chamada_atendimento[]
}

model spa_chamada_atendimento {
  id_spa_chamada_atendimento Int                 @id(map: "pk_spa_chamada_atendimento")
  fk_chamada_publica         Int
  fk_atendimento             Int
  nr_ano                     Int
  dt_update_record           DateTime            @db.Timestamp(6)
  sn_chm_ativa               Int?                @db.SmallInt
  sn_validacao               Int?                @db.SmallInt
  spa_chamada_publica        spa_chamada_publica @relation(fields: [fk_chamada_publica], references: [id_chamada_publica], onDelete: NoAction, map: "fk_spa_chamada_atendimento_1")
  spa_atendimento            spa_atendimento     @relation(fields: [fk_atendimento], references: [id_atendimento], onDelete: NoAction, map: "fk_spa_chamada_atendimento_2")

  @@unique([fk_atendimento, fk_chamada_publica], map: "unq1_spa_chamada_atendimento")
}

model spa_chamada_publica {
  id_chamada_publica      Int                       @id
  nm_chamada_publica      String?                   @db.VarChar(100)
  sg_chamada_publica      String?                   @db.VarChar(10)
  nr_ano                  Int?                      @db.SmallInt
  tp_chamada              Int                       @db.SmallInt
  dt_update_record        DateTime                  @db.Timestamp(6)
  dt_inicial              DateTime?                 @db.Date
  dt_final                DateTime?                 @db.Date
  sn_valida_atendimento   Int?                      @db.SmallInt
  sn_minas_sem_fome       Int?                      @db.SmallInt
  sn_pmater               Int?                      @db.SmallInt
  sn_super_grupo          Int?                      @db.SmallInt
  dt_max_validacao        DateTime?                 @db.Date
  sn_produtor_assistido   Int?                      @db.SmallInt
  nr_produtor_assistido   Int?                      @db.SmallInt
  spa_chamada_atendimento spa_chamada_atendimento[]
}

model spa_grupo_atendimento {
  id_grupo_atendimento Int               @id(map: "pk_spa_grupo_atendimento")
  ds_grupo_atendimento String?           @db.VarChar(100)
  sn_totalizar_grupo   Int?              @db.SmallInt
  dt_update_record     DateTime          @db.Timestamp(6)
  spa_atendimento      spa_atendimento[]
}

model spa_indicador {
  id_indicador        Int                  @id
  ds_indicador        String?              @db.VarChar(100)
  sn_ativo            Int?                 @default(1) @db.SmallInt
  sg_indicador        String?              @db.VarChar(10)
  dt_update_record    DateTime             @db.Timestamp(6)
  sn_chamada_publica  Int?                 @default(0) @db.SmallInt
  sn_coletivo         Int?                 @db.SmallInt
  sn_meta_estrategica Int?                 @db.SmallInt
  spa_meta_indicador  spa_meta_indicador[]
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model spa_meta_assistencia_cliente {
  id_assistencia_cliente Int?
  tp_tipo                Int?      @db.SmallInt
  fk_und_empresa         String?   @db.VarChar(5)
  nr_anomes              Int?
  qt_meta                Int?
  dt_update_record       DateTime? @db.Timestamp(6)

  @@ignore
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model spa_meta_categoria_municipio {
  id_meta_municipio                                                                  Int              @id
  fk_cat_pessoa                                                                      Int              @db.SmallInt
  fk_und_empresa                                                                     String           @db.Char(5)
  nr_anomes                                                                          Int
  qt_meta                                                                            Int?
  dt_update_record                                                                   DateTime?        @db.Timestamp(6)
  tp_meta                                                                            Int?             @db.SmallInt
  fk_und_empresa_uregi                                                               String?          @db.Char(5)
  ger_und_empresa_spa_meta_categoria_municipio_fk_und_empresa_uregiToger_und_empresa ger_und_empresa? @relation("spa_meta_categoria_municipio_fk_und_empresa_uregiToger_und_empresa", fields: [fk_und_empresa_uregi], references: [id_und_empresa], onDelete: NoAction, onUpdate: NoAction, map: "fk_meta_cat_municipio_uregi")
  ger_cat_pessoa                                                                     ger_cat_pessoa   @relation(fields: [fk_cat_pessoa], references: [id_cat_pessoa], onDelete: NoAction, map: "fk_spa_meta_municipio_1")
  ger_und_empresa_spa_meta_categoria_municipio_fk_und_empresaToger_und_empresa       ger_und_empresa  @relation("spa_meta_categoria_municipio_fk_und_empresaToger_und_empresa", fields: [fk_und_empresa], references: [id_und_empresa], onDelete: NoAction, map: "fk_spa_meta_municipio_2")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model spa_meta_chamada_publica {
  id_meta_chamada_publica                                                        Int              @id
  fk_und_empresa                                                                 String?          @db.Char(5)
  fk_chamada_publica                                                             Int?
  nr_anomes                                                                      Int?
  qt_meta                                                                        Int?
  fk_usuario                                                                     String?          @db.Char(5)
  dt_update_record                                                               DateTime?        @db.Timestamp(6)
  fk_und_empresa_uregi                                                           String?          @db.Char(5)
  ger_und_empresa_spa_meta_chamada_publica_fk_und_empresa_uregiToger_und_empresa ger_und_empresa? @relation("spa_meta_chamada_publica_fk_und_empresa_uregiToger_und_empresa", fields: [fk_und_empresa_uregi], references: [id_und_empresa], onDelete: NoAction, onUpdate: NoAction, map: "fk_meta_chamada_publica_uregi")
  ger_und_empresa_spa_meta_chamada_publica_fk_und_empresaToger_und_empresa       ger_und_empresa? @relation("spa_meta_chamada_publica_fk_und_empresaToger_und_empresa", fields: [fk_und_empresa], references: [id_und_empresa], onDelete: NoAction, map: "fk_spa_meta_chamada_publica_1")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model spa_meta_indicador {
  id_meta_indicador                                                        Int              @id
  fk_indicador                                                             Int
  fk_und_empresa                                                           String?          @db.Char(5)
  nr_anomes                                                                Int?
  qt_meta                                                                  Int?
  fk_usuario                                                               String?          @db.Char(5)
  dt_update_record                                                         DateTime?        @db.Timestamp(6)
  fk_und_empresa_uregi                                                     String?          @db.Char(5)
  ger_und_empresa_spa_meta_indicador_fk_und_empresa_uregiToger_und_empresa ger_und_empresa? @relation("spa_meta_indicador_fk_und_empresa_uregiToger_und_empresa", fields: [fk_und_empresa_uregi], references: [id_und_empresa], onDelete: NoAction, onUpdate: NoAction, map: "fk_meta_indicador_uregi")
  ger_und_empresa_spa_meta_indicador_fk_und_empresaToger_und_empresa       ger_und_empresa? @relation("spa_meta_indicador_fk_und_empresaToger_und_empresa", fields: [fk_und_empresa], references: [id_und_empresa], onDelete: NoAction, map: "fk_spa_meta_indicador_1")
  spa_indicador                                                            spa_indicador    @relation(fields: [fk_indicador], references: [id_indicador], onDelete: NoAction, map: "fk_spa_meta_indicador_3")

  @@unique([fk_indicador, nr_anomes, fk_und_empresa], map: "spa_meta_indicador_idx1")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model spa_meta_rda {
  id_meta_pmater     Int?
  fk_und_empresa     String? @db.VarChar(5)
  fk_chamada_publica Int?
  nr_anomes          Int?
  qt_meta            Int?
  fk_acao            Int?

  @@ignore
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model spatial_ref_sys {
  srid      Int     @id
  auth_name String? @db.VarChar(256)
  auth_srid Int?
  srtext    String? @db.VarChar(2048)
  proj4text String? @db.VarChar(2048)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sub_categoria_pessoa {
  id                           Int                            @id(map: "pk_sub_categoria_pessoa") @db.SmallInt
  descricao                    String?                        @unique(map: "ix_sub_categoria_pessoa_01") @db.VarChar(80)
  data_atualizacao             DateTime                       @db.Timestamp(6)
  cat_pessoa                   Int                            @db.SmallInt
  dt_update_record             DateTime?                      @default(now()) @db.Date
  ger_cat_pessoa               ger_cat_pessoa                 @relation(fields: [cat_pessoa], references: [id_cat_pessoa], onDelete: NoAction, map: "fk_ger_cat_pessoa_sub_categoria")
  sub_categoria_pessoa_relacao sub_categoria_pessoa_relacao[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sub_categoria_pessoa_relacao {
  id                     Int                  @id(map: "pk_sub_categoria_pessoa_relacao") @default(autoincrement())
  fk_sub_cat_pessoa      Int                  @db.SmallInt
  fk_pessoa              Int
  dt_update_record       DateTime             @db.Timestamp(6)
  id_und_empresa         String?              @db.Char(5)
  id_sincronismo         String?              @default(dbgenerated("(uuid_generate_v4())::character varying(36)")) @db.VarChar(36)
  id_sincronismo_cliente String?              @db.VarChar(36)
  sub_categoria_pessoa   sub_categoria_pessoa @relation(fields: [fk_sub_cat_pessoa], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk4527u1rd04s3jpyqt1sto03fj")
  ger_und_empresa        ger_und_empresa?     @relation(fields: [id_und_empresa], references: [id_und_empresa], onDelete: NoAction, onUpdate: NoAction, map: "fk_sub_categoria_ger_und_empresa")
  ger_pessoa             ger_pessoa           @relation(fields: [fk_pessoa], references: [id_pessoa_demeter], onDelete: Cascade, map: "fk_sub_categoria_pessoa_relacao_1")

  @@unique([fk_pessoa, fk_sub_cat_pessoa], map: "fk_pessoa_sub_categoria_pessoa")
  @@index([fk_pessoa], map: "idx_fk_pessoa")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model survey {
  id_survey          BigInt            @id(map: "pk_survey") @default(autoincrement())
  id_survey_project  BigInt
  name_survey        String            @db.VarChar(255)
  description_survey String?           @db.VarChar(255)
  date_creation      DateTime          @db.Date
  date_deadline      DateTime?         @db.Date
  name_creator       String            @db.VarChar(255)
  survey_project     survey_project    @relation(fields: [id_survey_project], references: [id_survey_project], onDelete: NoAction, onUpdate: NoAction, map: "fk_survey_survey_project")
  survey_data        survey_data[]
  survey_question    survey_question[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model survey_answer {
  id_survey_answer   BigInt               @id(map: "pk_survey_answer") @default(autoincrement())
  id_survey_question BigInt
  answer             String?
  survey_question    survey_question      @relation(fields: [id_survey_question], references: [id_survey_question], onDelete: NoAction, onUpdate: NoAction, map: "fk_survey_answer_survey_quest")
  survey_answer_item survey_answer_item[]
  survey_data_item   survey_data_item[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model survey_answer_item {
  id_survey_answer_item BigInt             @id(map: "pk_survey_answer_item") @default(autoincrement())
  id_survey_answer      BigInt
  answer_item           String?
  survey_answer         survey_answer      @relation(fields: [id_survey_answer], references: [id_survey_answer], onDelete: NoAction, onUpdate: NoAction, map: "fk_survey_answer_it_sur_answe")
  survey_data_item      survey_data_item[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model survey_data {
  id_survey_data    BigInt             @id(map: "pk_survey_data") @default(autoincrement())
  id_survey_project BigInt
  id_survey         BigInt
  name_respondent   String?            @db.VarChar(255)
  date_conclusion   DateTime           @db.Date
  survey            survey             @relation(fields: [id_survey], references: [id_survey], onDelete: NoAction, onUpdate: NoAction, map: "fk_survey_data_survey")
  survey_project    survey_project     @relation(fields: [id_survey_project], references: [id_survey_project], onDelete: NoAction, onUpdate: NoAction, map: "fk_survey_data_survey_project")
  survey_data_item  survey_data_item[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model survey_data_item {
  id_survey_data_item   BigInt              @id(map: "pk_survey_data_item") @default(autoincrement())
  id_survey_data        BigInt
  id_survey_question    BigInt
  id_survey_answer      BigInt
  id_survey_answer_item BigInt?
  date_conclusion       DateTime            @db.Date
  survey_answer_item    String?             @db.VarChar(255)
  survey_answer_item    survey_answer_item? @relation(fields: [id_survey_answer_item], references: [id_survey_answer_item], onDelete: NoAction, onUpdate: NoAction, map: "fk_survey_data_it_sur_answ_it")
  survey_answer         survey_answer       @relation(fields: [id_survey_answer], references: [id_survey_answer], onDelete: NoAction, onUpdate: NoAction, map: "fk_survey_data_it_survey_answ")
  survey_data           survey_data         @relation(fields: [id_survey_data], references: [id_survey_data], onDelete: NoAction, onUpdate: NoAction, map: "fk_survey_data_it_survey_data")
  survey_question       survey_question     @relation(fields: [id_survey_question], references: [id_survey_question], onDelete: NoAction, onUpdate: NoAction, map: "fk_survey_data_it_survey_ques")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model survey_project {
  id_survey_project   BigInt        @id(map: "pk_survey_project") @default(autoincrement())
  name_survey_project String        @db.VarChar(255)
  description_project String?       @db.VarChar(255)
  date_creation       DateTime      @db.Date
  name_creator        String        @db.VarChar(255)
  survey              survey[]
  survey_data         survey_data[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model survey_question {
  id_survey_question      BigInt               @id(map: "pk_survey_question") @default(autoincrement())
  id_survey               BigInt
  id_survey_question_type BigInt
  question                String
  date_creation           DateTime             @db.Date
  date_deadline           DateTime?            @db.Date
  name_creator            String?              @db.VarChar(255)
  survey_answer           survey_answer[]
  survey_data_item        survey_data_item[]
  survey                  survey               @relation(fields: [id_survey], references: [id_survey], onDelete: NoAction, onUpdate: NoAction, map: "fk_survey_question_survey")
  survey_question_type    survey_question_type @relation(fields: [id_survey_question_type], references: [id_survey_question_type], onDelete: NoAction, onUpdate: NoAction, map: "fk_survey_question_type")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model survey_question_type {
  id_survey_question_type BigInt            @id(map: "pk_survey_question_type") @default(autoincrement())
  question_type           String            @db.VarChar(50)
  description_type        String            @db.VarChar(255)
  survey_question         survey_question[]
}

model sym_channel {
  channel_id                                             String        @id @db.VarChar(128)
  processing_order                                       Int           @default(1)
  max_batch_size                                         Int           @default(1000)
  max_batch_to_send                                      Int           @default(60)
  max_data_to_route                                      Int           @default(100000)
  extract_period_millis                                  Int           @default(0)
  enabled                                                Int           @default(1) @db.SmallInt
  use_old_data_to_route                                  Int           @default(1) @db.SmallInt
  use_row_data_to_route                                  Int           @default(1) @db.SmallInt
  use_pk_data_to_route                                   Int           @default(1) @db.SmallInt
  reload_flag                                            Int           @default(0) @db.SmallInt
  file_sync_flag                                         Int           @default(0) @db.SmallInt
  contains_big_lob                                       Int           @default(0) @db.SmallInt
  batch_algorithm                                        String        @default("default") @db.VarChar(50)
  data_loader_type                                       String        @default("default") @db.VarChar(50)
  description                                            String?       @db.VarChar(255)
  queue                                                  String        @default("default") @db.VarChar(25)
  max_network_kbps                                       Decimal       @default(0.000) @db.Decimal(10, 3)
  data_event_action                                      String?       @db.Char(1)
  create_time                                            DateTime?     @db.Timestamp(6)
  last_update_by                                         String?       @db.VarChar(50)
  last_update_time                                       DateTime?     @db.Timestamp(6)
  sym_trigger_sym_trigger_channel_idTosym_channel        sym_trigger[] @relation("sym_trigger_channel_idTosym_channel")
  sym_trigger_sym_trigger_reload_channel_idTosym_channel sym_trigger[] @relation("sym_trigger_reload_channel_idTosym_channel")
}

model sym_conflict {
  conflict_id          String              @id @db.VarChar(50)
  source_node_group_id String              @db.VarChar(50)
  target_node_group_id String              @db.VarChar(50)
  target_channel_id    String?             @db.VarChar(128)
  target_catalog_name  String?             @db.VarChar(255)
  target_schema_name   String?             @db.VarChar(255)
  target_table_name    String?             @db.VarChar(255)
  detect_type          String              @db.VarChar(128)
  detect_expression    String?
  resolve_type         String              @db.VarChar(128)
  ping_back            String              @db.VarChar(128)
  resolve_changes_only Int?                @default(0) @db.SmallInt
  resolve_row_only     Int?                @default(0) @db.SmallInt
  create_time          DateTime            @db.Timestamp(6)
  last_update_by       String?             @db.VarChar(50)
  last_update_time     DateTime            @db.Timestamp(6)
  sym_node_group_link  sym_node_group_link @relation(fields: [source_node_group_id, target_node_group_id], references: [source_node_group_id, target_node_group_id], onDelete: NoAction, onUpdate: NoAction, map: "sym_fk_cf_2_grp_lnk")
}

model sym_context {
  name             String    @id @db.VarChar(80)
  context_value    String?
  create_time      DateTime? @db.Timestamp(6)
  last_update_time DateTime? @db.Timestamp(6)
}

model sym_data {
  data_id         BigInt    @id @default(autoincrement())
  table_name      String    @db.VarChar(255)
  event_type      String    @db.Char(1)
  row_data        String?
  pk_data         String?
  old_data        String?
  trigger_hist_id Int
  channel_id      String?   @db.VarChar(128)
  transaction_id  String?   @db.VarChar(255)
  source_node_id  String?   @db.VarChar(50)
  external_data   String?   @db.VarChar(50)
  node_list       String?   @db.VarChar(255)
  create_time     DateTime? @db.Timestamp(6)

  @@index([data_id, channel_id], map: "sym_idx_d_channel_id")
}

model sym_data_event {
  data_id     BigInt
  batch_id    BigInt
  router_id   String    @db.VarChar(50)
  create_time DateTime? @db.Timestamp(6)

  @@id([data_id, batch_id, router_id])
  @@index([batch_id], map: "sym_idx_de_batchid")
}

model sym_data_gap {
  start_id             BigInt
  end_id               BigInt
  status               String?  @db.Char(2)
  create_time          DateTime @db.Timestamp(6)
  last_update_hostname String?  @db.VarChar(255)
  last_update_time     DateTime @db.Timestamp(6)

  @@id([start_id, end_id])
  @@index([status], map: "sym_idx_dg_status")
}

model sym_extension {
  extension_id     String    @id @db.VarChar(50)
  extension_type   String    @db.VarChar(10)
  interface_name   String?   @db.VarChar(255)
  node_group_id    String    @db.VarChar(50)
  enabled          Int       @default(1) @db.SmallInt
  extension_order  Int       @default(1)
  extension_text   String?
  create_time      DateTime? @db.Timestamp(6)
  last_update_by   String?   @db.VarChar(50)
  last_update_time DateTime? @db.Timestamp(6)
}

model sym_extract_request {
  request_id       BigInt    @id
  node_id          String    @db.VarChar(50)
  queue            String?   @db.VarChar(128)
  status           String?   @db.Char(2)
  start_batch_id   BigInt
  end_batch_id     BigInt
  trigger_id       String    @db.VarChar(128)
  router_id        String    @db.VarChar(50)
  last_update_time DateTime? @db.Timestamp(6)
  create_time      DateTime? @db.Timestamp(6)
}

model sym_file_incoming {
  relative_dir       String  @db.VarChar(255)
  file_name          String  @db.VarChar(128)
  last_event_type    String  @db.Char(1)
  node_id            String  @db.VarChar(50)
  file_modified_time BigInt?

  @@id([relative_dir, file_name])
}

model sym_file_snapshot {
  trigger_id         String   @db.VarChar(128)
  router_id          String   @db.VarChar(50)
  relative_dir       String   @db.VarChar(255)
  file_name          String   @db.VarChar(128)
  channel_id         String   @default("filesync") @db.VarChar(128)
  reload_channel_id  String   @default("filesync_reload") @db.VarChar(128)
  last_event_type    String   @db.Char(1)
  crc32_checksum     BigInt?
  file_size          BigInt?
  file_modified_time BigInt?
  last_update_time   DateTime @db.Timestamp(6)
  last_update_by     String?  @db.VarChar(50)
  create_time        DateTime @db.Timestamp(6)

  @@id([trigger_id, router_id, relative_dir, file_name])
  @@index([reload_channel_id], map: "sym_idx_f_snpsht_chid")
}

model sym_file_trigger {
  trigger_id              String                    @id @db.VarChar(128)
  channel_id              String                    @default("filesync") @db.VarChar(128)
  reload_channel_id       String                    @default("filesync_reload") @db.VarChar(128)
  base_dir                String                    @db.VarChar(255)
  recurse                 Int                       @default(1) @db.SmallInt
  includes_files          String?                   @db.VarChar(255)
  excludes_files          String?                   @db.VarChar(255)
  sync_on_create          Int                       @default(1) @db.SmallInt
  sync_on_modified        Int                       @default(1) @db.SmallInt
  sync_on_delete          Int                       @default(1) @db.SmallInt
  sync_on_ctl_file        Int                       @default(0) @db.SmallInt
  delete_after_sync       Int                       @default(0) @db.SmallInt
  before_copy_script      String?
  after_copy_script       String?
  create_time             DateTime                  @db.Timestamp(6)
  last_update_by          String?                   @db.VarChar(50)
  last_update_time        DateTime                  @db.Timestamp(6)
  sym_file_trigger_router sym_file_trigger_router[]
}

model sym_file_trigger_router {
  trigger_id           String           @db.VarChar(128)
  router_id            String           @db.VarChar(50)
  enabled              Int              @default(1) @db.SmallInt
  initial_load_enabled Int              @default(1) @db.SmallInt
  target_base_dir      String?          @db.VarChar(255)
  conflict_strategy    String           @default("source_wins") @db.VarChar(128)
  create_time          DateTime         @db.Timestamp(6)
  last_update_by       String?          @db.VarChar(50)
  last_update_time     DateTime         @db.Timestamp(6)
  sym_file_trigger     sym_file_trigger @relation(fields: [trigger_id], references: [trigger_id], onDelete: NoAction, onUpdate: NoAction, map: "sym_fk_ftr_2_ftrg")
  sym_router           sym_router       @relation(fields: [router_id], references: [router_id], onDelete: NoAction, onUpdate: NoAction, map: "sym_fk_ftr_2_rtr")

  @@id([trigger_id, router_id])
}

model sym_grouplet {
  grouplet_id                 String                        @id @db.VarChar(50)
  grouplet_link_policy        String                        @default("I") @db.Char(1)
  description                 String?                       @db.VarChar(255)
  create_time                 DateTime                      @db.Timestamp(6)
  last_update_by              String?                       @db.VarChar(50)
  last_update_time            DateTime                      @db.Timestamp(6)
  sym_grouplet_link           sym_grouplet_link[]
  sym_trigger_router_grouplet sym_trigger_router_grouplet[]
}

model sym_grouplet_link {
  grouplet_id      String       @db.VarChar(50)
  external_id      String       @db.VarChar(255)
  create_time      DateTime     @db.Timestamp(6)
  last_update_by   String?      @db.VarChar(50)
  last_update_time DateTime     @db.Timestamp(6)
  sym_grouplet     sym_grouplet @relation(fields: [grouplet_id], references: [grouplet_id], onDelete: NoAction, onUpdate: NoAction, map: "sym_fk_gpltlnk_2_gplt")

  @@id([grouplet_id, external_id])
}

model sym_incoming_batch {
  batch_id              BigInt
  node_id               String    @db.VarChar(50)
  channel_id            String?   @db.VarChar(128)
  status                String?   @db.Char(2)
  error_flag            Int?      @default(0) @db.SmallInt
  network_millis        BigInt    @default(0)
  filter_millis         BigInt    @default(0)
  database_millis       BigInt    @default(0)
  failed_row_number     BigInt    @default(0)
  failed_line_number    BigInt    @default(0)
  byte_count            BigInt    @default(0)
  statement_count       BigInt    @default(0)
  fallback_insert_count BigInt    @default(0)
  fallback_update_count BigInt    @default(0)
  ignore_count          BigInt    @default(0)
  ignore_row_count      BigInt    @default(0)
  missing_delete_count  BigInt    @default(0)
  skip_count            BigInt    @default(0)
  sql_state             String?   @db.VarChar(10)
  sql_code              Int       @default(0)
  sql_message           String?
  last_update_hostname  String?   @db.VarChar(255)
  last_update_time      DateTime? @db.Timestamp(6)
  create_time           DateTime? @db.Timestamp(6)
  summary               String?   @db.VarChar(255)

  @@id([batch_id, node_id])
  @@index([error_flag], map: "sym_idx_ib_in_error")
  @@index([create_time, status], map: "sym_idx_ib_time_status")
}

model sym_incoming_error {
  batch_id            BigInt
  node_id             String    @db.VarChar(50)
  failed_row_number   BigInt
  failed_line_number  BigInt    @default(0)
  target_catalog_name String?   @db.VarChar(255)
  target_schema_name  String?   @db.VarChar(255)
  target_table_name   String    @db.VarChar(255)
  event_type          String    @db.Char(1)
  binary_encoding     String    @default("HEX") @db.VarChar(10)
  column_names        String
  pk_column_names     String
  row_data            String?
  old_data            String?
  cur_data            String?
  resolve_data        String?
  resolve_ignore      Int?      @default(0) @db.SmallInt
  conflict_id         String?   @db.VarChar(50)
  create_time         DateTime? @db.Timestamp(6)
  last_update_by      String?   @db.VarChar(50)
  last_update_time    DateTime  @db.Timestamp(6)

  @@id([batch_id, node_id, failed_row_number])
}

model sym_load_filter {
  load_filter_id        String   @id @db.VarChar(50)
  load_filter_type      String   @db.VarChar(10)
  source_node_group_id  String   @db.VarChar(50)
  target_node_group_id  String   @db.VarChar(50)
  target_catalog_name   String?  @db.VarChar(255)
  target_schema_name    String?  @db.VarChar(255)
  target_table_name     String?  @db.VarChar(255)
  filter_on_update      Int      @default(1) @db.SmallInt
  filter_on_insert      Int      @default(1) @db.SmallInt
  filter_on_delete      Int      @default(1) @db.SmallInt
  before_write_script   String?
  after_write_script    String?
  batch_complete_script String?
  batch_commit_script   String?
  batch_rollback_script String?
  handle_error_script   String?
  create_time           DateTime @db.Timestamp(6)
  last_update_by        String?  @db.VarChar(50)
  last_update_time      DateTime @db.Timestamp(6)
  load_filter_order     Int      @default(1)
  fail_on_error         Int      @default(0) @db.SmallInt
}

model sym_lock {
  lock_action            String    @id @db.VarChar(50)
  lock_type              String    @db.VarChar(50)
  locking_server_id      String?   @db.VarChar(255)
  lock_time              DateTime? @db.Timestamp(6)
  shared_count           Int       @default(0)
  shared_enable          Int       @default(0)
  last_lock_time         DateTime? @db.Timestamp(6)
  last_locking_server_id String?   @db.VarChar(255)
}

model sym_monitor {
  monitor_id       String    @id @db.VarChar(128)
  node_group_id    String    @default("ALL") @db.VarChar(50)
  external_id      String    @default("ALL") @db.VarChar(255)
  type             String    @db.VarChar(50)
  expression       String?
  threshold        BigInt    @default(0)
  run_period       Int       @default(0)
  run_count        Int       @default(0)
  severity_level   Int       @default(0)
  enabled          Int       @default(0) @db.SmallInt
  create_time      DateTime? @db.Timestamp(6)
  last_update_by   String?   @db.VarChar(50)
  last_update_time DateTime? @db.Timestamp(6)
}

model sym_monitor_event {
  monitor_id       String    @db.VarChar(128)
  node_id          String    @db.VarChar(50)
  event_time       DateTime  @db.Timestamp(6)
  host_name        String?   @db.VarChar(60)
  type             String    @db.VarChar(50)
  threshold        BigInt    @default(0)
  event_value      BigInt    @default(0)
  event_count      Int       @default(0)
  severity_level   Int       @default(0)
  is_resolved      Int       @default(0) @db.SmallInt
  is_notified      Int       @default(0) @db.SmallInt
  last_update_time DateTime? @db.Timestamp(6)

  @@id([monitor_id, node_id, event_time])
}

model sym_node {
  node_id              String             @id @db.VarChar(50)
  node_group_id        String             @db.VarChar(50)
  external_id          String             @db.VarChar(255)
  sync_enabled         Int?               @default(0) @db.SmallInt
  sync_url             String?            @db.VarChar(255)
  schema_version       String?            @db.VarChar(50)
  symmetric_version    String?            @db.VarChar(50)
  config_version       String?            @db.VarChar(50)
  database_type        String?            @db.VarChar(50)
  database_version     String?            @db.VarChar(50)
  heartbeat_time       DateTime?          @db.Timestamp(6)
  timezone_offset      String?            @db.VarChar(6)
  batch_to_send_count  Int?               @default(0)
  batch_in_error_count Int?               @default(0)
  created_at_node_id   String?            @db.VarChar(50)
  deployment_type      String?            @db.VarChar(50)
  sym_node_identity    sym_node_identity?
  sym_node_security    sym_node_security?
}

model sym_node_channel_ctl {
  node_id           String    @db.VarChar(50)
  channel_id        String    @db.VarChar(128)
  suspend_enabled   Int?      @default(0) @db.SmallInt
  ignore_enabled    Int?      @default(0) @db.SmallInt
  last_extract_time DateTime? @db.Timestamp(6)

  @@id([node_id, channel_id])
}

model sym_node_communication {
  node_id              String    @db.VarChar(50)
  queue                String    @db.VarChar(25)
  communication_type   String    @db.VarChar(10)
  lock_time            DateTime? @db.Timestamp(6)
  locking_server_id    String?   @db.VarChar(255)
  last_lock_time       DateTime? @db.Timestamp(6)
  last_lock_millis     BigInt?   @default(0)
  success_count        BigInt?   @default(0)
  fail_count           BigInt?   @default(0)
  skip_count           BigInt?   @default(0)
  total_success_count  BigInt?   @default(0)
  total_fail_count     BigInt?   @default(0)
  total_success_millis BigInt?   @default(0)
  total_fail_millis    BigInt?   @default(0)
  batch_to_send_count  BigInt?   @default(0)
  node_priority        Int?      @default(0)

  @@id([node_id, queue, communication_type])
}

model sym_node_group {
  node_group_id                                                                String                @id @db.VarChar(50)
  description                                                                  String?               @db.VarChar(255)
  create_time                                                                  DateTime?             @db.Timestamp(6)
  last_update_by                                                               String?               @db.VarChar(50)
  last_update_time                                                             DateTime?             @db.Timestamp(6)
  sym_node_group_link_sym_node_group_link_source_node_group_idTosym_node_group sym_node_group_link[] @relation("sym_node_group_link_source_node_group_idTosym_node_group")
  sym_node_group_link_sym_node_group_link_target_node_group_idTosym_node_group sym_node_group_link[] @relation("sym_node_group_link_target_node_group_idTosym_node_group")
}

model sym_node_group_channel_wnd {
  node_group_id String   @db.VarChar(50)
  channel_id    String   @db.VarChar(128)
  start_time    DateTime @db.Timestamp(6)
  end_time      DateTime @db.Timestamp(6)
  enabled       Int      @default(0) @db.SmallInt

  @@id([node_group_id, channel_id, start_time, end_time])
}

model sym_node_group_link {
  source_node_group_id                                                    String                @db.VarChar(50)
  target_node_group_id                                                    String                @db.VarChar(50)
  data_event_action                                                       String                @default("W") @db.Char(1)
  sync_config_enabled                                                     Int                   @default(1) @db.SmallInt
  is_reversible                                                           Int                   @default(0) @db.SmallInt
  create_time                                                             DateTime?             @db.Timestamp(6)
  last_update_by                                                          String?               @db.VarChar(50)
  last_update_time                                                        DateTime?             @db.Timestamp(6)
  sym_conflict                                                            sym_conflict[]
  sym_node_group_sym_node_group_link_source_node_group_idTosym_node_group sym_node_group        @relation("sym_node_group_link_source_node_group_idTosym_node_group", fields: [source_node_group_id], references: [node_group_id], onDelete: NoAction, onUpdate: NoAction, map: "sym_fk_lnk_2_grp_src")
  sym_node_group_sym_node_group_link_target_node_group_idTosym_node_group sym_node_group        @relation("sym_node_group_link_target_node_group_idTosym_node_group", fields: [target_node_group_id], references: [node_group_id], onDelete: NoAction, onUpdate: NoAction, map: "sym_fk_lnk_2_grp_tgt")
  sym_router                                                              sym_router[]
  sym_transform_table                                                     sym_transform_table[]

  @@id([source_node_group_id, target_node_group_id])
}

model sym_node_host {
  node_id              String    @db.VarChar(50)
  host_name            String    @db.VarChar(60)
  ip_address           String?   @db.VarChar(50)
  os_user              String?   @db.VarChar(50)
  os_name              String?   @db.VarChar(50)
  os_arch              String?   @db.VarChar(50)
  os_version           String?   @db.VarChar(50)
  available_processors Int?      @default(0)
  free_memory_bytes    BigInt?   @default(0)
  total_memory_bytes   BigInt?   @default(0)
  max_memory_bytes     BigInt?   @default(0)
  java_version         String?   @db.VarChar(50)
  java_vendor          String?   @db.VarChar(255)
  jdbc_version         String?   @db.VarChar(255)
  symmetric_version    String?   @db.VarChar(50)
  timezone_offset      String?   @db.VarChar(6)
  heartbeat_time       DateTime? @db.Timestamp(6)
  last_restart_time    DateTime  @db.Timestamp(6)
  create_time          DateTime  @db.Timestamp(6)

  @@id([node_id, host_name])
}

model sym_node_host_channel_stats {
  node_id               String   @db.VarChar(50)
  host_name             String   @db.VarChar(60)
  channel_id            String   @db.VarChar(128)
  start_time            DateTime @db.Timestamp(6)
  end_time              DateTime @db.Timestamp(6)
  data_routed           BigInt?  @default(0)
  data_unrouted         BigInt?  @default(0)
  data_event_inserted   BigInt?  @default(0)
  data_extracted        BigInt?  @default(0)
  data_bytes_extracted  BigInt?  @default(0)
  data_extracted_errors BigInt?  @default(0)
  data_bytes_sent       BigInt?  @default(0)
  data_sent             BigInt?  @default(0)
  data_sent_errors      BigInt?  @default(0)
  data_loaded           BigInt?  @default(0)
  data_bytes_loaded     BigInt?  @default(0)
  data_loaded_errors    BigInt?  @default(0)

  @@id([node_id, host_name, channel_id, start_time, end_time])
  @@index([node_id, start_time, end_time], map: "sym_idx_nd_hst_chnl_sts")
}

model sym_node_host_job_stats {
  node_id         String   @db.VarChar(50)
  host_name       String   @db.VarChar(60)
  job_name        String   @db.VarChar(50)
  start_time      DateTime @db.Timestamp(6)
  end_time        DateTime @db.Timestamp(6)
  processed_count BigInt?  @default(0)

  @@id([node_id, host_name, job_name, start_time, end_time])
  @@index([node_id, start_time, end_time], map: "sym_idx_nd_hst_job")
}

model sym_node_host_stats {
  node_id                    String   @db.VarChar(50)
  host_name                  String   @db.VarChar(60)
  start_time                 DateTime @db.Timestamp(6)
  end_time                   DateTime @db.Timestamp(6)
  restarted                  BigInt   @default(0)
  nodes_pulled               BigInt?  @default(0)
  total_nodes_pull_time      BigInt?  @default(0)
  nodes_pushed               BigInt?  @default(0)
  total_nodes_push_time      BigInt?  @default(0)
  nodes_rejected             BigInt?  @default(0)
  nodes_registered           BigInt?  @default(0)
  nodes_loaded               BigInt?  @default(0)
  nodes_disabled             BigInt?  @default(0)
  purged_data_rows           BigInt?  @default(0)
  purged_data_event_rows     BigInt?  @default(0)
  purged_batch_outgoing_rows BigInt?  @default(0)
  purged_batch_incoming_rows BigInt?  @default(0)
  triggers_created_count     BigInt?
  triggers_rebuilt_count     BigInt?
  triggers_removed_count     BigInt?

  @@id([node_id, host_name, start_time, end_time])
  @@index([node_id, start_time, end_time], map: "sym_idx_nd_hst_sts")
}

model sym_node_identity {
  node_id  String   @id @db.VarChar(50)
  sym_node sym_node @relation(fields: [node_id], references: [node_id], onDelete: NoAction, onUpdate: NoAction, map: "sym_fk_ident_2_node")
}

model sym_node_security {
  node_id                    String    @id @db.VarChar(50)
  node_password              String    @db.VarChar(50)
  registration_enabled       Int?      @default(0) @db.SmallInt
  registration_time          DateTime? @db.Timestamp(6)
  initial_load_enabled       Int?      @default(0) @db.SmallInt
  initial_load_time          DateTime? @db.Timestamp(6)
  initial_load_id            BigInt?
  initial_load_create_by     String?   @db.VarChar(255)
  rev_initial_load_enabled   Int?      @default(0) @db.SmallInt
  rev_initial_load_time      DateTime? @db.Timestamp(6)
  rev_initial_load_id        BigInt?
  rev_initial_load_create_by String?   @db.VarChar(255)
  created_at_node_id         String?   @db.VarChar(50)
  sym_node                   sym_node  @relation(fields: [node_id], references: [node_id], onDelete: NoAction, onUpdate: NoAction, map: "sym_fk_sec_2_node")
}

model sym_notification {
  notification_id  String    @id @db.VarChar(128)
  node_group_id    String    @default("ALL") @db.VarChar(50)
  external_id      String    @default("ALL") @db.VarChar(255)
  severity_level   Int       @default(0)
  type             String    @db.VarChar(50)
  expression       String?
  enabled          Int       @default(0) @db.SmallInt
  create_time      DateTime? @db.Timestamp(6)
  last_update_by   String?   @db.VarChar(50)
  last_update_time DateTime? @db.Timestamp(6)
}

model sym_outgoing_batch {
  batch_id                 BigInt
  node_id                  String    @db.VarChar(50)
  channel_id               String?   @db.VarChar(128)
  status                   String?   @db.Char(2)
  load_id                  BigInt?
  extract_job_flag         Int?      @default(0) @db.SmallInt
  load_flag                Int?      @default(0) @db.SmallInt
  error_flag               Int?      @default(0) @db.SmallInt
  common_flag              Int?      @default(0) @db.SmallInt
  ignore_count             BigInt    @default(0)
  byte_count               BigInt    @default(0)
  extract_count            BigInt    @default(0)
  sent_count               BigInt    @default(0)
  load_count               BigInt    @default(0)
  data_event_count         BigInt    @default(0)
  reload_event_count       BigInt    @default(0)
  insert_event_count       BigInt    @default(0)
  update_event_count       BigInt    @default(0)
  delete_event_count       BigInt    @default(0)
  other_event_count        BigInt    @default(0)
  router_millis            BigInt    @default(0)
  network_millis           BigInt    @default(0)
  filter_millis            BigInt    @default(0)
  load_millis              BigInt    @default(0)
  extract_millis           BigInt    @default(0)
  transform_extract_millis BigInt    @default(0)
  transform_load_millis    BigInt    @default(0)
  total_extract_millis     BigInt    @default(0)
  total_load_millis        BigInt    @default(0)
  sql_state                String?   @db.VarChar(10)
  sql_code                 Int       @default(0)
  sql_message              String?
  failed_data_id           BigInt    @default(0)
  failed_line_number       BigInt    @default(0)
  last_update_hostname     String?   @db.VarChar(255)
  last_update_time         DateTime? @db.Timestamp(6)
  create_time              DateTime? @db.Timestamp(6)
  create_by                String?   @db.VarChar(255)
  summary                  String?   @db.VarChar(255)

  @@id([batch_id, node_id])
  @@index([error_flag], map: "sym_idx_ob_in_error")
  @@index([node_id, status], map: "sym_idx_ob_node_status")
  @@index([status], map: "sym_idx_ob_status")
}

model sym_parameter {
  external_id      String    @db.VarChar(255)
  node_group_id    String    @db.VarChar(50)
  param_key        String    @db.VarChar(80)
  param_value      String?
  create_time      DateTime? @db.Timestamp(6)
  last_update_by   String?   @db.VarChar(50)
  last_update_time DateTime? @db.Timestamp(6)

  @@id([external_id, node_group_id, param_key])
}

model sym_registration_redirect {
  registrant_external_id String @id @db.VarChar(255)
  registration_node_id   String @db.VarChar(50)
}

model sym_registration_request {
  node_group_id      String   @db.VarChar(50)
  external_id        String   @db.VarChar(255)
  status             String   @db.Char(2)
  host_name          String   @db.VarChar(60)
  ip_address         String   @db.VarChar(50)
  attempt_count      Int?     @default(0)
  registered_node_id String?  @db.VarChar(50)
  error_message      String?
  create_time        DateTime @db.Timestamp(6)
  last_update_by     String?  @db.VarChar(50)
  last_update_time   DateTime @db.Timestamp(6)

  @@id([node_group_id, external_id, create_time])
  @@index([node_group_id, external_id, status, host_name, ip_address], map: "sym_idx_reg_req_1")
  @@index([status], map: "sym_idx_reg_req_2")
}

model sym_router {
  router_id                 String                    @id @db.VarChar(50)
  target_catalog_name       String?                   @db.VarChar(255)
  target_schema_name        String?                   @db.VarChar(255)
  target_table_name         String?                   @db.VarChar(255)
  source_node_group_id      String                    @db.VarChar(50)
  target_node_group_id      String                    @db.VarChar(50)
  router_type               String?                   @db.VarChar(50)
  router_expression         String?
  sync_on_update            Int                       @default(1) @db.SmallInt
  sync_on_insert            Int                       @default(1) @db.SmallInt
  sync_on_delete            Int                       @default(1) @db.SmallInt
  use_source_catalog_schema Int                       @default(1) @db.SmallInt
  create_time               DateTime                  @db.Timestamp(6)
  last_update_by            String?                   @db.VarChar(50)
  last_update_time          DateTime                  @db.Timestamp(6)
  sym_file_trigger_router   sym_file_trigger_router[]
  sym_node_group_link       sym_node_group_link       @relation(fields: [source_node_group_id, target_node_group_id], references: [source_node_group_id, target_node_group_id], onDelete: NoAction, onUpdate: NoAction, map: "sym_fk_rt_2_grp_lnk")
  sym_trigger_router        sym_trigger_router[]
}

model sym_sequence {
  sequence_name    String    @id @db.VarChar(50)
  current_value    BigInt    @default(0)
  increment_by     Int       @default(1)
  min_value        BigInt    @default(1)
  max_value        BigInt    @default(9999999999)
  cycle            Int?      @default(0) @db.SmallInt
  cache_size       Int       @default(0)
  create_time      DateTime? @db.Timestamp(6)
  last_update_by   String?   @db.VarChar(50)
  last_update_time DateTime  @db.Timestamp(6)
}

model sym_table_reload_request {
  target_node_id    String    @db.VarChar(50)
  source_node_id    String    @db.VarChar(50)
  trigger_id        String    @db.VarChar(128)
  router_id         String    @db.VarChar(50)
  create_time       DateTime  @db.Timestamp(6)
  create_table      Int       @default(0) @db.SmallInt
  delete_first      Int       @default(0) @db.SmallInt
  reload_select     String?
  before_custom_sql String?
  reload_time       DateTime? @db.Timestamp(6)
  load_id           BigInt?
  processed         Int       @default(0) @db.SmallInt
  channel_id        String?   @db.VarChar(128)
  last_update_by    String?   @db.VarChar(50)
  last_update_time  DateTime  @db.Timestamp(6)

  @@id([target_node_id, source_node_id, trigger_id, router_id, create_time])
}

model sym_transform_column {
  transform_id         String    @db.VarChar(50)
  include_on           String    @default("*") @db.Char(1)
  target_column_name   String    @db.VarChar(128)
  source_column_name   String?   @db.VarChar(128)
  pk                   Int?      @default(0) @db.SmallInt
  transform_type       String?   @default("copy") @db.VarChar(50)
  transform_expression String?
  transform_order      Int       @default(1)
  create_time          DateTime? @db.Timestamp(6)
  last_update_by       String?   @db.VarChar(50)
  last_update_time     DateTime? @db.Timestamp(6)

  @@id([transform_id, include_on, target_column_name])
}

model sym_transform_table {
  transform_id         String              @db.VarChar(50)
  source_node_group_id String              @db.VarChar(50)
  target_node_group_id String              @db.VarChar(50)
  transform_point      String              @db.VarChar(10)
  source_catalog_name  String?             @db.VarChar(255)
  source_schema_name   String?             @db.VarChar(255)
  source_table_name    String              @db.VarChar(255)
  target_catalog_name  String?             @db.VarChar(255)
  target_schema_name   String?             @db.VarChar(255)
  target_table_name    String?             @db.VarChar(255)
  update_first         Int?                @default(0) @db.SmallInt
  update_action        String              @default("UPDATE_COL") @db.VarChar(255)
  delete_action        String              @db.VarChar(10)
  transform_order      Int                 @default(1)
  column_policy        String              @default("SPECIFIED") @db.VarChar(10)
  create_time          DateTime?           @db.Timestamp(6)
  last_update_by       String?             @db.VarChar(50)
  last_update_time     DateTime?           @db.Timestamp(6)
  sym_node_group_link  sym_node_group_link @relation(fields: [source_node_group_id, target_node_group_id], references: [source_node_group_id, target_node_group_id], onDelete: NoAction, onUpdate: NoAction, map: "sym_fk_tt_2_grp_lnk")

  @@id([transform_id, source_node_group_id, target_node_group_id])
}

model sym_trigger {
  trigger_id                                             String               @id @db.VarChar(128)
  source_catalog_name                                    String?              @db.VarChar(255)
  source_schema_name                                     String?              @db.VarChar(255)
  source_table_name                                      String               @db.VarChar(255)
  channel_id                                             String               @db.VarChar(128)
  reload_channel_id                                      String               @default("reload") @db.VarChar(128)
  sync_on_update                                         Int                  @default(1) @db.SmallInt
  sync_on_insert                                         Int                  @default(1) @db.SmallInt
  sync_on_delete                                         Int                  @default(1) @db.SmallInt
  sync_on_incoming_batch                                 Int                  @default(0) @db.SmallInt
  name_for_update_trigger                                String?              @db.VarChar(255)
  name_for_insert_trigger                                String?              @db.VarChar(255)
  name_for_delete_trigger                                String?              @db.VarChar(255)
  sync_on_update_condition                               String?
  sync_on_insert_condition                               String?
  sync_on_delete_condition                               String?
  custom_before_update_text                              String?
  custom_before_insert_text                              String?
  custom_before_delete_text                              String?
  custom_on_update_text                                  String?
  custom_on_insert_text                                  String?
  custom_on_delete_text                                  String?
  external_select                                        String?
  tx_id_expression                                       String?
  channel_expression                                     String?
  excluded_column_names                                  String?
  included_column_names                                  String?
  sync_key_names                                         String?
  use_stream_lobs                                        Int                  @default(0) @db.SmallInt
  use_capture_lobs                                       Int                  @default(0) @db.SmallInt
  use_capture_old_data                                   Int                  @default(1) @db.SmallInt
  use_handle_key_updates                                 Int                  @default(0) @db.SmallInt
  stream_row                                             Int                  @default(0) @db.SmallInt
  create_time                                            DateTime             @db.Timestamp(6)
  last_update_by                                         String?              @db.VarChar(50)
  last_update_time                                       DateTime             @db.Timestamp(6)
  sym_channel_sym_trigger_channel_idTosym_channel        sym_channel          @relation("sym_trigger_channel_idTosym_channel", fields: [channel_id], references: [channel_id], onDelete: NoAction, onUpdate: NoAction, map: "sym_fk_trg_2_chnl")
  sym_channel_sym_trigger_reload_channel_idTosym_channel sym_channel          @relation("sym_trigger_reload_channel_idTosym_channel", fields: [reload_channel_id], references: [channel_id], onDelete: NoAction, onUpdate: NoAction, map: "sym_fk_trg_2_rld_chnl")
  sym_trigger_router                                     sym_trigger_router[]
}

model sym_trigger_hist {
  trigger_hist_id           Int       @id
  trigger_id                String    @db.VarChar(128)
  source_table_name         String    @db.VarChar(255)
  source_catalog_name       String?   @db.VarChar(255)
  source_schema_name        String?   @db.VarChar(255)
  name_for_update_trigger   String?   @db.VarChar(255)
  name_for_insert_trigger   String?   @db.VarChar(255)
  name_for_delete_trigger   String?   @db.VarChar(255)
  table_hash                BigInt    @default(0)
  trigger_row_hash          BigInt    @default(0)
  trigger_template_hash     BigInt    @default(0)
  column_names              String
  pk_column_names           String
  last_trigger_build_reason String    @db.Char(1)
  error_message             String?
  create_time               DateTime  @db.Timestamp(6)
  inactive_time             DateTime? @db.Timestamp(6)

  @@index([trigger_id, inactive_time], map: "sym_idx_trigg_hist_1")
}

model sym_trigger_router {
  trigger_id                  String                        @db.VarChar(128)
  router_id                   String                        @db.VarChar(50)
  enabled                     Int                           @default(1) @db.SmallInt
  initial_load_order          Int                           @default(1)
  initial_load_select         String?
  initial_load_delete_stmt    String?
  initial_load_batch_count    Int?                          @default(1)
  ping_back_enabled           Int                           @default(0) @db.SmallInt
  create_time                 DateTime                      @db.Timestamp(6)
  last_update_by              String?                       @db.VarChar(50)
  last_update_time            DateTime                      @db.Timestamp(6)
  sym_router                  sym_router                    @relation(fields: [router_id], references: [router_id], onDelete: NoAction, onUpdate: NoAction, map: "sym_fk_tr_2_rtr")
  sym_trigger                 sym_trigger                   @relation(fields: [trigger_id], references: [trigger_id], onDelete: NoAction, onUpdate: NoAction, map: "sym_fk_tr_2_trg")
  sym_trigger_router_grouplet sym_trigger_router_grouplet[]

  @@id([trigger_id, router_id])
}

model sym_trigger_router_grouplet {
  grouplet_id        String             @db.VarChar(50)
  trigger_id         String             @db.VarChar(128)
  router_id          String             @db.VarChar(50)
  applies_when       String             @db.Char(1)
  create_time        DateTime           @db.Timestamp(6)
  last_update_by     String?            @db.VarChar(50)
  last_update_time   DateTime           @db.Timestamp(6)
  sym_grouplet       sym_grouplet       @relation(fields: [grouplet_id], references: [grouplet_id], onDelete: NoAction, onUpdate: NoAction, map: "sym_fk_trgplt_2_gplt")
  sym_trigger_router sym_trigger_router @relation(fields: [trigger_id, router_id], references: [trigger_id, router_id], onDelete: NoAction, onUpdate: NoAction, map: "sym_fk_trgplt_2_tr")

  @@id([grouplet_id, trigger_id, router_id, applies_when])
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model tab_end {
  id BigInt?

  @@ignore
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model tipo_contato_pessoa {
  id_tipo_contato_pessoa Int              @id(map: "pk_tipo_contato_pessoa") @db.SmallInt
  descricao              String?          @db.VarChar(80)
  dt_update_record       DateTime?        @default(now()) @db.Date
  contato_pessoa         contato_pessoa[]
}

model und_medida {
  id_und_medida                  BigInt                           @id(map: "pk_und_medida") @default(autoincrement())
  ds_und_medida                  String?                          @db.VarChar(30)
  sb_und_medida                  String?                          @db.VarChar(10)
  dt_update_record               DateTime?                        @db.Timestamp(6)
  cp_custo_individual_pecuaria   cp_custo_individual_pecuaria[]
  cp_empreendimento_agricola     cp_empreendimento_agricola[]
  cp_empreendimento_pecuaria     cp_empreendimento_pecuaria[]
  cp_receitas_agr_custo_ind      cp_receitas_agr_custo_ind[]
  cp_receitas_agricola           cp_receitas_agricola[]
  cp_receitas_pec_custo_ind      cp_receitas_pec_custo_ind[]
  cp_receitas_pecuaria           cp_receitas_pecuaria[]
  cr_atividade                   cr_atividade[]
  cr_custeio_agricola_proponente cr_custeio_agricola_proponente[]
  ge_custo_variavel_direto       ge_custo_variavel_direto[]
  ge_estimativa_venda            ge_estimativa_venda[]
  is_atividade_executada         is_atividade_executada[]
  mp_item_fluxo_caixa            mp_item_fluxo_caixa[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model unidade_familiar {
  id_unidade_familiar                                            BigInt           @id(map: "pk_unidade_familiar") @default(autoincrement())
  id_ger_pessoa_provedor                                         BigInt?
  id_ger_pessoa                                                  BigInt
  id_vinculo_familiar                                            Int
  dt_update_record                                               DateTime?        @default(now()) @db.Timestamp(6)
  id_und_empresa                                                 String?          @db.Char(5)
  ativo                                                          Boolean          @default(true)
  id_sincronismo                                                 String?          @default(dbgenerated("(uuid_generate_v4())::character varying(36)")) @db.VarChar(36)
  id_sincronismo_cliente_pro                                     String?          @db.VarChar(36)
  id_sincronismo_cliente                                         String?          @db.VarChar(36)
  ger_pessoa_unidade_familiar_id_ger_pessoaToger_pessoa          ger_pessoa       @relation("unidade_familiar_id_ger_pessoaToger_pessoa", fields: [id_ger_pessoa], references: [id_pessoa_demeter], onDelete: NoAction, onUpdate: NoAction, map: "fk_cliente")
  ger_pessoa_unidade_familiar_id_ger_pessoa_provedorToger_pessoa ger_pessoa?      @relation("unidade_familiar_id_ger_pessoa_provedorToger_pessoa", fields: [id_ger_pessoa_provedor], references: [id_pessoa_demeter], onDelete: NoAction, onUpdate: NoAction, map: "fk_cliente_provedor")
  ger_und_empresa                                                ger_und_empresa? @relation(fields: [id_und_empresa], references: [id_und_empresa], onDelete: NoAction, onUpdate: NoAction, map: "fk_unidade_familiar_und_empresa")
  vinculo_familiar                                               vinculo_familiar @relation(fields: [id_vinculo_familiar], references: [id_vinculo_familiar], onDelete: NoAction, map: "fk_unidade_familiar_vinculo_familiar")

  @@index([id_ger_pessoa])
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model usuario {
  id_usuario                   BigInt                         @id(map: "pk_usuario") @default(autoincrement())
  login_usuario                String                         @unique(map: "uq_usuario_login") @db.VarChar(255)
  nome_usuario                 String?                        @db.VarChar(255)
  email_usuario                String?                        @db.VarChar(255)
  celular_usuario              String?                        @db.VarChar(255)
  token_demeter                String                         @db.VarChar(255)
  data_cadastro                DateTime                       @db.Date
  data_expiracao_token_demeter DateTime                       @db.Date
  ativo                        Boolean
  cpf_usuario                  String?                        @db.VarChar(14)
  matricula_usuario            String?                        @db.Char(5)
  digito_matricula             String?                        @db.Char(1)
  situacao_emater              String?                        @db.Char(1)
  id_und_empresa               String?                        @db.Char(5)
  id_cargo                     String?                        @db.Char(4)
  orgao_classe                 String?                        @db.VarChar(30)
  sexo_usuario                 String?                        @db.Char(1)
  dt_update_record             DateTime?                      @default(now()) @db.Date
  ag_evento_agenda             ag_evento_agenda[]
  ag_evento_usuario            ag_evento_usuario[]
  al_evento_usuario            al_evento_usuario[]
  as_analise                   as_analise[]
  at_atendimento               at_atendimento[]
  at_atendimento_usuario       at_atendimento_usuario[]
  at_prf_see                   at_prf_see[]
  bp_atestado                  bp_atestado[]
  cp_custo_individual_agricola cp_custo_individual_agricola[]
  cp_custo_individual_pecuaria cp_custo_individual_pecuaria[]
  cr_custeio_agricola          cr_custeio_agricola[]
  cr_custeio_pecuaria          cr_custeio_pecuaria[]
  cr_investimento              cr_investimento[]
  is_quest                     is_quest[]
  log_acesso                   log_acesso[]
  mp_animal                    mp_animal[]
  mp_atendimento_minaspec      mp_atendimento_minaspec[]
  mp_controle_leiteiro         mp_controle_leiteiro[]
  mp_dados_complementares      mp_dados_complementares[]
  mp_intervencao               mp_intervencao[]
  mp_manejo_reprodutivo        mp_manejo_reprodutivo[]
  perfil_usuario               perfil_usuario[]
  ger_cargo                    ger_cargo?                     @relation(fields: [id_cargo], references: [id_cargo], onDelete: NoAction, onUpdate: NoAction, map: "fk5j2oxae47ac7gxtfitkc7jwlg")
  ger_und_empresa              ger_und_empresa?               @relation(fields: [id_und_empresa], references: [id_und_empresa], onDelete: NoAction, onUpdate: NoAction, map: "fk_usuario_empresa")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model usuario_mobile_sincronismo {
  id_und_empresa                String    @db.VarChar(10)
  login_usuario                 String    @db.VarChar(50)
  ativo                         Boolean   @default(true)
  data_dtupdate_record          DateTime  @default(now()) @db.Timestamp(6)
  id_usuario_mobile_sincronismo BigInt    @default(autoincrement())
  automatico                    Boolean?  @default(false)
  sn_sincronizado               Int?      @default(0)
  dat_ini_sincronismo           DateTime? @db.Timestamp(6)
  dat_fim_sincronismo           DateTime? @db.Timestamp(6)
  ip_cliente                    String?   @default(dbgenerated("inet_client_addr()")) @db.VarChar(100)
  app_name                      String?   @default(dbgenerated("current_setting('application_name'::text)")) @db.VarChar(100)

  @@ignore
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model vinculo_familiar {
  id_vinculo_familiar Int                @id(map: "pk_vinculo_familiar") @default(autoincrement())
  descricao           String             @db.VarChar(100)
  data_atualizacao    DateTime?          @db.Timestamp(6)
  unidade_familiar    unidade_familiar[]

  @@index([descricao], map: "ix_vinculo_familiar_descricao")
}
