scalar DateTime
scalar BigInt

type Query {
  produtor(id: Int, cpf: String): Produtor
  produtores: [Produtor]
  propriedades: [Propriedade]
  produtoresFull: [ProdutorPropriedades]
  perfil: [Perfil]
  dadosProducao: [DadosProducao]
  perfisPorProdutor(produtorId: String): [Perfil]
  # usuario(id: String, matricula_usuario: String): Usuario
  usuarios(ids: String, matriculas: String): [Usuario]
}

type Mutation {
  createPerfil(input: CreatePerfilInput): Perfil
  updatePerfil(id: Int, updatePerfilInput: UpdatePerfilInput): Perfil
  deletePerfil(id: Int): Perfil
}

type Propriedade {
  id_pl_propriedade: BigInt
  nome_propriedade: String
  logradouro: String
  bairro: String
  complemento: String
  cep: String
  numero: String
  area_total: Float
  geo_ponto: String
  geo_ponto_texto: String
  area_condominio: String
  origem_ocupacao: String
  atividade_principal: String
  numero_registro_imovel: String
  nirf: String
  car: String
  ccir: String
  numero_instalacao_cemig: String
  distancia_sede: String
  tempo_ocupacao_imovel: String
  id_emater: String
  id_distrito: String
  id_municipio: String
  id_und_empresa: String
  id_sincronismo: String
  id_tipo_logradouro: String
  dt_update_record: String # Ex: "2019-10-09 14:11:43.121932"
  ativo: Boolean
  ds_roteiro_acesso: String
  sn_ctd: String
  municipio: Municipio
  atividade: Atividade
  produtor_propriedade: ProdutorPropriedades
  produtor: Produtor
  at_prf_see_propriedade: Atividade
}

type Municipio {
  id_municipio: ID!
  fk_estado: Int!
  nm_municipio: String
  cd_ibge: String
  cd_cpi: String
  fk_reg_planejamento: Int
  fk_reg_administrativa: Int
  dt_update_record: String!
  fk_microterritorio: Int
  data_atualizacao_rm: String
  tamanho_modulo_fiscal: Float
  nr_latitude: String
  nr_longitude: String
}

type Produtor {
  id_pessoa_demeter: BigInt!
  id_pessoa: String!
  nm_pessoa: String
  ds_apelido: String
  sn_pronaf: String
  sn_ativo: String
  tp_sexo: String
  nr_cpf_cnpj: String!
  dt_nascimento: DateTime
  nr_identidade: String
  ds_orgao_expedidor: String
  fk_uf_emissor: String
  tp_desativacao: String
  dt_desativacao: String
  nm_nacionalidade: String
  fk_est_civil: String
  nm_mae: String
  nm_pai: String
  nm_profissao: String
  nr_ins_produtor_rural: String
  dap: String
  tp_pessoa: String
  id_und_empresa: String
  sn_principal_provedor: String
  ds_email: String
  dt_update_record: DateTime
  id_sincronismo: String
  sn_ctd: String
  caf: String
  propriedades: [Propriedade]
  perfis: [Perfil]
}

type ProdutorPropriedades {
  propriedade_id: BigInt
  produtor_id: BigInt
  id_und_empresa: String
  id_pl_tipo_posse: Int
  produtor: Produtor
  Propriedade: [Propriedade]
}

type Perfil {
  id: BigInt!
  data_preenchimento: DateTime
  data_atualizacao: DateTime
  tipo_perfil: String
  id_cliente: BigInt
  participa_organizacao: Boolean
  nivel_tecnologico_cultivo: BigInt
  sistema_producao: BigInt
  condicao_posse: BigInt
  dap_caf_vigente: Boolean
  credito_rural: Boolean
  fonte_captacao_agua: BigInt
  forma_esgotamento_sanitario: BigInt
  possui_cadastro_car: Boolean
  aderiu_pra: Boolean
  ciente_iniciativas_regularizacao_pra: Boolean
  realiza_escalonamento_producao: Boolean
  procedimento_pos_colheita: BigInt
  tipo_gestao_unidade: String
  pessoas_processamento_alimentos: Int
  tipo_estabelecimento: String
  tipo_pessoa_juridica: String
  agroindustria_precisa_adaptacao_reforma: Boolean
  possui_registro_orgao_fiscalizacao_sanitaria: Boolean
  orgao_fiscalizacao_sanitaria: String
  atividades_usam_recursos_hidricos: BigInt
  atividades_com_regularizacao_ambiental: BigInt
  possui_agroindustria_propria: Boolean
  grau_interesse_pnae: String
  id_tecnico: BigInt
  id_dados_producao_agro_industria: BigInt
  id_dados_producao_in_natura: BigInt
  produtor: Produtor
  usuario: Usuario
  dados_producao_agro_industria: DadosProducao
  dados_producao_in_natura: DadosProducao
  at_prf_see_propriedade: Atividade
}

type DadosProducao {
  id: BigInt!
  controla_custos_producao: Boolean
  local_comercializacao: BigInt
  valor_total_obtido_pnae: BigInt
  forma_entrega_produtos: BigInt
  dificuldade_fornecimento: BigInt
  informacoes_adicionais: String
  tipo_regularizacao_uso_recursos_hidricos: String
  tipo_regularizacao_ambiental: String
  valor_total_obtido_outros: BigInt
  perfil: Perfil
  at_prf_see_grupos_produtos: [GrupoProdutosPerfil]
}

type GrupoProdutosPerfil {
  id: BigInt!
  id_dados_producao: BigInt!
  id_grupo_produtos: BigInt!
  producao_aproximada_ultimo_ano_pnae: BigInt
  area_utilizada: Float
  producao_aproximada_ultimo_ano_total: BigInt
  at_prf_see_dados_producao: DadosProducao!
  at_prf_grupo_produto: GrupoProduto!
  at_prf_see_produto: [ProdutoPerfil]
}

type GrupoProduto {
  id_grupo: BigInt!
  id_grupo_legado: Int
  tipo: Int
  nm_grupo: String
  dados_producao_estratificados_por_produto: Boolean!
  gruposProdutos: [GrupoProdutosPerfil]
}

type ProdutoPerfil {
  id: BigInt!
  id_perfil_grupo: BigInt!
  id_produto: BigInt!
  area_utilizada: Float
  producao_aproximada_ultimo_ano_pnae: BigInt
  producao_aproximada_ultimo_ano_total: BigInt
  grupoProdutos: GrupoProdutosPerfil!
  at_prf_produto: ProdutoDetails!
}

type ProdutoDetails {
  id_produto: BigInt!
  id_legado: Int
  nm_produto: String
  tipo: Int
  id_grupo_legado: Int
  sg_und_medida: String
  produtos: [ProdutoPerfil]
}

type Atividade {
  id: BigInt!
  id_perfil_see: BigInt!
  id_propriedade: BigInt
  atividade: String
  producao_dedicada_pnae: Boolean
  perfil: Perfil
  pl_propriedade: Propriedade
}

type Usuario {
  id_usuario: BigInt!
  login_usuario: String!
  nome_usuario: String
  email_usuario: String
  celular_usuario: String
  token_demeter: String!
  data_cadastro: DateTime!
  data_expiracao_token_demeter: DateTime!
  ativo: Boolean!
  cpf_usuario: String
  matricula_usuario: String
  digito_matricula: String
  situacao_emater: String
  id_und_empresa: String
  id_cargo: String
  orgao_classe: String
  sexo_usuario: String
  dt_update_record: DateTime
  at_prf_see: [Perfil!]!
  perfil_demeter: [PerfilUsuario]
  #at_atendimento: [Atendimento!]!
  #at_atendimento_usuario: [AtendimentoUsuario!]!
  #ger_cargo: GerCargo
}

type PerfilDemeter {
  id_perfil: BigInt
  descricao_perfil: String
  dt_update_record: String
  perfil_usuario: [PerfilUsuario]
}

type PerfilUsuario {
  id_perfil: BigInt
  perfil: PerfilDemeter
  usuario: Usuario
  id_usuario: BigInt
  dt_update_record: String
}
